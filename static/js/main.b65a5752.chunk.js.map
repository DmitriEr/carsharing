{"version":3,"sources":["redux/type/index.ts","redux/actions/index.ts","redux/rootReducer/index.ts","server/userLocation/index.ts","assets/common/location.svg","constants/common/index.ts","redux/selectors/index.ts","components/common/Head/index.tsx","components/mainPage/Order/index.tsx","assets/mainPage/slider/Slide_1.jpg","assets/mainPage/slider/Slide_2.png","assets/mainPage/slider/Slide_3.png","assets/mainPage/slider/Slide_4.png","assets/mainPage/sideBar/Facebook_white.svg","assets/mainPage/sideBar/Instagram.svg","assets/mainPage/sideBar/Telegram_white.svg","constants/mainPage/index.ts","components/common/SideBar/index.tsx","assets/mainPage/slider/left.svg","assets/mainPage/slider/right.svg","components/mainPage/Slider/index.tsx","components/mainPage/index.tsx","server/geocodeLocation/index.ts","components/orderPage/Location/Map/index.tsx","server/data/index.ts","components/orderPage/Location/SelectAddress/index.tsx","components/orderPage/Location/index.tsx","components/common/Loader/index.tsx","constants/orderPage/index.ts","components/orderPage/Cars/index.tsx","components/orderPage/Result/index.tsx","components/orderPage/Tabs/index.tsx","components/orderPage/Option/Date/index.tsx","components/orderPage/Option/Lists/index.tsx","helper/index.ts","components/orderPage/Option/index.tsx","components/orderPage/Confirm/index.tsx","server/createOrder/index.tsx","components/common/ModalWindow/index.tsx","components/orderPage/index.tsx","server/getOrderById/index.ts","constants/redux/index.ts","components/confirmOrder/index.tsx","redux/reducers/userInfoReducer.ts","redux/reducers/userOrderReducer.ts","redux/reducers/userPrice.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["CHANGE_USER_CITY","CHANGE_POINT","CHANGE_MODEL","CHANGE_COLOR","CHANGE_TIME","CHANGE_PRICE","CHANGE_OPTION","CALCULATE_PRICE","CLEAR_ORDER","changeUserCity","item","type","payload","changePoint","changeModel","changeOption","history","getUserLocation","a","url","process","fetch","response","ok","Error","status","text","json","data","message","translateCityName","Samara","Ulyanovsk","Saransk","Kazan","Krasnodar","Ufa","Saratov","Volgograd","Voronezh","Sterlitamak","Tambov","Arkhangelsk","Krasnoyarsk","place","state","information","userCity","page","router","location","pathname","list","order","orderList","info","resultMoney","price","Header","Layout","Head","dispatch","useDispatch","userLocation","useSelector","useEffect","then","translate","city","className","src","alt","Content","Footer","Order","to","href","menuItems","socialNetworks","picture","facebook","name","link","instagram","telegram","sliderItems","title","content","background","background_1","background_2","background_3","background_4","Sider","Item","Menu","SideBar","currentPage","split","useState","widthPercent","setWidthPercent","sideOpen","setSideOpen","width","onClick","map","toUpperCase","network","target","preview","length","Slider","sliderRef","useRef","handlerLeft","current","prev","handlerRight","next","dots","ref","index","classNames","left","right","MainPage","style","overflow","getCoordinates","placeName","trim","Map","points","userData","userPoint","dataBase","setDataBase","latitude","longtitude","zoom","userCoordsData","setUserCoordsData","mapContainer","setMap","value","lat","lng","results","cityList","filter","components","_type","geometry","forEach","address","includes","mapboxgl","Marker","setLngLat","addTo","accessToken","container","center","bearing","initMap","flyTo","essential","urlCommon","headerCommon","getCars","headers","getCities","getPoints","getRate","getOrderStatus","Option","Select","SelectAddress","options","initValue","deletePoint","deleteOption","placeholder","showArrow","showSearch","bordered","onChange","cityId","pointId","label","Location","cities","setCities","setPoints","cityData","checkPoint","result","point","newPoints","reduce","ind","some","obj","push","id","Loader","statuses","resultBtnsText","radioBtnsText","Cars","setColorsOpt","userCar","currentCar","cars","setCars","radioBtn","setRadioBtn","isLoading","setIsLoading","arrayCars","setArrayCars","thumbnail","path","startsWith","categoryId","Group","e","priceMin","priceMax","number","colors","size","classnames","min","max","pathImg","color","carId","selectCar","referrerPolicy","crossOrigin","Result","numberStatus","switchForm","car","date","petrol","seat","steer","checkOption","bool","count","visible","parseInt","checkStatus","active","orderNumber","showMoney","disabled","showTitle","Tabs","setNumberStatus","checkPrevStatus","findIndex","_","hiddenMobile","formatter","Intl","DateTimeFormat","day","month","year","hour","minute","DateSelect","queue","setDiffTime","diffTime","disabledDate","option","moments","setMomentStart","setMomentEnd","carData","direction","showTime","format","onOk","timeToSeconds","_d","getTime","end","start","time","Date","allowClear","Lists","setOption","getTimeToString","minutes","dayCount","Math","floor","hourCount","minuteCount","colorsOpt","dispacth","setColor","money","setMoney","setPrice","rate","setRates","now","finishDate","setFinishDate","momentStart","momentEnd","newValue","rateTypeId","unit","rateId","selectedDate","valueOf","checkedValues","checkValue","find","undefined","Confirm","createOrder","method","Authorization","body","JSON","stringify","answer","ModalWindow","statusId","setStatusId","orderValue","orderMoney","orderStatusId","dateFrom","dateTo","isFullTank","isNeedChildChair","isRightWheel","console","log","localStorage","setItem","maskStyle","backgroundColor","WebkitBoxShadow","closable","centered","footer","getItem","OrderPage","showCurrentStatus","nextStatus","getOrderById","initState","orderTitles","Модель","Цвет","Тариф","ConfirmOrder","setResult","Object","entries","currentState","userInfoReducer","action","userOrderReducer","userPrice","createBrowserHistory","store","createStore","combineReducers","connectRouter","composeWithDevTools","App","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b65a5752.chunk.js","sourcesContent":["export const CHANGE_USER_CITY = 'CHANGE_USER_CITY';\r\nexport const CHANGE_POINT = 'CHANGE_POINT';\r\nexport const CHANGE_MODEL = 'CHANGE_MODEL';\r\nexport const CHANGE_COLOR = 'CHANGE_COLOR';\r\nexport const CHANGE_TIME = 'CHANGE_TIME';\r\nexport const CHANGE_PRICE = 'CHANGE_PRICE';\r\nexport const CHANGE_OPTION = 'CHANGE_OPTION';\r\nexport const CALCULATE_PRICE = 'CALCULATE_PRICE';\r\nexport const CLEAR_ORDER = 'CLEAR_ORDER';\r\n","import {\r\n  CHANGE_USER_CITY,\r\n  CHANGE_POINT,\r\n  CHANGE_MODEL,\r\n  CHANGE_COLOR,\r\n  CHANGE_TIME,\r\n  CHANGE_PRICE,\r\n  CHANGE_OPTION,\r\n  CALCULATE_PRICE,\r\n  CLEAR_ORDER,\r\n} from '../type';\r\nimport {\r\n  GenericActionOrder,\r\n  GenericActionString,\r\n  GenericActionPoint,\r\n  OrderType,\r\n  pointInfo,\r\n} from '../../interfaces';\r\n\r\nexport function changeUserCity(item: string): GenericActionString {\r\n  return {\r\n    type: CHANGE_USER_CITY,\r\n    payload: item,\r\n  };\r\n}\r\n\r\nexport function changePoint(item: pointInfo): GenericActionPoint {\r\n  return {\r\n    type: CHANGE_POINT,\r\n    payload: item,\r\n  };\r\n}\r\n\r\nexport function changeModel(item: OrderType): GenericActionOrder {\r\n  return {\r\n    type: CHANGE_MODEL,\r\n    payload: item,\r\n  };\r\n}\r\n\r\nexport function changeColor(item: string): GenericActionString {\r\n  return {\r\n    type: CHANGE_COLOR,\r\n    payload: item,\r\n  };\r\n}\r\n\r\ntype CommonType = {\r\n  value: string;\r\n  count: number;\r\n  rateId?: string;\r\n  start?: number;\r\n  end?: number;\r\n};\r\n\r\nexport function changeTime(\r\n  item: CommonType\r\n): { type: string; payload: CommonType } {\r\n  return {\r\n    type: CHANGE_TIME,\r\n    payload: item,\r\n  };\r\n}\r\n\r\nexport function changePrice(\r\n  item: CommonType\r\n): { type: string; payload: CommonType } {\r\n  return {\r\n    type: CHANGE_PRICE,\r\n    payload: item,\r\n  };\r\n}\r\n\r\ntype SelectType = { value: string; visible: boolean };\r\n\r\nexport function changeOption(\r\n  item: SelectType\r\n): { type: string; payload: SelectType } {\r\n  return {\r\n    type: CHANGE_OPTION,\r\n    payload: item,\r\n  };\r\n}\r\n\r\nexport function calculatPrice(item: number): { type: string; payload: number } {\r\n  return {\r\n    type: CALCULATE_PRICE,\r\n    payload: item,\r\n  };\r\n}\r\n\r\nexport function clearOrder(\r\n  item: OrderType[]\r\n): { type: string; payload: OrderType[] } {\r\n  return {\r\n    type: CLEAR_ORDER,\r\n    payload: item,\r\n  };\r\n}\r\n","import { combineReducers } from 'redux';\r\nimport { History } from 'history';\r\nimport { connectRouter } from 'connected-react-router';\r\nimport { userInfoReducer } from '../reducers/userInfoReducer';\r\nimport { userOrderReducer } from '../reducers/userOrderReducer';\r\nimport { userPrice } from '../reducers/userPrice';\r\n\r\nexport const createRootReducer = (history: History) =>\r\n  combineReducers({\r\n    information: userInfoReducer,\r\n    order: userOrderReducer,\r\n    price: userPrice,\r\n    router: connectRouter(history),\r\n  });\r\n","import { TypeUserLocation } from './interface';\r\n\r\nconst link = 'https://ipinfo.io';\r\n\r\nexport const getUserLocation: () => Promise<TypeUserLocation> = async () => {\r\n  try {\r\n    const url = `${link}?token=${process.env.REACT_APP_LOCATION}`;\r\n    const response = await fetch(url);\r\n\r\n    if (!response.ok) {\r\n      throw new Error(`HTTPS ${response.status}: ${await response.text()}`);\r\n    }\r\n\r\n    const data = await response.json();\r\n    return data;\r\n  } catch (error) {\r\n    throw new Error(`Error in ipinfo - ${error.message}`);\r\n  }\r\n};\r\n","export default __webpack_public_path__ + \"static/media/location.480be180.svg\";","export const translateCityName: { [x: string]: string } = {\r\n  Samara: 'Самара',\r\n  Ulyanovsk: 'Ульяновск',\r\n  Saransk: 'Саранск',\r\n  Kazan: 'Казань',\r\n  Krasnodar: 'Краснодар',\r\n  Ufa: 'Уфа',\r\n  Saratov: 'Саратов',\r\n  Volgograd: 'Волгоград',\r\n  Voronezh: 'Воронеж',\r\n  Sterlitamak: 'Стерлитамак',\r\n  Tambov: 'Тамбов',\r\n  Arkhangelsk: 'Архангельск',\r\n  Krasnoyarsk: 'Красноярск',\r\n  'Naberezhnye Chelny': 'Набережные челны',\r\n};\r\n","import { RootReducer } from '../../interfaces';\r\n\r\nexport const place = (state: RootReducer) => state.information.userCity;\r\nexport const page = (state: RootReducer) => state.router.location.pathname;\r\nexport const list = (state: RootReducer) => state.order.orderList;\r\nexport const info = (state: RootReducer) => state.information;\r\nexport const resultMoney = (state: RootReducer) => state.price;\r\n","import React, { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { changeUserCity } from '../../../redux/actions';\r\nimport { Layout } from 'antd';\r\nimport { getUserLocation } from '../../../server/userLocation';\r\nimport { TypeUserLocation } from '../../../server/userLocation/interface';\r\nimport location from '../../../assets/common/location.svg';\r\nimport { translateCityName } from '../../../constants/common';\r\nimport { place } from '../../../redux/selectors';\r\nimport './style.scss';\r\n\r\nconst { Header } = Layout;\r\n\r\nexport const Head: React.FunctionComponent = () => {\r\n  const dispatch = useDispatch();\r\n  const userLocation: string = useSelector(place);\r\n\r\n  useEffect(() => {\r\n    getUserLocation().then((userCity: TypeUserLocation) => {\r\n      const translate = translateCityName[userCity.city];\r\n      dispatch(changeUserCity(translate));\r\n      // dispatch(changeUserCity({ userCity: translate, id: '' }));\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <Header className=\"order__header\">\r\n      <span className=\"header__logo\">Need for drive</span>\r\n      <div className=\"header__location\">\r\n        <img src={location} alt=\"location\" />\r\n        <span className=\"header__city\">{userLocation}</span>\r\n      </div>\r\n    </Header>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { Layout, Button } from 'antd';\r\nimport { Link } from 'react-router-dom';\r\nimport { Head } from '../../common/Head';\r\nimport './style.scss';\r\n\r\nconst { Content, Footer } = Layout;\r\n\r\nexport const Order: React.FunctionComponent = () => (\r\n  <Layout className=\"main-page__order\">\r\n    <Head />\r\n    <Content className=\"content\">\r\n      <div className=\"wrapper\">\r\n        <div className=\"name common\">Каршеринг</div>\r\n        <div className=\"title common\">Need for drive</div>\r\n        <div className=\"description common\">\r\n          Поминутная аренда авто твоего города\r\n        </div>\r\n        <Link to=\"/carsharing/order\">\r\n          <Button className=\"btn\" type=\"primary\">\r\n            Забронировать\r\n          </Button>\r\n        </Link>\r\n      </div>\r\n    </Content>\r\n    <Footer className=\"footer\">\r\n      <span>© 2016-2019 «Need for drive»</span>\r\n      <a href=\"tel:8-495-234-22-44\">8 (495) 234-22-44</a>\r\n    </Footer>\r\n  </Layout>\r\n);\r\n","export default __webpack_public_path__ + \"static/media/Slide_1.4cff0d29.jpg\";","export default __webpack_public_path__ + \"static/media/Slide_2.79c70027.png\";","export default __webpack_public_path__ + \"static/media/Slide_3.a2384b88.png\";","export default __webpack_public_path__ + \"static/media/Slide_4.77d3edc0.png\";","export default __webpack_public_path__ + \"static/media/Facebook_white.01c0ca6a.svg\";","export default __webpack_public_path__ + \"static/media/Instagram.5e14e95a.svg\";","export default __webpack_public_path__ + \"static/media/Telegram_white.09f73cfe.svg\";","import background_1 from '../../assets/mainPage/slider/Slide_1.jpg';\r\nimport background_2 from '../../assets/mainPage/slider/Slide_2.png';\r\nimport background_3 from '../../assets/mainPage/slider/Slide_3.png';\r\nimport background_4 from '../../assets/mainPage/slider/Slide_4.png';\r\nimport facebook from '../../assets/mainPage/sideBar/Facebook_white.svg';\r\nimport instagram from '../../assets/mainPage/sideBar/Instagram.svg';\r\nimport telegram from '../../assets/mainPage/sideBar/Telegram_white.svg';\r\n\r\nexport const menuItems: string[] = [\r\n  'парковка',\r\n  'страховка',\r\n  'бензин',\r\n  'обслуживание',\r\n];\r\n\r\nexport const socialNetworks: {\r\n  picture: string;\r\n  name: string;\r\n  link: string;\r\n}[] = [\r\n  {\r\n    picture: facebook,\r\n    name: 'facebook',\r\n    link: 'https://www.facebook.com/dmitri.erkin',\r\n  },\r\n  {\r\n    picture: instagram,\r\n    name: 'instagram',\r\n    link: 'https://www.instagram.com/idmitriier/?hl=ru',\r\n  },\r\n  {\r\n    picture: telegram,\r\n    name: 'telegram',\r\n    link: 'https://web.telegram.org/',\r\n  },\r\n];\r\n\r\nexport const sliderItems: { [x: string]: string }[] = [\r\n  {\r\n    title: 'Бесплатный парковка',\r\n    content:\r\n      'Оставляйте машину на платных городских парковках и разрешенных местах, не нарушая ПДД, а также в аэропортах.',\r\n    background: background_1,\r\n  },\r\n  {\r\n    title: 'Страховка',\r\n    content: 'Полная страховка страховка автомобиля',\r\n    background: background_2,\r\n  },\r\n  {\r\n    title: 'Бензин',\r\n    content: 'Полный бак на любой заправке города за наш счёт',\r\n    background: background_3,\r\n  },\r\n  {\r\n    title: 'Обслуживание',\r\n    content: 'Автомобиль проходит еженедельное ТО',\r\n    background: background_4,\r\n  },\r\n];\r\n","import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\nimport { Layout, Menu, Image } from 'antd';\r\nimport { menuItems, socialNetworks } from '../.././../constants/mainPage';\r\nimport { page } from '../../../redux/selectors';\r\nimport './style.scss';\r\n\r\nconst { Sider } = Layout;\r\nconst { Item } = Menu;\r\n\r\nexport const SideBar: React.FunctionComponent = () => {\r\n  const currentPage = useSelector(page).split('/');\r\n\r\n  const [widthPercent, setWidthPercent] = useState<string | number>(80);\r\n  const [sideOpen, setSideOpen] = useState<boolean>(false);\r\n\r\n  const showMenu = () => {\r\n    if (sideOpen) {\r\n      setWidthPercent(80);\r\n      setSideOpen(false);\r\n    } else {\r\n      setWidthPercent('100%');\r\n      setSideOpen(true);\r\n    }\r\n  };\r\n\r\n  const switchSlide = () => {\r\n    setSideOpen(false);\r\n    setWidthPercent(80);\r\n  };\r\n\r\n  const showContent = () => {\r\n    if (sideOpen) {\r\n      return (\r\n        <div className=\"menu\">\r\n          <div className=\"menu-open\">\r\n            <div className=\"inner-wrapper\">\r\n              <Menu className=\"items\">\r\n                {menuItems.map((item: string) => (\r\n                  <Item onClick={() => switchSlide()} key={item}>\r\n                    <Link to=\"/carsharing\" className=\"item\">\r\n                      {item.toUpperCase()}\r\n                    </Link>\r\n                  </Item>\r\n                ))}\r\n              </Menu>\r\n              <ul className=\"links\">\r\n                {socialNetworks.map(\r\n                  (network: {\r\n                    picture: string;\r\n                    name: string;\r\n                    link: string;\r\n                  }) => {\r\n                    const { picture, name, link } = network;\r\n                    return (\r\n                      <a href={link} target=\"blank\" key={name} className=\"link\">\r\n                        <Image\r\n                          src={picture}\r\n                          alt=\"social\"\r\n                          preview={false}\r\n                          className=\"img\"\r\n                        />\r\n                      </a>\r\n                    );\r\n                  }\r\n                )}\r\n              </ul>\r\n            </div>\r\n          </div>\r\n          <div\r\n            className={\r\n              currentPage[currentPage.length - 1] === 'order'\r\n                ? 'menu-full dark'\r\n                : 'menu-full light'\r\n            }\r\n          ></div>\r\n        </div>\r\n      );\r\n    }\r\n    return null;\r\n  };\r\n\r\n  return (\r\n    <Sider className=\"sidebar\" width={widthPercent}>\r\n      <div\r\n        onClick={showMenu}\r\n        className={sideOpen ? 'btn-off btn' : 'btn-on btn'}\r\n      />\r\n      {showContent()}\r\n    </Sider>\r\n  );\r\n};\r\n","export default __webpack_public_path__ + \"static/media/left.1752ae91.svg\";","export default __webpack_public_path__ + \"static/media/right.7591c327.svg\";","import React, { useRef } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Carousel, Image, Layout, Button } from 'antd';\r\nimport classNames from 'classnames';\r\nimport { sliderItems } from '../../../constants/mainPage';\r\nimport left from '../../../assets/mainPage/slider/left.svg';\r\nimport right from '../../../assets/mainPage/slider/right.svg';\r\nimport './style.scss';\r\n\r\nconst { Content } = Layout;\r\n\r\nexport const Slider: React.FunctionComponent = () => {\r\n  const sliderRef = useRef(null);\r\n\r\n  const handlerLeft = () => sliderRef.current.prev();\r\n  const handlerRight = () => sliderRef.current.next();\r\n\r\n  return (\r\n    <Carousel\r\n      className=\"main-page__slider\"\r\n      dots={{ className: 'btn-down' }}\r\n      ref={sliderRef}\r\n    >\r\n      {sliderItems.map(({ title, content, background }, index) => {\r\n        return (\r\n          <Layout key={title} className=\"wrapper\">\r\n            <Content className=\"slide\">\r\n              <Image\r\n                src={background}\r\n                alt={title}\r\n                className={classNames('background', `background-${index}`)}\r\n                preview={false}\r\n              />\r\n              <div className=\"filter\"></div>\r\n              <Button\r\n                type=\"ghost\"\r\n                className=\"control-left control\"\r\n                onClick={handlerLeft}\r\n              >\r\n                <Image src={left} alt=\"left\" preview={false} />\r\n              </Button>\r\n              <Button\r\n                type=\"ghost\"\r\n                className=\"control-right control\"\r\n                onClick={handlerRight}\r\n              >\r\n                <Image src={right} alt=\"right\" preview={false} />\r\n              </Button>\r\n              <div className=\"content\">\r\n                <span className=\"title\">{title}</span>\r\n                <div className=\"description\">{content}</div>\r\n                <Link to=\"/carsharing/order\">\r\n                  <Button\r\n                    className={classNames('btn', `btn-${index}`)}\r\n                    type=\"primary\"\r\n                  >\r\n                    Подробнее\r\n                  </Button>\r\n                </Link>\r\n              </div>\r\n            </Content>\r\n          </Layout>\r\n        );\r\n      })}\r\n    </Carousel>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { Layout } from 'antd';\r\nimport { Order } from './Order';\r\nimport { SideBar } from '../common/SideBar';\r\nimport { Slider } from './Slider';\r\nimport './style.scss';\r\n\r\nexport const MainPage: React.FunctionComponent = () => (\r\n  <Layout\r\n    className=\"main-page\"\r\n    style={{ overflow: 'hidden', background: '#fff' }}\r\n  >\r\n    <SideBar />\r\n    <Order />\r\n    <Slider />\r\n  </Layout>\r\n);\r\n","interface HTTPResponseCoords {\r\n  results: {\r\n    geometry: { lat: number; lng: number };\r\n    components: { _type: string };\r\n  }[];\r\n}\r\n\r\nexport const getCoordinates: (\r\n  placeName: string\r\n) => Promise<HTTPResponseCoords> = async (placeName: string) => {\r\n  try {\r\n    const url = `https://api.opencagedata.com/geocode/v1/json?q=${placeName.trim()}&key=${\r\n      process.env.REACT_APP_OPENCAGEDATA\r\n    }`;\r\n    const response = await fetch(url);\r\n\r\n    if (!response.ok) {\r\n      throw new Error(`HTTPS ${response.status}: ${await response.text()}`);\r\n    }\r\n\r\n    const data = await response.json();\r\n    return data;\r\n  } catch (error) {\r\n    throw new Error(`Error in geocode - ${error.message}`);\r\n  }\r\n};\r\n","import React, { useState, useEffect, useRef } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport mapboxgl from 'mapbox-gl';\r\nimport 'mapbox-gl/dist/mapbox-gl.css';\r\nimport 'react-map-gl-geocoder/dist/mapbox-gl-geocoder.css';\r\nimport { getCoordinates } from '../../../../server/geocodeLocation';\r\nimport { info, list } from '../../../../redux/selectors';\r\nimport { pointInfo } from '../../../../interfaces';\r\nimport './style.scss';\r\n\r\ntype MapType = {\r\n  points: pointInfo[];\r\n};\r\n\r\nexport const Map: React.FunctionComponent<MapType> = ({ points }) => {\r\n  const userData = useSelector(info);\r\n  const userPoint = useSelector(list);\r\n\r\n  const [dataBase, setDataBase] = useState<string[]>([]);\r\n\r\n  const [userCoordsData, setUserCoordsData] = useState<{ [x: string]: number }>(\r\n    {\r\n      latitude: 0,\r\n      longtitude: 0,\r\n      zoom: 10,\r\n    }\r\n  );\r\n  const mapContainer = useRef<HTMLDivElement>(null);\r\n  const [map, setMap] = useState(null);\r\n\r\n  const { userCity } = userData;\r\n  const { value } = userPoint[0];\r\n\r\n  useEffect(() => {\r\n    if (userCity || value.length) {\r\n      getCoordinates(`${userCity} ${value}`).then(({ results }) => {\r\n        let lat;\r\n        let lng;\r\n        if (value.length === 0) {\r\n          const cityList = results.filter((item) => {\r\n            if (item.components._type === 'city') {\r\n              return true;\r\n            }\r\n          });\r\n          const [{ geometry }] = cityList;\r\n          lng = geometry.lng;\r\n          lat = geometry.lat;\r\n        } else {\r\n          const [{ geometry }] = results;\r\n          lng = geometry.lng;\r\n          lat = geometry.lat;\r\n        }\r\n        setUserCoordsData({\r\n          latitude: lat,\r\n          longtitude: lng,\r\n          zoom: value.length ? 15 : 10,\r\n        });\r\n      });\r\n    }\r\n  }, [userCity, value]);\r\n\r\n  useEffect(() => {\r\n    if (userCity && map && points) {\r\n      points.forEach((address) => {\r\n        if (!dataBase.includes(address.value)) {\r\n          setDataBase((prev) => [...prev, address.value]);\r\n          getCoordinates(`${userCity}, ${address.value}`).then(\r\n            ({ results }) => {\r\n              if (results.length) {\r\n                const { geometry } = results[0];\r\n                const { lat, lng } = geometry;\r\n                new mapboxgl.Marker().setLngLat([lng, lat]).addTo(map);\r\n              }\r\n            }\r\n          );\r\n        }\r\n      });\r\n    }\r\n  }, [userCity, map, points]);\r\n\r\n  useEffect(() => {\r\n    if (userCoordsData.latitude) {\r\n      mapboxgl.accessToken = process.env.REACT_APP_MAP;\r\n\r\n      const initMap = (\r\n        setMap: React.Dispatch<React.SetStateAction<mapboxgl.Map>>,\r\n        mapContainer: React.RefObject<HTMLDivElement>\r\n      ) => {\r\n        if (!mapContainer.current) {\r\n          return null;\r\n        }\r\n        const { latitude, longtitude, zoom } = userCoordsData;\r\n\r\n        const map = new mapboxgl.Map({\r\n          container: mapContainer.current,\r\n          style: 'mapbox://styles/mapbox/outdoors-v11',\r\n          center: [longtitude, latitude],\r\n          zoom,\r\n          bearing: 0,\r\n        });\r\n\r\n        setMap(map);\r\n      };\r\n      if (!map) {\r\n        initMap(setMap, mapContainer);\r\n      }\r\n    }\r\n  }, [map, userCoordsData]);\r\n\r\n  useEffect(() => {\r\n    if (map !== null) {\r\n      map.flyTo({\r\n        center: [userCoordsData.longtitude, userCoordsData.latitude],\r\n        essential: true,\r\n        zoom: userCoordsData.zoom,\r\n      });\r\n    }\r\n  }, [userCoordsData]);\r\n\r\n  return <div ref={mapContainer} className=\"mapContainer\" />;\r\n};\r\n","const urlCommon =\r\n  'https://cors-anywhere.herokuapp.com/http://api-factory.simbirsoft1.com/api/db/';\r\nconst headerCommon = {\r\n  'X-Api-Factory-Application-Id': '5e25c641099b810b946c5d5b',\r\n  'Content-Type': 'application/json',\r\n};\r\n\r\nexport const getCars: () => Promise<{\r\n  data: {\r\n    categoryId: { name: string };\r\n    id: string;\r\n    name: string;\r\n    priceMin: number;\r\n    priceMax: number;\r\n    thumbnail: { path: string };\r\n    colors: string[];\r\n    number: string;\r\n  }[];\r\n}> = async () => {\r\n  try {\r\n    const url = `${urlCommon}car`;\r\n    const response = await fetch(url, {\r\n      headers: headerCommon,\r\n    });\r\n\r\n    if (!response.ok) {\r\n      throw new Error(`HTTP ${response.status}: ${await response.text()}`);\r\n    }\r\n\r\n    const data = await response.json();\r\n    return data;\r\n  } catch (error) {\r\n    throw new Error(`Error in database cars: ${error.message}`);\r\n  }\r\n};\r\n\r\nexport const getCities: () => Promise<{\r\n  data: { name: string }[];\r\n}> = async () => {\r\n  try {\r\n    const url = `${urlCommon}city`;\r\n    const response = await fetch(url, {\r\n      headers: headerCommon,\r\n    });\r\n\r\n    if (!response.ok) {\r\n      throw new Error(`HTTP ${response.status}: ${await response.text()}`);\r\n    }\r\n\r\n    const data = await response.json();\r\n    return data;\r\n  } catch (error) {\r\n    throw new Error(`Error in database cars: ${error.message}`);\r\n  }\r\n};\r\n\r\nexport const getPoints: () => Promise<{\r\n  data: { cityId: { name: string; id: string }; address: string; id: string }[];\r\n}> = async () => {\r\n  try {\r\n    const url = `${urlCommon}point`;\r\n    const response = await fetch(url, {\r\n      headers: headerCommon,\r\n    });\r\n\r\n    if (!response.ok) {\r\n      throw new Error(`HTTP ${response.status}: ${await response.text()}`);\r\n    }\r\n\r\n    const data = await response.json();\r\n    return data;\r\n  } catch (error) {\r\n    throw new Error(`Error in database cars: ${error.message}`);\r\n  }\r\n};\r\n\r\nexport const getRate: () => Promise<{\r\n  data: {\r\n    id: string;\r\n    price: number;\r\n    rateTypeId: { unit: string; name: string };\r\n  }[];\r\n}> = async () => {\r\n  try {\r\n    const url = `${urlCommon}rate`;\r\n    const response = await fetch(url, {\r\n      headers: headerCommon,\r\n    });\r\n\r\n    if (!response.ok) {\r\n      throw new Error(`HTTP ${response.status}: ${await response.text()}`);\r\n    }\r\n\r\n    const data = await response.json();\r\n    return data;\r\n  } catch (error) {\r\n    throw new Error(`Error in database cars: ${error.message}`);\r\n  }\r\n};\r\n\r\nexport const getOrderStatus: () => Promise<{\r\n  data: { id: string }[];\r\n}> = async () => {\r\n  try {\r\n    const url = `${urlCommon}orderStatus`;\r\n    const response = await fetch(url, {\r\n      headers: headerCommon,\r\n    });\r\n\r\n    if (!response.ok) {\r\n      throw new Error(`HTTP ${response.status}: ${await response.text()}`);\r\n    }\r\n\r\n    const data = await response.json();\r\n    return data;\r\n  } catch (error) {\r\n    throw new Error(`Error in database cars: ${error.message}`);\r\n  }\r\n};\r\n","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { Select } from 'antd';\r\nimport {\r\n  GenericActionString,\r\n  GenericActionPoint,\r\n  pointInfo,\r\n} from '../../../../interfaces';\r\n\r\nconst { Option } = Select;\r\n\r\ninterface AddressType {\r\n  options: pointInfo[];\r\n  name: string;\r\n  changeOption: (item) => GenericActionString | GenericActionPoint;\r\n  initValue: string;\r\n  deletePoint?: (item: pointInfo) => GenericActionPoint;\r\n  deleteOption: boolean;\r\n}\r\n\r\nexport const SelectAddress: React.FunctionComponent<AddressType> = ({\r\n  options,\r\n  name,\r\n  changeOption,\r\n  initValue,\r\n  deletePoint,\r\n  deleteOption,\r\n}) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const addAddressToState = (item: string) => {\r\n    if (deleteOption) {\r\n      dispatch(deletePoint({ value: '', cityId: '', pointId: '' }));\r\n      dispatch(changeOption(item));\r\n    } else {\r\n      options.forEach((name) =>\r\n        name.value == item ? dispatch(changeOption(name)) : null\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Select\r\n      placeholder={`Начните вводить ${name}`}\r\n      className=\"select\"\r\n      showArrow={false}\r\n      showSearch={true}\r\n      bordered={false}\r\n      onChange={(value: string) => addAddressToState(value)}\r\n      value={initValue}\r\n    >\r\n      {options.map((item, index) => (\r\n        <Option value={item.value} label={item.value} key={index}>\r\n          {item.value}\r\n        </Option>\r\n      ))}\r\n    </Select>\r\n  );\r\n};\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { Map } from './Map';\r\nimport { getCities, getPoints } from '../../../server/data';\r\nimport { changePoint, changeUserCity } from '../../../redux/actions';\r\nimport { info, list } from '../../../redux/selectors';\r\nimport { SelectAddress } from './SelectAddress';\r\nimport { pointInfo } from '../../../interfaces';\r\nimport './style.scss';\r\n\r\nexport const Location: React.FunctionComponent = () => {\r\n  const [cities, setCities] = useState<pointInfo[]>([]);\r\n  const [points, setPoints] = useState<pointInfo[]>([]);\r\n\r\n  const cityData = useSelector(info);\r\n  const pointValue = useSelector(list);\r\n\r\n  const checkPoint = pointValue[0].value;\r\n\r\n  const { userCity } = cityData;\r\n\r\n  useEffect(() => {\r\n    getCities().then((city) => {\r\n      const result = city.data.map(({ name }) => {\r\n        return { value: name };\r\n      });\r\n      setCities(result);\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (userCity.length) {\r\n      getPoints().then((point) => {\r\n        const newPoints = point.data.reduce((item, ind) => {\r\n          if (\r\n            !item.some((obj) => {\r\n              return obj.value === ind.address;\r\n            }) &&\r\n            userCity === ind.cityId.name\r\n          ) {\r\n            item.push({\r\n              value: ind.address,\r\n              pointId: ind.id,\r\n              cityId: ind.cityId.id,\r\n            });\r\n          }\r\n          return item;\r\n        }, []);\r\n        setPoints(newPoints);\r\n      });\r\n    }\r\n  }, [userCity]);\r\n\r\n  return (\r\n    <div className=\"location\">\r\n      <div className=\"city\">\r\n        <span className=\"name\">Город:</span>\r\n        <SelectAddress\r\n          options={cities}\r\n          name={'город'}\r\n          changeOption={changeUserCity}\r\n          deletePoint={changePoint}\r\n          initValue={userCity}\r\n          deleteOption={true}\r\n        />\r\n      </div>\r\n      <div className=\"point\">\r\n        <span className=\"name\">Пункт выдачи:</span>\r\n        <SelectAddress\r\n          options={points}\r\n          name={'пункт'}\r\n          changeOption={changePoint}\r\n          initValue={checkPoint}\r\n          deleteOption={false}\r\n        />\r\n      </div>\r\n      <div className=\"map\">\r\n        <span className=\"name\">Выбрать на карте:</span>\r\n        <Map points={points} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { Spin } from 'antd';\r\n\r\nexport const Loader: React.FunctionComponent = () => <Spin />;\r\n","type ArrayStatuses = ['Местоположение', 'Модель', 'Дополнительно', 'Итого'];\r\ntype ArrayRadioBtn = ['Все модели', 'Эконом', 'Премиум'];\r\ntype ArrayResultBtns = ['Выбрать модель', 'Дополнительно', 'Итого', 'Заказать'];\r\n\r\nexport const statuses: ArrayStatuses = [\r\n  'Местоположение',\r\n  'Модель',\r\n  'Дополнительно',\r\n  'Итого',\r\n];\r\n\r\nexport const resultBtnsText: ArrayResultBtns = [\r\n  'Выбрать модель',\r\n  'Дополнительно',\r\n  'Итого',\r\n  'Заказать',\r\n];\r\n\r\nexport const radioBtnsText: ArrayRadioBtn = ['Все модели', 'Эконом', 'Премиум'];\r\nexport const price: string[] = ['Поминутно, 7₽/мин', 'На сутки, 1999 ₽/сутки'];\r\nexport const options: string[] = [\r\n  'Полный бак, 500р',\r\n  'Детское кресло, 200р',\r\n  'Правый руль, 1600р',\r\n];\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport classnames from 'classnames';\r\nimport { Card, Radio } from 'antd';\r\nimport { Loader } from '../../common/Loader';\r\nimport { getCars } from '../../../server/data';\r\nimport { changeModel } from '../../../redux/actions';\r\nimport { list } from '../../../redux/selectors';\r\nimport { radioBtnsText } from '../../../constants/orderPage';\r\nimport './style.scss';\r\n\r\ninterface CarsData {\r\n  name: string;\r\n  priceMin: number;\r\n  priceMax: number;\r\n  thumbnail: { path: string };\r\n  categoryId: { name: string };\r\n  colors: string[];\r\n  number: string;\r\n  id: string;\r\n}\r\n\r\ninterface CarsProps {\r\n  setColorsOpt: (color: string[]) => void;\r\n}\r\n\r\nexport const Cars: React.FunctionComponent<CarsProps> = ({ setColorsOpt }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const userCar = useSelector(list);\r\n  const currentCar = userCar[1].value;\r\n\r\n  const [cars, setCars] = useState<CarsData[]>([]);\r\n  const [radioBtn, setRadioBtn] = useState('Все модели');\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [arrayCars, setArrayCars] = useState<CarsData[]>([]);\r\n\r\n  useEffect(() => {\r\n    getCars().then(({ data }) => {\r\n      const result = data.filter(({ thumbnail }) => {\r\n        if (thumbnail.path.startsWith('/files/')) {\r\n          return true;\r\n        }\r\n      });\r\n      setCars(result);\r\n      setArrayCars(result);\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const result = arrayCars.filter(({ categoryId }) => {\r\n      switch (radioBtn) {\r\n        case categoryId.name:\r\n          return true;\r\n        case radioBtnsText[0]:\r\n          return true;\r\n        default:\r\n          return false;\r\n      }\r\n    });\r\n    setCars(result);\r\n  }, [radioBtn]);\r\n\r\n  useEffect(() => {\r\n    cars.length === 0 ? setIsLoading(true) : setIsLoading(false);\r\n  }, [cars]);\r\n\r\n  const selectCar = (value, min, max, number, pathImg, color, carId) => {\r\n    dispatch(\r\n      changeModel({\r\n        ...userCar[1],\r\n        value,\r\n        min,\r\n        max,\r\n        number,\r\n        pathImg,\r\n        carId,\r\n      })\r\n    );\r\n    setColorsOpt(color);\r\n  };\r\n\r\n  return (\r\n    <div className=\"cards\">\r\n      {isLoading ? <Loader /> : null}\r\n      <Radio.Group\r\n        onChange={(e) => setRadioBtn(e.target.value)}\r\n        value={radioBtn}\r\n        className=\"radio-btns\"\r\n      >\r\n        {radioBtnsText.map((text) => (\r\n          <Radio value={text} key={text}>\r\n            {text}\r\n          </Radio>\r\n        ))}\r\n      </Radio.Group>\r\n      {cars.map(\r\n        (\r\n          { name, priceMin, priceMax, thumbnail, number, colors, id },\r\n          index\r\n        ) => {\r\n          return (\r\n            <Card\r\n              size=\"small\"\r\n              title={\r\n                <>\r\n                  <div className=\"title\">{name}</div>\r\n                  <div className=\"price\">{`${priceMin} - ${priceMax} Р`}</div>\r\n                </>\r\n              }\r\n              key={index}\r\n              className={\r\n                currentCar === name ? classnames('active', 'card') : 'card'\r\n              }\r\n              onClick={() =>\r\n                selectCar(\r\n                  name,\r\n                  priceMin,\r\n                  priceMax,\r\n                  number,\r\n                  thumbnail.path,\r\n                  colors,\r\n                  id\r\n                )\r\n              }\r\n            >\r\n              <img\r\n                className=\"image\"\r\n                src={`https://cors-anywhere.herokuapp.com/http://api-factory.simbirsoft1.com${thumbnail.path}`}\r\n                alt={name}\r\n                referrerPolicy=\"origin\"\r\n                crossOrigin=\"anonymous\"\r\n              />\r\n            </Card>\r\n          );\r\n        }\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","import React, { useEffect } from 'react';\r\nimport { Button } from 'antd';\r\nimport classnames from 'classnames';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { list, resultMoney } from '../../../redux/selectors';\r\nimport { resultBtnsText } from '../../../constants/orderPage';\r\nimport { NumberForms } from '../../../interfaces';\r\nimport { calculatPrice } from '../../../redux/actions';\r\nimport './style.scss';\r\n\r\ninterface ResultInterface {\r\n  numberStatus: NumberForms;\r\n  switchForm: () => void;\r\n}\r\n\r\nexport const Result: React.FunctionComponent<ResultInterface> = ({\r\n  numberStatus,\r\n  switchForm,\r\n}) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const orderList = useSelector(list);\r\n  const results = useSelector(resultMoney);\r\n  const [, car, color, date, price, petrol, seat, steer] = orderList;\r\n\r\n  const checkOption = (bool, value) => (bool ? value : 0);\r\n\r\n  useEffect(() => {\r\n    let result;\r\n    if (price.count === 7) {\r\n      result =\r\n        date.count * price.count +\r\n        checkOption(petrol.visible, petrol.count) +\r\n        checkOption(seat.visible, seat.count) +\r\n        checkOption(steer.visible, steer.count);\r\n    } else {\r\n      result =\r\n        (date.count / 1440) * price.count +\r\n        checkOption(petrol.visible, petrol.count) +\r\n        checkOption(seat.visible, seat.count) +\r\n        checkOption(steer.visible, steer.count);\r\n    }\r\n\r\n    dispatch(calculatPrice(parseInt(result, 10)));\r\n  }, [price, date, petrol, seat, steer]);\r\n\r\n  const checkStatus = () => {\r\n    if (\r\n      numberStatus.active <= 1 &&\r\n      orderList[numberStatus.active].value.length\r\n    ) {\r\n      return true;\r\n    } else if (\r\n      color.value &&\r\n      date.value &&\r\n      price.value &&\r\n      results >= orderList[1].min &&\r\n      results <= orderList[1].max\r\n    ) {\r\n      return true;\r\n    }\r\n  };\r\n\r\n  const showMoney = () => {\r\n    switch (numberStatus.active) {\r\n      case 1:\r\n        return `${car.min}-${car.max}`;\r\n      case 2:\r\n        return results;\r\n      default:\r\n        return '';\r\n    }\r\n  };\r\n\r\n  const showTitle = () => {\r\n    if (numberStatus.active === 2) {\r\n      if (results < orderList[1].min) {\r\n        return `Минимальная сумма заказа ${orderList[1].min}`;\r\n      } else if (results > orderList[1].max) {\r\n        return `Максимальная сумма заказа ${orderList[1].max}`;\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"result\">\r\n      <h2>Ваш заказ</h2>\r\n      {orderList.map(({ name, value, orderNumber, visible }) => {\r\n        if (orderNumber <= numberStatus.current && visible) {\r\n          return (\r\n            <div className=\"list\" key={name}>\r\n              <div className=\"dots link\">\r\n                <span className=\"field\">{name}</span>\r\n              </div>\r\n              <span className=\"address\">{value}</span>\r\n            </div>\r\n          );\r\n        }\r\n      })}\r\n      <div className=\"price\">\r\n        <span>{'Цена: '}</span>\r\n        <span>{showMoney()}</span>\r\n      </div>\r\n      <Button\r\n        disabled={checkStatus() ? false : true}\r\n        onClick={switchForm}\r\n        className={\r\n          checkStatus()\r\n            ? classnames('btn', 'btn-active')\r\n            : classnames('btn', 'btn-disable')\r\n        }\r\n        title={showTitle()}\r\n      >\r\n        {resultBtnsText[numberStatus.active]}\r\n      </Button>\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport classnames from 'classnames';\r\nimport { NumberForms } from '../../../interfaces';\r\nimport { statuses } from '../../../constants/orderPage';\r\nimport './style.scss';\r\n\r\ninterface TabsInterface {\r\n  numberStatus: NumberForms;\r\n  setNumberStatus: (NumberForms) => void;\r\n}\r\n\r\nexport const Tabs: React.FunctionComponent<TabsInterface> = ({\r\n  numberStatus,\r\n  setNumberStatus,\r\n}) => {\r\n  const checkCurrentStatus = (ind: number) => {\r\n    return numberStatus.current === ind ? 'status-active' : '';\r\n  };\r\n\r\n  const checkPrevStatus = (ind: number) => {\r\n    const prevStatus = statuses.findIndex(\r\n      (_, index) => index === numberStatus.current\r\n    );\r\n    return ind < prevStatus ? 'status-prev' : '';\r\n  };\r\n\r\n  const hiddenMobile = (ind: number) => {\r\n    const current = numberStatus.active;\r\n    return ind >= current - 1 && ind <= current + 1 ? '' : 'status-mobile';\r\n  };\r\n\r\n  const switchActiveTabs = (ind: number) => {\r\n    if (ind <= numberStatus.current) {\r\n      setNumberStatus({ ...numberStatus, active: ind });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"statuses\">\r\n      {statuses.map((status: string, index: number) => (\r\n        <span\r\n          key={status}\r\n          onClick={() => switchActiveTabs(index)}\r\n          className={classnames(\r\n            'status',\r\n            checkCurrentStatus(index),\r\n            checkPrevStatus(index),\r\n            hiddenMobile(index)\r\n          )}\r\n        >\r\n          {status}\r\n        </span>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { Space, DatePicker } from 'antd';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Moment } from 'moment';\r\nimport { list } from '../../../../redux/selectors';\r\nimport { changeModel } from '../../../../redux/actions';\r\nimport { DiffTimeProps } from '../../../../interfaces';\r\nimport './style.scss';\r\n\r\ninterface DateProps {\r\n  queue: boolean;\r\n  setDiffTime: ({ start, end }: DiffTimeProps) => void;\r\n  diffTime: DiffTimeProps;\r\n  disabledDate: (current, option) => boolean;\r\n  option?: Date | number;\r\n  setMomentStart?: (value) => void;\r\n  setMomentEnd?: (value) => void;\r\n  moments: Moment;\r\n}\r\n\r\nconst formatter = new Intl.DateTimeFormat('ru', {\r\n  day: 'numeric',\r\n  month: 'numeric',\r\n  year: 'numeric',\r\n  hour: 'numeric',\r\n  minute: 'numeric',\r\n});\r\n\r\nexport const DateSelect: React.FunctionComponent<DateProps> = ({\r\n  queue,\r\n  setDiffTime,\r\n  diffTime,\r\n  disabledDate,\r\n  option,\r\n  moments,\r\n  setMomentStart,\r\n  setMomentEnd,\r\n}) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const carData = useSelector(list)[1];\r\n\r\n  const getDatahandler = (value) => {\r\n    const timeToSeconds = value._d.getTime();\r\n    if (queue) {\r\n      setDiffTime({ ...diffTime, end: timeToSeconds });\r\n      setMomentEnd(value);\r\n    } else {\r\n      setDiffTime({ ...diffTime, start: timeToSeconds });\r\n      setMomentStart(value);\r\n      dispatch(\r\n        changeModel({ ...carData, time: formatter.format(new Date(value._d)) })\r\n      );\r\n    }\r\n  };\r\n\r\n  const updateValue = (value) => {\r\n    if (value === null) {\r\n      if (queue) {\r\n        setMomentEnd(null);\r\n      } else {\r\n        setMomentStart(null);\r\n        setMomentEnd(null);\r\n        setDiffTime({ start: 0, end: 0 });\r\n        dispatch(changeModel({ ...carData, time: '' }));\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <span className=\"date-value\">{queue ? 'По' : 'C'}</span>\r\n      <Space direction=\"vertical\" size={300} className=\"date-picker\">\r\n        <DatePicker\r\n          showTime={{ format: 'HH:mm' }}\r\n          className=\"date\"\r\n          format=\"DD-MM-YYYY HH:mm\"\r\n          disabledDate={(current) => disabledDate(current, option)}\r\n          onOk={getDatahandler}\r\n          allowClear={true}\r\n          bordered={false}\r\n          placeholder={'Выберите дату и время'}\r\n          value={moments}\r\n          onChange={(e) => updateValue(e)}\r\n          disabled={queue && diffTime.start === 0 ? true : false}\r\n        />\r\n      </Space>\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { Radio } from 'antd';\r\nimport classnames from 'classnames';\r\nimport './style.scss';\r\n\r\ninterface ListsProps {\r\n  title: string;\r\n  setOption: (e: string) => void;\r\n  list: string[];\r\n  option: string;\r\n}\r\n\r\nexport const Lists: React.FunctionComponent<ListsProps> = ({\r\n  title,\r\n  setOption,\r\n  list,\r\n  option,\r\n}) => {\r\n  return (\r\n    <div className=\"select-wrapper\">\r\n      <div className=\"title\">{title}</div>\r\n      <Radio.Group\r\n        onChange={(e) => setOption(e.target.value)}\r\n        className=\"select-values\"\r\n      >\r\n        {list.map((item) => (\r\n          <Radio\r\n            value={item}\r\n            key={item}\r\n            className={\r\n              option === item ? classnames('active', 'value') : 'value'\r\n            }\r\n          >\r\n            {item}\r\n          </Radio>\r\n        ))}\r\n      </Radio.Group>\r\n    </div>\r\n  );\r\n};\r\n","export const getTimeToString = (start, end) => {\r\n  const minutes = (end - start) / (60 * 1000);\r\n\r\n  const dayCount = Math.floor(minutes / 1440);\r\n  const hourCount = Math.floor((minutes % 1440) / 60);\r\n  const minuteCount = Math.floor(minutes % 60);\r\n\r\n  const day = dayCount > 0 ? `${dayCount}д` : '';\r\n  const hour = hourCount > 0 ? `${hourCount}ч` : '';\r\n  const minute = minuteCount > 0 ? `${minuteCount}м` : '';\r\n\r\n  if (minutes < 60) {\r\n    return `${minute}`;\r\n  } else if (minutes >= 60 && minutes < 1440) {\r\n    return `${hour} ${minute}`;\r\n  } else if (minutes >= 1440 && minutes < 365 * 1440) {\r\n    return `${day} ${hour} ${minute}`;\r\n  }\r\n};\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { Checkbox } from 'antd';\r\nimport { DateSelect } from './Date';\r\nimport { Lists } from './Lists';\r\nimport { options } from '../../../constants/orderPage';\r\nimport {\r\n  changeColor,\r\n  changeTime,\r\n  changePrice,\r\n  changeOption,\r\n} from '../../../redux/actions';\r\nimport { DiffTimeProps } from '../../../interfaces';\r\nimport { getRate } from '../../../server/data';\r\nimport { getTimeToString } from '../../../helper';\r\nimport './style.scss';\r\n\r\ninterface OptionProps {\r\n  colorsOpt: string[];\r\n}\r\n\r\nexport const Option: React.FunctionComponent<OptionProps> = ({ colorsOpt }) => {\r\n  const dispacth = useDispatch();\r\n\r\n  const [color, setColor] = useState<string>();\r\n  const [money, setMoney] = useState<string>();\r\n  const [price, setPrice] = useState<string[]>([]);\r\n  const [rate, setRates] = useState([]);\r\n  const [diffTime, setDiffTime] = useState<DiffTimeProps>({ start: 0, end: 0 });\r\n  const [finishDate, setFinishDate] = useState(Date.now());\r\n  const [momentStart, setMomentStart] = useState();\r\n  const [momentEnd, setMomentEnd] = useState();\r\n\r\n  useEffect(() => {\r\n    getRate().then(({ data }) => {\r\n      const newValue = data.map(({ price, rateTypeId }) => {\r\n        return `${rateTypeId.name}, ${price}₽/${rateTypeId.unit}`;\r\n      });\r\n      setRates(data);\r\n      setPrice(newValue);\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    dispacth(changeColor(color));\r\n  }, [color]);\r\n\r\n  useEffect(() => {\r\n    if (money) {\r\n      const [name] = money.split(',');\r\n      rate.forEach(({ id, price, rateTypeId }) =>\r\n        rateTypeId.name === name\r\n          ? dispacth(changePrice({ value: name, count: price, rateId: id }))\r\n          : null\r\n      );\r\n    }\r\n  }, [money]);\r\n\r\n  useEffect(() => {\r\n    const { start, end } = diffTime;\r\n    const minutes = (end - start) / (60 * 1000);\r\n    dispacth(\r\n      changeTime({\r\n        value: getTimeToString(start, end),\r\n        count: minutes,\r\n        start,\r\n        end,\r\n      })\r\n    );\r\n  }, [diffTime]);\r\n\r\n  useEffect(() => {\r\n    setFinishDate(diffTime.start);\r\n  }, [diffTime]);\r\n\r\n  const disabledDate = (value, option) => {\r\n    const selectedDate = value._d;\r\n    return new Date(option).valueOf() >= new Date(selectedDate).valueOf();\r\n  };\r\n\r\n  const selectOption = (checkedValues) => {\r\n    options.forEach((item) => {\r\n      const [value] = item.split(',');\r\n      const checkValue = checkedValues.find((value) => value === item);\r\n      if (checkValue === undefined) {\r\n        dispacth(changeOption({ value, visible: false }));\r\n      } else {\r\n        dispacth(changeOption({ value, visible: true }));\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"options-wrapper\">\r\n      <Lists\r\n        list={colorsOpt}\r\n        title={'Цвет'}\r\n        setOption={setColor}\r\n        option={color}\r\n      />\r\n      <div className=\"date-wrapper\">\r\n        <div className=\"title\">Дата аренды</div>\r\n        <DateSelect\r\n          queue={false}\r\n          setDiffTime={setDiffTime}\r\n          diffTime={diffTime}\r\n          disabledDate={disabledDate}\r\n          option={Date.now()}\r\n          setMomentEnd={setMomentEnd}\r\n          setMomentStart={setMomentStart}\r\n          moments={momentStart}\r\n        />\r\n        <DateSelect\r\n          queue={true}\r\n          setDiffTime={setDiffTime}\r\n          diffTime={diffTime}\r\n          disabledDate={disabledDate}\r\n          option={finishDate}\r\n          setMomentStart={setMomentStart}\r\n          setMomentEnd={setMomentEnd}\r\n          moments={momentEnd}\r\n        />\r\n      </div>\r\n      <Lists list={price} title={'Тариф'} setOption={setMoney} option={money} />\r\n      <div className=\"checkbox-wrapper\">\r\n        <div className=\"title\">Доп услуги</div>\r\n        <Checkbox.Group\r\n          options={options}\r\n          onChange={selectOption}\r\n          className=\"checkbox\"\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { list } from '../../../redux/selectors';\r\nimport './style.scss';\r\n\r\nexport const Confirm: React.FunctionComponent = () => {\r\n  const information = useSelector(list);\r\n  const { value, number, time, pathImg } = information[1];\r\n\r\n  return (\r\n    <div className=\"confirm\">\r\n      <div className=\"data-car\">\r\n        <p className=\"model-car\">{value}</p>\r\n        <p className=\"number-car\">\r\n          <span>{number}</span>\r\n        </p>\r\n        <p className=\"fuels-car\">\r\n          <span className=\"title\">Топливо </span>\r\n          <span className=\"percent\">100%</span>\r\n        </p>\r\n        <p className=\"date\">\r\n          <span className=\"title\">Доступна с </span>\r\n          <span className=\"time\">{time}</span>\r\n        </p>\r\n      </div>\r\n      <div className=\"picture-car\">\r\n        <img\r\n          src={`https://cors-anywhere.herokuapp.com/http://api-factory.simbirsoft1.com${pathImg}`}\r\n          crossOrigin=\"anonymous\"\r\n          referrerPolicy=\"origin\"\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","export const createOrder = async (item) => {\r\n  try {\r\n    const response = await fetch(\r\n      'https://cors-anywhere.herokuapp.com/http://api-factory.simbirsoft1.com/api/db/order',\r\n      {\r\n        method: 'POST',\r\n        headers: {\r\n          'X-Api-Factory-Application-Id': '5e25c641099b810b946c5d5b',\r\n          'Content-Type': 'application/json',\r\n          Authorization: '4cbcea96de',\r\n        },\r\n        body: JSON.stringify(item),\r\n      }\r\n    );\r\n\r\n    if (!response.ok) {\r\n      throw new Error(`HTTP ${response.status}: ${response.text()}`);\r\n    }\r\n\r\n    const answer = await response.json();\r\n    return answer;\r\n  } catch (e) {\r\n    throw new Error(`Error in createOrder: ${e}`);\r\n  }\r\n};\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { Modal, Button } from 'antd';\r\nimport { getOrderStatus } from '../../../server/data';\r\nimport { createOrder } from '../../../server/createOrder';\r\nimport { StatusType } from '../../../interfaces';\r\nimport { list, resultMoney } from '../../../redux/selectors';\r\nimport './style.scss';\r\n\r\ntype ModalType = {\r\n  setNumberStatus: (item: StatusType) => void;\r\n};\r\n\r\nexport const ModalWindow: React.FunctionComponent<ModalType> = ({\r\n  setNumberStatus,\r\n}) => {\r\n  const [statusId, setStatusId] = useState('');\r\n\r\n  const orderValue = useSelector(list);\r\n  const orderMoney = useSelector(resultMoney);\r\n\r\n  const order = {\r\n    carId: {\r\n      id: orderValue[1].carId,\r\n    },\r\n    cityId: {\r\n      id: orderValue[0].cityId,\r\n    },\r\n    pointId: {\r\n      id: orderValue[0].pointId,\r\n    },\r\n    rateId: {\r\n      id: orderValue[4].rateId,\r\n    },\r\n    orderStatusId: {\r\n      id: statusId,\r\n    },\r\n    color: orderValue[2].value,\r\n    dateFrom: orderValue[3].start,\r\n    dateTo: orderValue[3].end,\r\n    price: orderMoney,\r\n    isFullTank: orderValue[5].visible,\r\n    isNeedChildChair: orderValue[6].visible,\r\n    isRightWheel: orderValue[7].visible,\r\n  };\r\n\r\n  useEffect(() => {\r\n    getOrderStatus().then(({ data }) => setStatusId(data[0].id));\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (statusId.length) {\r\n      console.log(order);\r\n      createOrder(order).then((value) =>\r\n        localStorage.setItem('id', value.data.id)\r\n      );\r\n    }\r\n  }, [statusId]);\r\n\r\n  return (\r\n    <Modal\r\n      title=\"Подтвердить заказ\"\r\n      maskStyle={{\r\n        backgroundColor: 'rgba(255, 255, 255, 0.9)',\r\n        WebkitBoxShadow: 'none',\r\n      }}\r\n      visible={true}\r\n      closable={false}\r\n      centered={true}\r\n      footer={null}\r\n    >\r\n      <Link to={`/carsharing/order/${localStorage.getItem('id')}`}>\r\n        <Button>Подтвердить</Button>\r\n      </Link>\r\n      <Button\r\n        onClick={() => setNumberStatus({ current: 3, active: 3 })}\r\n        className=\"btn-primary\"\r\n      >\r\n        Вернуться\r\n      </Button>\r\n    </Modal>\r\n  );\r\n};\r\n","import React, { useState } from 'react';\r\nimport { Layout } from 'antd';\r\nimport { Location } from './Location';\r\nimport { Cars } from './Cars';\r\nimport { SideBar } from '../../components/common/SideBar';\r\nimport { Head } from '../common/Head';\r\nimport { Result } from './Result';\r\nimport { Tabs } from './Tabs';\r\nimport { Option } from './Option';\r\nimport { Confirm } from './Confirm';\r\nimport { StatusType } from '../../interfaces';\r\nimport { ModalWindow } from '../common/ModalWindow';\r\nimport './style.scss';\r\n\r\nconst { Content } = Layout;\r\n\r\nexport const OrderPage: React.FunctionComponent = () => {\r\n  const [numberStatus, setNumberStatus] = useState<StatusType>({\r\n    active: 0,\r\n    current: 0,\r\n  });\r\n  const [colorsOpt, setColorsOpt] = useState<string[]>([]);\r\n\r\n  const switchForm = () => {\r\n    const nextStatus = numberStatus.active + 1;\r\n    if (nextStatus > numberStatus.current) {\r\n      setNumberStatus({\r\n        current: nextStatus,\r\n        active: nextStatus,\r\n      });\r\n    } else {\r\n      setNumberStatus({ ...numberStatus, active: nextStatus });\r\n    }\r\n  };\r\n\r\n  const showCurrentStatus = () => {\r\n    switch (numberStatus.active) {\r\n      case 0:\r\n        return <Location />;\r\n      case 1:\r\n        return <Cars setColorsOpt={setColorsOpt} />;\r\n      case 2:\r\n        return <Option colorsOpt={colorsOpt} />;\r\n      case 3:\r\n        return <Confirm />;\r\n      default:\r\n        return <ModalWindow setNumberStatus={setNumberStatus} />;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Layout\r\n      className=\"order-page\"\r\n      style={{ overflow: 'hidden', background: '#fff' }}\r\n    >\r\n      <SideBar />\r\n      <Content className=\"wrapper\">\r\n        <Layout>\r\n          <Head />\r\n          <Content className=\"tabs\">\r\n            <Tabs\r\n              numberStatus={numberStatus}\r\n              setNumberStatus={setNumberStatus}\r\n            />\r\n          </Content>\r\n          <Content className=\"content\">\r\n            <div className=\"forms\">{showCurrentStatus()}</div>\r\n            <Result numberStatus={numberStatus} switchForm={switchForm} />\r\n          </Content>\r\n        </Layout>\r\n      </Content>\r\n    </Layout>\r\n  );\r\n};\r\n","const urlCommon =\r\n  'https://cors-anywhere.herokuapp.com/http://api-factory.simbirsoft1.com/api/db/';\r\nconst headerCommon = {\r\n  'X-Api-Factory-Application-Id': '5e25c641099b810b946c5d5b',\r\n  'Content-Type': 'application/json',\r\n};\r\n\r\nexport const getOrderById: (\r\n  id: string\r\n) => Promise<{\r\n  data: {\r\n    carId: { name: string; number: string; thumbnail: { path: string } };\r\n    cityId: { name: string };\r\n    color: string;\r\n    isFullTank: boolean;\r\n    isNeedChildChair: boolean;\r\n    isRightWheel: boolean;\r\n    pointId: { address: string };\r\n    price: number;\r\n    dateFrom: number;\r\n    dateTo: number;\r\n    rateId: { rateTypeId: { name: string } };\r\n  };\r\n}> = async (id) => {\r\n  try {\r\n    const url = `${urlCommon}order/${id}`;\r\n    const response = await fetch(url, {\r\n      headers: headerCommon,\r\n    });\r\n\r\n    if (!response.ok) {\r\n      throw new Error(`HTTP ${response.status}: ${await response.text()}`);\r\n    }\r\n\r\n    const data = await response.json();\r\n    return data;\r\n  } catch (error) {\r\n    throw new Error(`Error in getOrderById: ${error.message}`);\r\n  }\r\n};\r\n","import { OrderType } from '../../interfaces';\r\n\r\nexport const initState: OrderType[] = [\r\n  {\r\n    name: 'Пункт выдачи',\r\n    value: '',\r\n    orderNumber: 0,\r\n    visible: true,\r\n    cityId: '',\r\n    pointId: '',\r\n  },\r\n  {\r\n    name: 'Модель',\r\n    value: '',\r\n    orderNumber: 1,\r\n    visible: true,\r\n    min: 0,\r\n    max: 0,\r\n    number: '',\r\n    pathImg: '',\r\n    time: '',\r\n    carId: '',\r\n  },\r\n  {\r\n    name: 'Цвет',\r\n    value: '',\r\n    orderNumber: 2,\r\n    visible: true,\r\n  },\r\n  {\r\n    name: 'Длительность аренды',\r\n    value: '',\r\n    orderNumber: 2,\r\n    count: 0,\r\n    visible: true,\r\n    start: 0,\r\n    end: 0,\r\n  },\r\n  {\r\n    name: 'Тариф',\r\n    value: '',\r\n    orderNumber: 2,\r\n    count: 0,\r\n    visible: true,\r\n    rateId: '',\r\n  },\r\n  {\r\n    name: 'Полный бак',\r\n    value: 'Да',\r\n    orderNumber: 2,\r\n    count: 500,\r\n    visible: false,\r\n  },\r\n  {\r\n    name: 'Детское кресло',\r\n    value: 'Да',\r\n    orderNumber: 2,\r\n    count: 200,\r\n    visible: false,\r\n  },\r\n  {\r\n    name: 'Правый руль',\r\n    value: 'Да',\r\n    orderNumber: 2,\r\n    count: 1600,\r\n    visible: false,\r\n  },\r\n];\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { Layout, Button } from 'antd';\r\nimport { Link } from 'react-router-dom';\r\nimport { SideBar } from '../../components/common/SideBar';\r\nimport { Head } from '../common/Head';\r\nimport { Confirm } from '../orderPage/Confirm';\r\nimport { getOrderById } from '../../server/getOrderById';\r\nimport { getTimeToString } from '../../helper';\r\nimport { initState } from '../../constants/redux';\r\nimport { clearOrder } from '../../redux/actions';\r\nimport './style.scss';\r\n\r\nconst { Content } = Layout;\r\n\r\nconst orderTitles: { [x: string]: string | boolean } = {\r\n  'Пункт выдачи': '',\r\n  Модель: '',\r\n  Цвет: '',\r\n  'Длительность аренды': '',\r\n  Тариф: '',\r\n  'Полный бак': false,\r\n  'Детское кресло': false,\r\n  'Правый руль': false,\r\n};\r\n\r\nexport const ConfirmOrder: React.FunctionComponent = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const [result, setResult] = useState(orderTitles);\r\n  const [money, setMoney] = useState(0);\r\n\r\n  const id = localStorage.getItem('id');\r\n\r\n  useEffect(() => {\r\n    getOrderById(id).then(({ data }) => {\r\n      const {\r\n        cityId,\r\n        pointId,\r\n        carId,\r\n        color,\r\n        dateFrom,\r\n        dateTo,\r\n        rateId,\r\n        price,\r\n        isFullTank,\r\n        isNeedChildChair,\r\n        isRightWheel,\r\n      } = data;\r\n      setResult({\r\n        'Пункт выдачи': `${cityId.name} ${pointId.address}`,\r\n        Модель: `${carId.name}`,\r\n        Цвет: `${color}`,\r\n        'Длительность аренды': getTimeToString(dateFrom, dateTo),\r\n        Тариф: `${rateId.rateTypeId.name}`,\r\n        'Полный бак': isFullTank,\r\n        'Детское кресло': isNeedChildChair,\r\n        'Правый руль': isRightWheel,\r\n      });\r\n      setMoney(price);\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <Layout\r\n      className=\"confirm-page\"\r\n      style={{ overflow: 'hidden', background: '#fff' }}\r\n    >\r\n      <SideBar />\r\n      <Content className=\"wrapper\">\r\n        <Layout>\r\n          <Head />\r\n          <Content className=\"tabs\">\r\n            <div className=\"statuses\">\r\n              <span className=\"status title-order\">{`Ваш заказ ${id}`}</span>\r\n            </div>\r\n          </Content>\r\n          <Content className=\"content\">\r\n            <div className=\"forms\">\r\n              <Confirm />\r\n            </div>\r\n            <div className=\"result\">\r\n              <h2>Ваш заказ</h2>\r\n              {Object.entries(result).map((item) => {\r\n                const [title, value] = item;\r\n                if (value) {\r\n                  return (\r\n                    <div className=\"list\" key={title}>\r\n                      <div className=\"dots link\">\r\n                        <span className=\"field\">{title}</span>\r\n                      </div>\r\n                      <span className=\"address\">{value}</span>\r\n                    </div>\r\n                  );\r\n                }\r\n              })}\r\n              <div className=\"price\">{`Цена: ${money}`}</div>\r\n              <Link to=\"/carsharing/order\">\r\n                <Button\r\n                  className=\"btn-cancel\"\r\n                  onClick={() => dispatch(clearOrder(initState))}\r\n                >\r\n                  Отменить\r\n                </Button>\r\n              </Link>\r\n            </div>\r\n          </Content>\r\n        </Layout>\r\n      </Content>\r\n    </Layout>\r\n  );\r\n};\r\n","import { CHANGE_USER_CITY } from '../type';\r\nimport { GenericActionOrder } from '../../interfaces';\r\n\r\ntype InfoState = { userCity: string };\r\n\r\nconst currentState: InfoState = {\r\n  userCity: '',\r\n};\r\n\r\nexport const userInfoReducer = (\r\n  state: InfoState = currentState,\r\n  action: GenericActionOrder\r\n) => {\r\n  const { type, payload } = action;\r\n  switch (type) {\r\n    case CHANGE_USER_CITY:\r\n      return { ...state, userCity: payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { initState } from '../../constants/redux';\r\nimport {\r\n  CHANGE_POINT,\r\n  CHANGE_MODEL,\r\n  CHANGE_COLOR,\r\n  CHANGE_TIME,\r\n  CHANGE_PRICE,\r\n  CHANGE_OPTION,\r\n  CLEAR_ORDER,\r\n} from '../../redux/type';\r\nimport { OrderType } from '../../interfaces';\r\nimport { GenericActionOrder } from '../../interfaces';\r\n\r\nconst currentState = {\r\n  orderList: initState,\r\n};\r\n\r\nexport const userOrderReducer = (\r\n  state: { orderList: OrderType[] } = currentState,\r\n  action: GenericActionOrder\r\n) => {\r\n  const { type, payload } = action;\r\n  switch (type) {\r\n    case CHANGE_POINT:\r\n      return {\r\n        orderList: state.orderList.map((item, index) => {\r\n          const { value, cityId, pointId } = payload;\r\n          return index === 0 ? { ...item, value, cityId, pointId } : item;\r\n        }),\r\n      };\r\n    case CHANGE_MODEL:\r\n      return {\r\n        orderList: state.orderList.map((item, index) => {\r\n          const { value, min, max, number, pathImg, time, carId } = payload;\r\n          return index === 1\r\n            ? { ...item, value, min, max, number, pathImg, time, carId }\r\n            : item;\r\n        }),\r\n      };\r\n    case CHANGE_COLOR:\r\n      return {\r\n        orderList: state.orderList.map((item, index) => {\r\n          return index === 2 ? { ...item, value: payload } : item;\r\n        }),\r\n      };\r\n    case CHANGE_TIME:\r\n      return {\r\n        orderList: state.orderList.map((item, index) => {\r\n          const { value, count, start, end } = payload;\r\n          return index === 3 ? { ...item, value, count, start, end } : item;\r\n        }),\r\n      };\r\n    case CHANGE_PRICE:\r\n      return {\r\n        orderList: state.orderList.map((item, index) => {\r\n          const { value, count, rateId } = payload;\r\n          return index === 4 ? { ...item, value, count, rateId } : item;\r\n        }),\r\n      };\r\n    case CHANGE_OPTION:\r\n      return {\r\n        orderList: state.orderList.map((item, index) => {\r\n          return index >= 5 && item.name === payload.value\r\n            ? { ...item, visible: payload.visible }\r\n            : item;\r\n        }),\r\n      };\r\n    case CLEAR_ORDER:\r\n      return { orderList: payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { CALCULATE_PRICE } from '../type';\r\n\r\nconst currentState = 0;\r\n\r\nexport const userPrice = (\r\n  state: number = currentState,\r\n  action: { type: string; payload: number }\r\n) => {\r\n  const { type, payload } = action;\r\n  switch (type) {\r\n    case CALCULATE_PRICE:\r\n      return payload;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React from 'react';\r\nimport { Switch, Route } from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { createStore } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport { ConnectedRouter } from 'connected-react-router';\r\nimport { MainPage } from './components/mainPage';\r\nimport { OrderPage } from './components/orderPage';\r\nimport { ConfirmOrder } from './components/confirmOrder';\r\nimport 'antd/dist/antd.css';\r\nimport './App.scss';\r\nimport { createRootReducer } from './redux/rootReducer';\r\n\r\nimport { createBrowserHistory } from 'history';\r\n\r\nconst history = createBrowserHistory();\r\n\r\nconst store = createStore(createRootReducer(history), composeWithDevTools());\r\n\r\nconst App: React.FunctionComponent = () => (\r\n  <Provider store={store}>\r\n    <ConnectedRouter history={history}>\r\n      <Switch>\r\n        <Route exact path=\"/carsharing/\">\r\n          <MainPage />\r\n        </Route>\r\n        <Route exact path=\"/carsharing/order\">\r\n          <OrderPage />\r\n        </Route>\r\n        <Route exact path={`/carsharing/order/${localStorage.getItem('id')}`}>\r\n          <ConfirmOrder />\r\n        </Route>\r\n      </Switch>\r\n    </ConnectedRouter>\r\n  </Provider>\r\n);\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals: () => void = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.scss';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}