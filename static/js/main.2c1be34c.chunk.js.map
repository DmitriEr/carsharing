{"version":3,"sources":["redux/type/index.ts","redux/actions/index.ts","server/userLocation/index.ts","assets/common/location.svg","constants/common/index.ts","components/common/Head/index.tsx","components/mainPage/Order/index.tsx","assets/mainPage/slider/Slide_1.jpg","assets/mainPage/slider/Slide_2.png","assets/mainPage/slider/Slide_3.png","assets/mainPage/slider/Slide_4.png","assets/mainPage/sideBar/Facebook_white.svg","assets/mainPage/sideBar/Instagram.svg","assets/mainPage/sideBar/Telegram_white.svg","constants/mainPage/index.ts","components/common/SideBar/index.tsx","assets/mainPage/slider/left.svg","assets/mainPage/slider/right.svg","components/mainPage/Slider/index.tsx","components/mainPage/index.tsx","server/geocodeLocation/index.ts","components/orderPage/Location/Map/index.tsx","server/data/index.ts","components/orderPage/Location/index.tsx","constants/orderPage/index.ts","components/orderPage/index.tsx","App.tsx","reportWebVitals.ts","redux/reducers/userInfoReducer.ts","redux/reducers/userOrderReducer.ts","constants/redux/index.ts","redux/reducers/currentPageReducer.ts","redux/rootReducer/index.ts","index.tsx"],"names":["CHANGE_USER_CITY","CHANGE_POINT","CHANGE_PAGE","changeUserCity","item","type","payload","changePoint","changePage","getUserLocation","a","url","process","fetch","response","ok","Error","status","text","json","data","message","translateCityName","Samara","Ulyanovsk","Saransk","Kazan","Krasnodar","Ufa","Saratov","Volgograd","Voronezh","Sterlitamak","Tambov","Arkhangelsk","Krasnoyarsk","Header","Layout","Head","dispatch","useDispatch","userLocation","useSelector","state","information","userCity","useEffect","then","translate","city","className","src","location","alt","Content","Footer","Order","to","href","menuItems","socialNetworks","picture","facebook","name","link","instagram","telegram","sliderItems","title","content","background","background_1","background_2","background_3","background_4","Sider","Item","Menu","SideBar","currentPage","page","useState","widthPercent","setWidthPercent","sideOpen","setSideOpen","width","onClick","map","toUpperCase","network","target","preview","Slider","sliderRef","handlerLeft","current","prev","handlerRight","next","dots","ref","index","classNames","left","right","MainPage","style","overflow","getCoordinates","placeName","Map","points","userData","userPoint","order","orderList","dataBase","setDataBase","latitude","longtitude","zoom","userCoordsData","setUserCoordsData","mapContainer","useRef","setMap","value","length","results","geometry","lat","lng","forEach","address","includes","mapboxgl","Marker","setLngLat","addTo","accessToken","container","center","bearing","initMap","flyTo","essential","getCities","headers","getPoints","Option","Select","Location","cities","setCities","setPointTest","cityData","arr","push","set","Set","point","cityId","add","Array","from","showSelect","array","placeholder","showArrow","showSearch","bordered","onChange","label","statuses","OrderPage","currentStatus","numberStatus","num","findIndex","orderNumber","disabled","App","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","currentState","rootReducer","combineReducers","action","store","createStore","composeWithDevTools","ReactDOM","render","document","getElementById"],"mappings":"obAAaA,EAAmB,mBACnBC,EAAe,eACfC,EAAc,cCApB,SAASC,EACdC,GAEA,MAAO,CACLC,KAAML,EACNM,QAASF,GAIN,SAASG,EAAYH,GAC1B,MAAO,CACLC,KAAMJ,EACNK,QAASF,GAIN,SAASI,EAAWJ,GACzB,MAAO,CACLC,KAAMH,EACNI,QAASF,G,6BCjBAK,EAAgD,uCAAG,gCAAAC,EAAA,sEAEtDC,EAFsD,UAFnD,oBAEmD,kBAE/BC,kBAF+B,SAGrCC,MAAMF,GAH+B,WAGtDG,EAHsD,QAK9CC,GAL8C,6BAMhDC,MANgD,qBAMjCF,EAASG,OANwB,gBAMPH,EAASI,OANF,mGASzCJ,EAASK,OATgC,eAStDC,EATsD,yBAUrDA,GAVqD,wCAYtD,IAAIJ,MAAJ,4BAA+B,KAAMK,UAZiB,0DAAH,qDCJ9C,MAA0B,qCCE5BC,EAAmC,CAC9CC,OAAQ,uCACRC,UAAW,yDACXC,QAAS,6CACTC,MAAO,uCACPC,UAAW,yDACXC,IAAK,qBACLC,QAAS,6CACTC,UAAW,yDACXC,SAAU,6CACVC,YAAa,qEACbC,OAAQ,uCACRC,YAAa,qEACbC,YAAa,+DACb,qBAAsB,+FCLhBC,G,OAAWC,IAAXD,QAEKE,EAAgC,WAC3C,IAAMC,EAAWC,cACXC,EAAuBC,aAC3B,SAACC,GAAD,OAAwBA,EAAMC,YAAYC,YAU5C,OAPAC,qBAAU,WACRrC,IAAkBsC,MAAK,SAACF,GACtB,IAAMG,EAAY1B,EAAkBuB,EAASI,MAC7CV,EAASpC,EAAe6C,SAEzB,IAGD,eAACZ,EAAD,CAAQc,UAAU,gBAAlB,UACE,sBAAMA,UAAU,eAAhB,4BACA,sBAAKA,UAAU,mBAAf,UACE,qBAAKC,IAAKC,EAAUC,IAAI,aACxB,sBAAMH,UAAU,eAAhB,SAAgCT,WCzBhCa,G,OAAoBjB,IAApBiB,SAASC,EAAWlB,IAAXkB,OAEJC,EAAiC,kBAC5C,eAAC,IAAD,CAAQN,UAAU,mBAAlB,UACE,cAAC,EAAD,IACA,cAACI,EAAD,CAASJ,UAAU,UAAnB,SACE,sBAAKA,UAAU,UAAf,UACE,qBAAKA,UAAU,cAAf,oEACA,qBAAKA,UAAU,eAAf,4BACA,qBAAKA,UAAU,qBAAf,kNAGA,cAAC,IAAD,CAAMO,GAAG,oBAAT,SACE,cAAC,IAAD,CAAQP,UAAU,MAAM7C,KAAK,UAA7B,mGAMN,eAACkD,EAAD,CAAQL,UAAU,SAAlB,UACE,yEACA,mBAAGQ,KAAK,sBAAR,sC,yBC3BS,MAA0B,oCCA1B,MAA0B,oCCA1B,MAA0B,oCCA1B,MAA0B,oCCA1B,MAA0B,2CCA1B,MAA0B,sCCA1B,MAA0B,2CCS5BC,EAAsB,CACjC,mDACA,yDACA,uCACA,4EAGWC,EAIP,CACJ,CACEC,QAASC,EACTC,KAAM,WACNC,KAAM,yCAER,CACEH,QAASI,EACTF,KAAM,YACNC,KAAM,+CAER,CACEH,QAASK,EACTH,KAAM,WACNC,KAAM,8BAIGG,EAAiC,CAC5C,CACEC,MAAO,gHACPC,QACE,ijBACFC,WAAYC,GAEd,CACEH,MAAO,yDACPC,QAAS,kNACTC,WAAYE,GAEd,CACEJ,MAAO,uCACPC,QAAS,qPACTC,WAAYG,GAEd,CACEL,MAAO,2EACPC,QAAS,sMACTC,WAAYI,IClDRC,G,OAAUtC,IAAVsC,OACAC,EAASC,IAATD,KAEKE,EAAmC,WAC9C,IAAMC,EAAcrC,aAAY,SAACC,GAAD,OAAwBA,EAAMqC,QADV,EAGZC,mBAA0B,IAHd,mBAG7CC,EAH6C,KAG/BC,EAH+B,OAIpBF,oBAAkB,GAJE,mBAI7CG,EAJ6C,KAInCC,EAJmC,KAsEpD,OACE,eAACV,EAAD,CAAOzB,UAAU,UAAUoC,MAAOJ,EAAlC,UACE,qBACEK,QAnEW,WACXH,GACFD,EAAgB,IAChBE,GAAY,KAEZF,EAAgB,QAChBE,GAAY,KA8DVnC,UAAWkC,EAAW,cAAgB,eApDtCA,EAEA,sBAAKlC,UAAU,OAAf,UACE,qBAAKA,UAAU,YAAf,SACE,sBAAKA,UAAU,gBAAf,UACE,cAAC,IAAD,CAAMA,UAAU,QAAhB,SACGS,EAAU6B,KAAI,SAACpF,GAAD,OACb,cAACwE,EAAD,CAAMW,QAAS,kBAZ7BF,GAAY,QACZF,EAAgB,KAWF,SACE,cAAC,IAAD,CAAM1B,GAAG,cAAcP,UAAU,OAAjC,SACG9C,EAAKqF,iBAF+BrF,QAO7C,oBAAI8C,UAAU,QAAd,SACGU,EAAe4B,KACd,SAACE,GAIM,IACG7B,EAAwB6B,EAAxB7B,QAASE,EAAe2B,EAAf3B,KAAMC,EAAS0B,EAAT1B,KACvB,OACE,mBAAGN,KAAMM,EAAM2B,OAAO,QAAmBzC,UAAU,OAAnD,SACE,cAAC,IAAD,CACEC,IAAKU,EACLR,IAAI,SACJuC,SAAS,EACT1C,UAAU,SALqBa,aAc/C,qBACEb,UACkB,SAAhB6B,EAAyB,kBAAoB,sBAMhD,S,yBC9EI,MAA0B,iCCA1B,MAA0B,kCCWjCzB,G,OAAYjB,IAAZiB,SAEKuC,EAAyC,SAAC,GAAmB,IAAjBC,EAAgB,EAAhBA,UACjDC,EAAc,kBAAMD,EAAUE,QAAQC,QACtCC,EAAe,kBAAMJ,EAAUE,QAAQG,QAE7C,OACE,cAAC,IAAD,CACEjD,UAAU,oBACVkD,KAAM,CAAElD,UAAW,YACnBmD,IAAKP,EAHP,SAKG3B,EAAYqB,KACX,WAAkDc,GAAmB,IAAlElC,EAAiE,EAAjEA,MAAOC,EAA0D,EAA1DA,QAASC,EAAiD,EAAjDA,WACjB,OACE,cAAC,IAAD,CAAoBpB,UAAU,UAA9B,SACE,eAAC,EAAD,CAASA,UAAU,QAAnB,UACE,cAAC,IAAD,CACEC,IAAKmB,EACLjB,IAAKe,EACLlB,UAAWqD,IAAW,aAAD,qBAA6BD,IAClDV,SAAS,IAEX,qBAAK1C,UAAU,WACf,cAAC,IAAD,CACE7C,KAAK,QACL6C,UAAU,uBACVqC,QAASQ,EAHX,SAKE,cAAC,IAAD,CAAO5C,IAAKqD,EAAMnD,IAAI,OAAOuC,SAAS,MAExC,cAAC,IAAD,CACEvF,KAAK,QACL6C,UAAU,wBACVqC,QAASW,EAHX,SAKE,cAAC,IAAD,CAAO/C,IAAKsD,EAAOpD,IAAI,QAAQuC,SAAS,MAE1C,sBAAK1C,UAAU,UAAf,UACE,sBAAMA,UAAU,QAAhB,SAAyBkB,IACzB,qBAAKlB,UAAU,cAAf,SAA8BmB,IAC9B,cAAC,IAAD,CAAMZ,GAAG,oBAAT,SACE,cAAC,IAAD,CACEP,UAAWqD,IAAW,MAAD,cAAeD,IACpCjG,KAAK,UAFP,6EA3BK+D,SChBZsC,I,OAA2C,SAAC,GAAmB,IAAjBZ,EAAgB,EAAhBA,UACnDvD,EAAWC,cAMjB,OAJAM,qBAAU,WACRP,EAAS/B,EAAW,WACnB,IAGD,eAAC,IAAD,CACE0C,UAAU,YACVyD,MAAO,CAAEC,SAAU,SAAUtC,WAAY,QAF3C,UAIE,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,CAAQwB,UAAWA,S,uCCtBZe,I,cAEmB,uCAAG,WAAOC,GAAP,mBAAApG,EAAA,sEAEzBC,EAFyB,yDAE+BmG,EAF/B,gBAEgDlG,oCAFhD,SAGRC,MAAMF,GAHE,WAGzBG,EAHyB,QAKjBC,GALiB,6BAMnBC,MANmB,qBAMJF,EAASG,OANL,gBAMsBH,EAASI,OAN/B,mGASZJ,EAASK,OATG,eASzBC,EATyB,yBAUxBA,GAVwB,wCAYzB,IAAIJ,MAAJ,6BAAgC,KAAMK,UAZb,0DAAH,uDCOnB0F,I,OAA4C,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACpDC,EAAWvE,aAAY,SAACC,GAAD,OAAwBA,EAAMC,eACrDsE,EAAYxE,aAAY,SAACC,GAAD,OAAwBA,EAAMwE,MAAMC,aAFK,EAGvCnC,mBAAwB,CACtD,+FAJqE,mBAGhEoC,EAHgE,KAGtDC,EAHsD,OAM3BrC,mBAA0B,CACpEsC,SAAU,EACVC,WAAY,EACZC,KAAM,KAT+D,mBAMhEC,EANgE,KAMhDC,EANgD,KAWjEC,EAAeC,iBAAuB,MAX2B,EAYjD5C,mBAAS,MAZwC,mBAYhEO,EAZgE,KAY3DsC,EAZ2D,KAc/DjF,EAAaoE,EAAbpE,SACAkF,EAAUb,EAAU,GAApBa,MA0FR,OAxFAjF,qBAAU,WACJiF,EAAMC,OACRnB,GAAe,GAAD,OAAIhE,EAAJ,aAAiBkF,IAAShF,MAAK,YAAkB,IAAfkF,EAAc,EAAdA,QACrCC,EADmD,YACrCD,EADqC,MACnDC,SACDC,EAAaD,EAAbC,IAAKC,EAAQF,EAARE,IACbT,EAAkB,CAChBJ,SAAUY,EACVX,WAAYY,EACZX,KAAM,QAGD5E,GACTgE,GAAehE,GAAUE,MAAK,YAAkB,IAAfkF,EAAc,EAAdA,QAC/B,GAAiB,2DAAbpF,EACF8E,EAAkB,CAChBJ,SAAU,KACVC,WAAY,KACZC,KAAM,SAEH,CAAC,IACGS,EADJ,YACkBD,EADlB,MACIC,SACDC,EAAaD,EAAbC,IAAKC,EAAQF,EAARE,IACbT,EAAkB,CAChBJ,SAAUY,EACVX,WAAYY,EACZX,KAAM,WAKb,CAAC5E,EAAUkF,IAEdjF,qBAAU,WACJD,GAAY2C,GAAOwB,GACrBA,EAAOqB,SAAQ,SAACC,GACTjB,EAASkB,SAASD,KACrBhB,GAAY,SAACrB,GAAD,6BAAcA,GAAd,CAAoBqC,OAChCzB,GAAe,GAAD,OAAIhE,EAAJ,aAAiByF,IAAWvF,MAAK,YAAkB,IAAfkF,EAAc,EAAdA,QAChD,GAAIA,EAAQD,OAAQ,CAAC,IACXE,EAAaD,EAAQ,GAArBC,SACAC,EAAaD,EAAbC,IAAKC,EAAQF,EAARE,KACb,IAAII,KAASC,QAASC,UAAU,CAACN,EAAKD,IAAMQ,MAAMnD,aAM3D,CAAC3C,EAAU2C,EAAKwB,IAEnBlE,qBAAU,WACR,GAAI4E,EAAeH,SAAU,CAC3BiB,KAASI,YAAchI,6FAqBlB4E,GAnBW,SACdsC,EACAF,GAEA,IAAKA,EAAa5B,QAChB,OAAO,KAFN,IAIKuB,EAA+BG,EAA/BH,SAAUC,EAAqBE,EAArBF,WAAYC,EAASC,EAATD,KAU9BK,EARY,IAAIU,KAASzB,IAAI,CAC3B8B,UAAWjB,EAAa5B,QACxBW,MAAO,sCACPmC,OAAQ,CAACtB,EAAYD,GACrBE,OACAsB,QAAS,KAMXC,CAAQlB,EAAQF,MAGnB,CAACpC,EAAKkC,IAET5E,qBAAU,WACI,OAAR0C,GACFA,EAAIyD,MAAM,CACRH,OAAQ,CAACpB,EAAeF,WAAYE,EAAeH,UACnD2B,WAAW,EACXzB,KAAMC,EAAeD,SAGxB,CAACC,IAEG,qBAAKrB,IAAKuB,EAAc1E,UAAU,mBC9F9BiG,GAA0C,uCAAG,8BAAAzI,EAAA,sEAE1C,kDAF0C,SAG/BG,MADX,kDACsB,CAChCuI,QAAS,CACP,+BAAgC,8BALkB,WAGhDtI,EAHgD,QASxCC,GATwC,6BAU1CC,MAV0C,oBAU5BF,EAASG,OAVmB,gBAUFH,EAASI,OAVP,mGAanCJ,EAASK,OAb0B,eAahDC,EAbgD,yBAc/CA,GAd+C,wCAgBhD,IAAIJ,MAAJ,kCAAqC,KAAMK,UAhBK,0DAAH,qDAoB1CgI,GAA2C,uCAAG,8BAAA3I,EAAA,sEAE3C,mDAF2C,SAGhCG,MADX,mDACsB,CAChCuI,QAAS,CACP,+BAAgC,8BALmB,WAGjDtI,EAHiD,QASzCC,GATyC,6BAU3CC,MAV2C,oBAU7BF,EAASG,OAVoB,gBAUHH,EAASI,OAVN,mGAapCJ,EAASK,OAb2B,eAajDC,EAbiD,yBAchDA,GAdgD,wCAgBjD,IAAIJ,MAAJ,kCAAqC,KAAMK,UAhBM,0DAAH,qDCjChDiI,I,OAAWC,KAAXD,QAEKE,GAAoC,WAC/C,IAAMjH,EAAWC,cADoC,EAGzByC,mBAAwB,IAHC,mBAG9CwE,EAH8C,KAGtCC,EAHsC,OAItBzE,mBAAwB,IAJF,mBAI9C+B,EAJ8C,KAItC2C,EAJsC,KAM/CC,EAAWlH,aAAY,SAACC,GAAD,OAAwBA,EAAMC,eACrDsE,EAAYxE,aAAY,SAACC,GAAD,OAAwBA,EAAMwE,MAAMC,aAE1DvE,EAAa+G,EAAb/G,SAERC,qBAAU,WACR,IAAM+G,EAAgB,GACtBV,KACGpG,MAAK,SAACE,GACLA,EAAK7B,KAAKiH,SAAQ,gBAAGtE,EAAH,EAAGA,KAAH,OAAc8F,EAAIC,KAAK/F,SAE1ChB,MAAK,kBAAM2G,EAAUG,QACvB,IAEH/G,qBAAU,WACR,IAAMiH,EAAmB,IAAIC,IACzBnH,EAASmF,QACXqB,KACGtG,MAAK,SAACkH,GACLA,EAAM7I,KAAKiH,SAAQ,SAACjI,GACdA,EAAK8J,OAAOnG,OAASlB,GACvBkH,EAAII,IAAI/J,EAAKkI,eAIlBvF,MAAK,kBAAM4G,EAAaS,MAAMC,KAAKN,SAEvC,CAAClH,IAEJ,IAAMyH,EAAa,SAACvG,EAAcwG,GAAf,OACjB,cAAC,KAAD,CACEC,YAAW,gGAAqBzG,GAChCb,UAAU,SACVuH,WAAW,EACXC,YAAY,EACZC,UAAU,EACVC,SAAU,SAAC7C,GACI,mCAAThE,GACFxB,EAASpC,EAAe4H,IACxBxF,EAAShC,EAAY,MAErBgC,EAAShC,EAAYwH,KAGzBA,MAAgB,mCAAThE,EAAmBlB,EAAWqE,EAAU,GAAGa,MAdpD,SAgBGwC,EAAM/E,KAAI,SAACpF,GACV,MAAa,+FAATA,EACK,KAGP,cAACkJ,GAAD,CAAQvB,MAAO3H,EAAMyK,MAAOzK,EAA5B,SACGA,GADoCA,SAQ/C,OACE,sBAAK8C,UAAU,WAAf,UACE,sBAAKA,UAAU,OAAf,UACE,sBAAMA,UAAU,OAAhB,6CACCoH,EAAW,iCAASb,MAEvB,sBAAKvG,UAAU,QAAf,UACE,sBAAMA,UAAU,OAAhB,kFACCoH,EAAW,iCAAStD,MAEvB,sBAAK9D,UAAU,MAAf,UACE,sBAAMA,UAAU,OAAhB,qGACA,cAAC,GAAD,CAAK8D,OAAQA,WCxFR8D,GAAqB,CAChC,uFACA,uCACA,iFACA,kCCOMxH,I,OAAYjB,IAAZiB,SAEKyH,GAAqC,WAChD,IAAMxI,EAAWC,cADqC,EAGZyC,mBAAiB,wFAHL,mBAG/C+F,EAH+C,aAId/F,mBAAS,IAJK,mBAI/CgG,EAJ+C,UAMtDnI,qBAAU,WACRP,EAAS/B,EAAW,YACnB,IAEH,IAAMqC,EAAWH,aACf,SAACC,GAAD,OAAwBA,EAAMC,YAAYC,YAEtCuE,EAAY1E,aAAY,SAACC,GAAD,OAAwBA,EAAMwE,MAAMC,aAgBlE,OACE,eAAC,IAAD,CACElE,UAAU,aACVyD,MAAO,CAAEC,SAAU,SAAUtC,WAAY,QAF3C,UAIE,cAAC,EAAD,IACA,cAAC,GAAD,CAASpB,UAAU,UAAnB,SACE,eAAC,IAAD,WACE,cAAC,EAAD,IACA,eAAC,GAAD,CAASA,UAAU,UAAnB,UACE,qBAAKA,UAAU,WAAf,SACG4H,GAAStF,KAAI,SAACvE,EAAgBqF,GAAjB,OACZ,sBAEEpD,UAAS,kBA3BvBhC,EA4BgBD,EA1BZ+J,IAAkB9J,EACb,gBAEF,IAsBgB,aAnBgCgK,EAqBpB5E,EAnB5B4E,EADcJ,GAASK,WAAU,SAAC/K,GAAD,OAAUA,IAAS4K,KAC/B,cAAgB,KAehC,SAMG/J,GALIA,GAlBmC,IAACiK,EARvDhK,OAmCQ,qBAAKgC,UAAU,QAAf,SACE,cAAC,GAAD,MAEF,sBAAKA,UAAU,SAAf,UACE,mFACCkE,EAAU5B,KAAI,YAA8C,IAA3CzB,EAA0C,EAA1CA,KAAMgE,EAAoC,EAApCA,MACtB,GAD0D,EAA7BqD,aACVH,EACjB,OACE,sBAAK/H,UAAU,OAAf,UACE,qBAAKA,UAAU,YAAf,SACE,sBAAMA,UAAU,QAAhB,SAAyBa,MAE3B,sBAAMb,UAAU,UAAhB,mBAA8BL,EAA9B,aAA2CkF,OAJlBhE,MASjC,sBAAKb,UAAU,QAAf,UACE,6DADF,oDAGA,cAAC,IAAD,CAAQmI,UAAU,EAAMnI,UAAU,MAAlC,4GC1DCoI,I,cAnBsB,WACnC,IAAMxF,EAAY+B,iBAAO,MAEzB,OACE,8BACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAO0D,OAAK,EAACC,KAAK,eAAlB,SACE,cAAC,GAAD,CAAU1F,UAAWA,MAEvB,cAAC,IAAD,CAAOyF,OAAK,EAACC,KAAK,oBAAlB,SACE,cAAC,GAAD,eCJGC,GAZqB,SAACC,GAC/BA,GAAeA,aAAuBC,UACxC,8BAAqB5I,MAAK,YAAkD,IAA/C6I,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,QCNRO,GAAe,CACnBpJ,SAAU,ICCNoJ,GAAe,CACnB7E,UCJoC,CACpC,CACErD,KAAM,sEACNgE,MAAO,GACPqD,YAAa,GAEf,CACErH,KAAM,uCACNgE,MAAO,GACPqD,YAAa,GAEf,CACErH,KAAM,2BACNgE,MAAO,GACPqD,YAAa,GAEf,CACErH,KAAM,gHACNgE,MAAO,GACPqD,YAAa,GAEf,CACErH,KAAM,iCACNgE,MAAO,GACPqD,YAAa,GAEf,CACErH,KAAM,0DACNgE,MAAO,GACPqD,YAAa,KC5BXa,GAAe,OCERC,GAAcC,0BAAgB,CACzCvJ,YJM0B,WAAiD,IAAhDD,EAA+C,uDAAvCsJ,GAAcG,EAAyB,uCAClE/L,EAAkB+L,EAAlB/L,KAAMC,EAAY8L,EAAZ9L,QACd,OAAQD,GACN,KAAKL,EACH,OAAO,6BAAK2C,GAAZ,IAAmBE,SAAUvC,IAC/B,QACE,OAAOqC,IIXXwE,MHKgC,WAG5B,IAFJxE,EAEG,uDAFKsJ,GACRG,EACG,uCACK/L,EAAkB+L,EAAlB/L,KAAMC,EAAY8L,EAAZ9L,QACd,OAAQD,GACN,KAAKJ,EACH,MAAO,CACLmH,UAAWzE,EAAMyE,UAAU5B,KAAI,SAACpF,EAAMkG,GACpC,OAAiB,IAAVA,EAAA,6BAAmBlG,GAAnB,IAAyB2H,MAAOzH,IAAYF,MAGzD,QACE,OAAOuC,IGjBXqC,KDAY,WAAiD,IAAhDrC,EAA+C,uDAAvCsJ,GAAcG,EAAyB,uCACpD/L,EAAkB+L,EAAlB/L,KAAMC,EAAY8L,EAAZ9L,QACd,OAAQD,GACN,KAAKH,EACH,OAAOI,EACT,QACE,OAAOqC,MEJP0J,GAAQC,sBAAYJ,GAAaK,iCAEvCC,IAASC,OACP,cAAC,IAAD,CAAUJ,MAAOA,GAAjB,SACE,cAAC,GAAD,MAEFK,SAASC,eAAe,SAM1BlB,O","file":"static/js/main.2c1be34c.chunk.js","sourcesContent":["export const CHANGE_USER_CITY = 'CHANGE_USER_CITY';\r\nexport const CHANGE_POINT = 'CHANGE_POINT';\r\nexport const CHANGE_PAGE = 'CHANGE_PAGE';\r\n","import { CHANGE_USER_CITY, CHANGE_POINT, CHANGE_PAGE } from '../type';\r\n\r\nexport function changeUserCity(\r\n  item: string\r\n): { type: string; payload: string } {\r\n  return {\r\n    type: CHANGE_USER_CITY,\r\n    payload: item,\r\n  };\r\n}\r\n\r\nexport function changePoint(item: string): { type: string; payload: string } {\r\n  return {\r\n    type: CHANGE_POINT,\r\n    payload: item,\r\n  };\r\n}\r\n\r\nexport function changePage(item: string): { type: string; payload: string } {\r\n  return {\r\n    type: CHANGE_PAGE,\r\n    payload: item,\r\n  };\r\n}\r\n","import { TypeUserLocation } from './interface';\r\n\r\nconst link = 'https://ipinfo.io';\r\n\r\nexport const getUserLocation: () => Promise<TypeUserLocation> = async () => {\r\n  try {\r\n    const url = `${link}?token=${process.env.REACT_APP_LOCATION}`;\r\n    const response = await fetch(url);\r\n\r\n    if (!response.ok) {\r\n      throw new Error(`HTTPS ${response.status}: ${await response.text()}`);\r\n    }\r\n\r\n    const data = await response.json();\r\n    return data;\r\n  } catch (error) {\r\n    throw new Error(`Error in ipinfo - ${error.message}`);\r\n  }\r\n};\r\n","export default __webpack_public_path__ + \"static/media/location.480be180.svg\";","import { TypeTranslate } from '../../interfaces/common';\r\n\r\nexport const translateCityName: TypeTranslate = {\r\n  Samara: 'Самара',\r\n  Ulyanovsk: 'Ульяновск',\r\n  Saransk: 'Саранск',\r\n  Kazan: 'Казань',\r\n  Krasnodar: 'Краснодар',\r\n  Ufa: 'Уфа',\r\n  Saratov: 'Саратов',\r\n  Volgograd: 'Волгоград',\r\n  Voronezh: 'Воронеж',\r\n  Sterlitamak: 'Стерлитамак',\r\n  Tambov: 'Тамбов',\r\n  Arkhangelsk: 'Архангельск',\r\n  Krasnoyarsk: 'Красноярск',\r\n  'Naberezhnye Chelny': 'Набережные челны',\r\n};\r\n","import React, { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { changeUserCity } from '../../../redux/actions';\r\nimport { Layout } from 'antd';\r\nimport { getUserLocation } from '../../../server/userLocation';\r\nimport { TypeUserLocation } from '../../../server/userLocation/interface';\r\nimport { RootReducer } from '../../../interfaces/redux';\r\nimport location from '../../../assets/common/location.svg';\r\nimport { translateCityName } from '../../../constants/common';\r\nimport './style.scss';\r\n\r\nconst { Header } = Layout;\r\n\r\nexport const Head: React.FunctionComponent = () => {\r\n  const dispatch = useDispatch();\r\n  const userLocation: string = useSelector(\r\n    (state: RootReducer) => state.information.userCity\r\n  );\r\n\r\n  useEffect(() => {\r\n    getUserLocation().then((userCity: TypeUserLocation) => {\r\n      const translate = translateCityName[userCity.city];\r\n      dispatch(changeUserCity(translate));\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <Header className=\"order__header\">\r\n      <span className=\"header__logo\">Need for drive</span>\r\n      <div className=\"header__location\">\r\n        <img src={location} alt=\"location\" />\r\n        <span className=\"header__city\">{userLocation}</span>\r\n      </div>\r\n    </Header>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { Layout, Button } from 'antd';\r\nimport { Link } from 'react-router-dom';\r\nimport { Head } from '../../common/Head';\r\nimport './style.scss';\r\n\r\nconst { Content, Footer } = Layout;\r\n\r\nexport const Order: React.FunctionComponent = () => (\r\n  <Layout className=\"main-page__order\">\r\n    <Head />\r\n    <Content className=\"content\">\r\n      <div className=\"wrapper\">\r\n        <div className=\"name common\">Каршеринг</div>\r\n        <div className=\"title common\">Need for drive</div>\r\n        <div className=\"description common\">\r\n          Поминутная аренда авто твоего города\r\n        </div>\r\n        <Link to=\"/carsharing/order\">\r\n          <Button className=\"btn\" type=\"primary\">\r\n            Забронировать\r\n          </Button>\r\n        </Link>\r\n      </div>\r\n    </Content>\r\n    <Footer className=\"footer\">\r\n      <span>© 2016-2019 «Need for drive»</span>\r\n      <a href=\"tel:8-495-234-22-44\">8 (495) 234-22-44</a>\r\n    </Footer>\r\n  </Layout>\r\n);\r\n","export default __webpack_public_path__ + \"static/media/Slide_1.4cff0d29.jpg\";","export default __webpack_public_path__ + \"static/media/Slide_2.79c70027.png\";","export default __webpack_public_path__ + \"static/media/Slide_3.a2384b88.png\";","export default __webpack_public_path__ + \"static/media/Slide_4.77d3edc0.png\";","export default __webpack_public_path__ + \"static/media/Facebook_white.01c0ca6a.svg\";","export default __webpack_public_path__ + \"static/media/Instagram.5e14e95a.svg\";","export default __webpack_public_path__ + \"static/media/Telegram_white.09f73cfe.svg\";","import background_1 from '../../assets/mainPage/slider/Slide_1.jpg';\r\nimport background_2 from '../../assets/mainPage/slider/Slide_2.png';\r\nimport background_3 from '../../assets/mainPage/slider/Slide_3.png';\r\nimport background_4 from '../../assets/mainPage/slider/Slide_4.png';\r\nimport facebook from '../../assets/mainPage/sideBar/Facebook_white.svg';\r\nimport instagram from '../../assets/mainPage/sideBar/Instagram.svg';\r\nimport telegram from '../../assets/mainPage/sideBar/Telegram_white.svg';\r\nimport { sliderInterface } from '../../interfaces/mainPage';\r\n\r\nexport const menuItems: string[] = [\r\n  'парковка',\r\n  'страховка',\r\n  'бензин',\r\n  'обслуживание',\r\n];\r\n\r\nexport const socialNetworks: {\r\n  picture: string;\r\n  name: string;\r\n  link: string;\r\n}[] = [\r\n  {\r\n    picture: facebook,\r\n    name: 'facebook',\r\n    link: 'https://www.facebook.com/dmitri.erkin',\r\n  },\r\n  {\r\n    picture: instagram,\r\n    name: 'instagram',\r\n    link: 'https://www.instagram.com/idmitriier/?hl=ru',\r\n  },\r\n  {\r\n    picture: telegram,\r\n    name: 'telegram',\r\n    link: 'https://web.telegram.org/',\r\n  },\r\n];\r\n\r\nexport const sliderItems: sliderInterface[] = [\r\n  {\r\n    title: 'Бесплатный парковка',\r\n    content:\r\n      'Оставляйте машину на платных городских парковках и разрешенных местах, не нарушая ПДД, а также в аэропортах.',\r\n    background: background_1,\r\n  },\r\n  {\r\n    title: 'Страховка',\r\n    content: 'Полная страховка страховка автомобиля',\r\n    background: background_2,\r\n  },\r\n  {\r\n    title: 'Бензин',\r\n    content: 'Полный бак на любой заправке города за наш счёт',\r\n    background: background_3,\r\n  },\r\n  {\r\n    title: 'Обслуживание',\r\n    content: 'Автомобиль проходит еженедельное ТО',\r\n    background: background_4,\r\n  },\r\n];\r\n","import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\nimport { Layout, Menu, Image } from 'antd';\r\nimport { RootReducer } from '../../../interfaces/redux';\r\nimport { menuItems, socialNetworks } from '../.././../constants/mainPage';\r\nimport './style.scss';\r\n\r\nconst { Sider } = Layout;\r\nconst { Item } = Menu;\r\n\r\nexport const SideBar: React.FunctionComponent = () => {\r\n  const currentPage = useSelector((state: RootReducer) => state.page);\r\n\r\n  const [widthPercent, setWidthPercent] = useState<string | number>(80);\r\n  const [sideOpen, setSideOpen] = useState<boolean>(false);\r\n\r\n  const showMenu = () => {\r\n    if (sideOpen) {\r\n      setWidthPercent(80);\r\n      setSideOpen(false);\r\n    } else {\r\n      setWidthPercent('100%');\r\n      setSideOpen(true);\r\n    }\r\n  };\r\n\r\n  const switchSlide = () => {\r\n    setSideOpen(false);\r\n    setWidthPercent(80);\r\n  };\r\n\r\n  const showContent = () => {\r\n    if (sideOpen) {\r\n      return (\r\n        <div className=\"menu\">\r\n          <div className=\"menu-open\">\r\n            <div className=\"inner-wrapper\">\r\n              <Menu className=\"items\">\r\n                {menuItems.map((item: string) => (\r\n                  <Item onClick={() => switchSlide()} key={item}>\r\n                    <Link to=\"/carsharing\" className=\"item\">\r\n                      {item.toUpperCase()}\r\n                    </Link>\r\n                  </Item>\r\n                ))}\r\n              </Menu>\r\n              <ul className=\"links\">\r\n                {socialNetworks.map(\r\n                  (network: {\r\n                    picture: string;\r\n                    name: string;\r\n                    link: string;\r\n                  }) => {\r\n                    const { picture, name, link } = network;\r\n                    return (\r\n                      <a href={link} target=\"blank\" key={name} className=\"link\">\r\n                        <Image\r\n                          src={picture}\r\n                          alt=\"social\"\r\n                          preview={false}\r\n                          className=\"img\"\r\n                        />\r\n                      </a>\r\n                    );\r\n                  }\r\n                )}\r\n              </ul>\r\n            </div>\r\n          </div>\r\n          <div\r\n            className={\r\n              currentPage === 'main' ? 'menu-full light' : 'menu-full dark'\r\n            }\r\n          ></div>\r\n        </div>\r\n      );\r\n    }\r\n    return null;\r\n  };\r\n\r\n  return (\r\n    <Sider className=\"sidebar\" width={widthPercent}>\r\n      <div\r\n        onClick={showMenu}\r\n        className={sideOpen ? 'btn-off btn' : 'btn-on btn'}\r\n      />\r\n      {showContent()}\r\n    </Sider>\r\n  );\r\n};\r\n","export default __webpack_public_path__ + \"static/media/left.1752ae91.svg\";","export default __webpack_public_path__ + \"static/media/right.7591c327.svg\";","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Carousel, Image, Layout, Button } from 'antd';\r\nimport classNames from 'classnames';\r\nimport { sliderItems } from '../../../constants/mainPage';\r\nimport { sliderInterface } from '../../../interfaces/mainPage';\r\nimport { Props } from '../../../interfaces/common';\r\nimport left from '../../../assets/mainPage/slider/left.svg';\r\nimport right from '../../../assets/mainPage/slider/right.svg';\r\nimport './style.scss';\r\n\r\nconst { Content } = Layout;\r\n\r\nexport const Slider: React.FunctionComponent<Props> = ({ sliderRef }) => {\r\n  const handlerLeft = () => sliderRef.current.prev();\r\n  const handlerRight = () => sliderRef.current.next();\r\n\r\n  return (\r\n    <Carousel\r\n      className=\"main-page__slider\"\r\n      dots={{ className: 'btn-down' }}\r\n      ref={sliderRef}\r\n    >\r\n      {sliderItems.map(\r\n        ({ title, content, background }: sliderInterface, index: number) => {\r\n          return (\r\n            <Layout key={title} className=\"wrapper\">\r\n              <Content className=\"slide\">\r\n                <Image\r\n                  src={background}\r\n                  alt={title}\r\n                  className={classNames('background', `background-${index}`)}\r\n                  preview={false}\r\n                />\r\n                <div className=\"filter\"></div>\r\n                <Button\r\n                  type=\"ghost\"\r\n                  className=\"control-left control\"\r\n                  onClick={handlerLeft}\r\n                >\r\n                  <Image src={left} alt=\"left\" preview={false} />\r\n                </Button>\r\n                <Button\r\n                  type=\"ghost\"\r\n                  className=\"control-right control\"\r\n                  onClick={handlerRight}\r\n                >\r\n                  <Image src={right} alt=\"right\" preview={false} />\r\n                </Button>\r\n                <div className=\"content\">\r\n                  <span className=\"title\">{title}</span>\r\n                  <div className=\"description\">{content}</div>\r\n                  <Link to=\"/carsharing/order\">\r\n                    <Button\r\n                      className={classNames('btn', `btn-${index}`)}\r\n                      type=\"primary\"\r\n                    >\r\n                      Подробнее\r\n                    </Button>\r\n                  </Link>\r\n                </div>\r\n              </Content>\r\n            </Layout>\r\n          );\r\n        }\r\n      )}\r\n    </Carousel>\r\n  );\r\n};\r\n","import React, { useEffect } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { Layout } from 'antd';\r\nimport { Order } from './Order';\r\nimport { SideBar } from '../common/SideBar';\r\nimport { Slider } from './Slider';\r\nimport { changePage } from '../../redux/actions';\r\nimport { Props } from '../../interfaces/common';\r\nimport './style.scss';\r\n\r\nexport const MainPage: React.FunctionComponent<Props> = ({ sliderRef }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(changePage('main'));\r\n  }, []);\r\n\r\n  return (\r\n    <Layout\r\n      className=\"main-page\"\r\n      style={{ overflow: 'hidden', background: '#fff' }}\r\n    >\r\n      <SideBar />\r\n      <Order />\r\n      <Slider sliderRef={sliderRef} />\r\n    </Layout>\r\n  );\r\n};\r\n","import { HTTPResponseCoords } from '../../interfaces/redux';\r\n\r\nexport const getCoordinates: (\r\n  placeName: string\r\n) => Promise<HTTPResponseCoords> = async (placeName: string) => {\r\n  try {\r\n    const url = `https://api.opencagedata.com/geocode/v1/json?q=${placeName}&key=${process.env.REACT_APP_OPENCAGEDATA}`;\r\n    const response = await fetch(url);\r\n\r\n    if (!response.ok) {\r\n      throw new Error(`HTTPS ${response.status}: ${await response.text()}`);\r\n    }\r\n\r\n    const data = await response.json();\r\n    return data;\r\n  } catch (error) {\r\n    throw new Error(`Error in geocode - ${error.message}`);\r\n  }\r\n};\r\n","import React, { useState, useEffect, useRef } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport mapboxgl from 'mapbox-gl';\r\nimport 'mapbox-gl/dist/mapbox-gl.css';\r\nimport 'react-map-gl-geocoder/dist/mapbox-gl-geocoder.css';\r\nimport { RootReducer } from '../../../../interfaces/redux';\r\nimport { coordinatesData } from '../../../../interfaces/orderPage';\r\nimport { getCoordinates } from '../../../../server/geocodeLocation';\r\nimport { PointsProps } from '../../../../interfaces/orderPage';\r\nimport './style.scss';\r\n\r\nexport const Map: React.FunctionComponent<PointsProps> = ({ points }) => {\r\n  const userData = useSelector((state: RootReducer) => state.information);\r\n  const userPoint = useSelector((state: RootReducer) => state.order.orderList);\r\n  const [dataBase, setDataBase] = useState<Array<string>>([\r\n    'Нариманова 1, корп.2',\r\n  ]);\r\n  const [userCoordsData, setUserCoordsData] = useState<coordinatesData>({\r\n    latitude: 0,\r\n    longtitude: 0,\r\n    zoom: 10,\r\n  });\r\n  const mapContainer = useRef<HTMLDivElement>(null);\r\n  const [map, setMap] = useState(null);\r\n\r\n  const { userCity } = userData;\r\n  const { value } = userPoint[0];\r\n\r\n  useEffect(() => {\r\n    if (value.length) {\r\n      getCoordinates(`${userCity}, ${value}`).then(({ results }) => {\r\n        const [{ geometry }] = results;\r\n        const { lat, lng } = geometry;\r\n        setUserCoordsData({\r\n          latitude: lat,\r\n          longtitude: lng,\r\n          zoom: 15,\r\n        });\r\n      });\r\n    } else if (userCity) {\r\n      getCoordinates(userCity).then(({ results }) => {\r\n        if (userCity === 'Ульяновск') {\r\n          setUserCoordsData({\r\n            latitude: 54.3,\r\n            longtitude: 48.3,\r\n            zoom: 10,\r\n          });\r\n        } else {\r\n          const [{ geometry }] = results;\r\n          const { lat, lng } = geometry;\r\n          setUserCoordsData({\r\n            latitude: lat,\r\n            longtitude: lng,\r\n            zoom: 10,\r\n          });\r\n        }\r\n      });\r\n    }\r\n  }, [userCity, value]);\r\n\r\n  useEffect(() => {\r\n    if (userCity && map && points) {\r\n      points.forEach((address) => {\r\n        if (!dataBase.includes(address)) {\r\n          setDataBase((prev) => [...prev, address]);\r\n          getCoordinates(`${userCity}, ${address}`).then(({ results }) => {\r\n            if (results.length) {\r\n              const { geometry } = results[0];\r\n              const { lat, lng } = geometry;\r\n              new mapboxgl.Marker().setLngLat([lng, lat]).addTo(map);\r\n            }\r\n          });\r\n        }\r\n      });\r\n    }\r\n  }, [userCity, map, points]);\r\n\r\n  useEffect(() => {\r\n    if (userCoordsData.latitude) {\r\n      mapboxgl.accessToken = process.env.REACT_APP_MAP;\r\n\r\n      const initMap = (\r\n        setMap: React.Dispatch<React.SetStateAction<any>>,\r\n        mapContainer: React.RefObject<HTMLDivElement>\r\n      ) => {\r\n        if (!mapContainer.current) {\r\n          return null;\r\n        }\r\n        const { latitude, longtitude, zoom } = userCoordsData;\r\n\r\n        const map = new mapboxgl.Map({\r\n          container: mapContainer.current,\r\n          style: 'mapbox://styles/mapbox/outdoors-v11',\r\n          center: [longtitude, latitude],\r\n          zoom,\r\n          bearing: 0,\r\n        });\r\n\r\n        setMap(map);\r\n      };\r\n      if (!map) {\r\n        initMap(setMap, mapContainer);\r\n      }\r\n    }\r\n  }, [map, userCoordsData]);\r\n\r\n  useEffect(() => {\r\n    if (map !== null) {\r\n      map.flyTo({\r\n        center: [userCoordsData.longtitude, userCoordsData.latitude],\r\n        essential: true,\r\n        zoom: userCoordsData.zoom,\r\n      });\r\n    }\r\n  }, [userCoordsData]);\r\n\r\n  return <div ref={mapContainer} className=\"mapContainer\" />;\r\n};\r\n","import { HTTPResponseCity, HTTPResponsePoint } from '../../interfaces/redux';\r\n\r\nexport const getCars: () => Promise<string> = async () => {\r\n  try {\r\n    const url = 'http://api-factory.simbirsoft1.com/api/db/car';\r\n    const response = await fetch(url, {\r\n      headers: {\r\n        'X-Api-Factory-Application-Id': '5e25c641099b810b946c5d5b',\r\n      },\r\n    });\r\n\r\n    if (!response.ok) {\r\n      throw new Error(`HTTP ${response.status}: ${await response.text()}`);\r\n    }\r\n\r\n    const data = await response.json();\r\n    return data;\r\n  } catch (error) {\r\n    throw new Error(`Error in database cars: ${error.message}`);\r\n  }\r\n};\r\n\r\nexport const getCities: () => Promise<HTTPResponseCity> = async () => {\r\n  try {\r\n    const url = 'https://api-factory.simbirsoft1.com/api/db/city';\r\n    const response = await fetch(url, {\r\n      headers: {\r\n        'X-Api-Factory-Application-Id': '5e25c641099b810b946c5d5b',\r\n      },\r\n    });\r\n\r\n    if (!response.ok) {\r\n      throw new Error(`HTTP ${response.status}: ${await response.text()}`);\r\n    }\r\n\r\n    const data = await response.json();\r\n    return data;\r\n  } catch (error) {\r\n    throw new Error(`Error in database cars: ${error.message}`);\r\n  }\r\n};\r\n\r\nexport const getPoints: () => Promise<HTTPResponsePoint> = async () => {\r\n  try {\r\n    const url = 'https://api-factory.simbirsoft1.com/api/db/point';\r\n    const response = await fetch(url, {\r\n      headers: {\r\n        'X-Api-Factory-Application-Id': '5e25c641099b810b946c5d5b',\r\n      },\r\n    });\r\n\r\n    if (!response.ok) {\r\n      throw new Error(`HTTP ${response.status}: ${await response.text()}`);\r\n    }\r\n\r\n    const data = await response.json();\r\n    return data;\r\n  } catch (error) {\r\n    throw new Error(`Error in database cars: ${error.message}`);\r\n  }\r\n};\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Select } from 'antd';\r\nimport { Map } from './Map';\r\nimport { changeUserCity, changePoint } from '../../../redux/actions';\r\nimport { getCities, getPoints } from '../../../server/data';\r\nimport { RootReducer } from '../../../interfaces/redux';\r\nimport './style.scss';\r\n\r\nconst { Option } = Select;\r\n\r\nexport const Location: React.FunctionComponent = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const [cities, setCities] = useState<Array<string>>([]);\r\n  const [points, setPointTest] = useState<Array<string>>([]);\r\n\r\n  const cityData = useSelector((state: RootReducer) => state.information);\r\n  const userPoint = useSelector((state: RootReducer) => state.order.orderList);\r\n\r\n  const { userCity } = cityData;\r\n\r\n  useEffect(() => {\r\n    const arr: string[] = [];\r\n    getCities()\r\n      .then((city) => {\r\n        city.data.forEach(({ name }) => arr.push(name));\r\n      })\r\n      .then(() => setCities(arr));\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const set: Set<string> = new Set();\r\n    if (userCity.length) {\r\n      getPoints()\r\n        .then((point) => {\r\n          point.data.forEach((item) => {\r\n            if (item.cityId.name === userCity) {\r\n              set.add(item.address);\r\n            }\r\n          });\r\n        })\r\n        .then(() => setPointTest(Array.from(set)));\r\n    }\r\n  }, [userCity]);\r\n\r\n  const showSelect = (name: string, array: string[]) => (\r\n    <Select\r\n      placeholder={`Начните вводить ${name}`}\r\n      className=\"select\"\r\n      showArrow={false}\r\n      showSearch={true}\r\n      bordered={false}\r\n      onChange={(value: string) => {\r\n        if (name === 'город') {\r\n          dispatch(changeUserCity(value));\r\n          dispatch(changePoint(''));\r\n        } else {\r\n          dispatch(changePoint(value));\r\n        }\r\n      }}\r\n      value={name === 'город' ? userCity : userPoint[0].value}\r\n    >\r\n      {array.map((item: string) => {\r\n        if (item === 'Нариманова 1, корп.2') {\r\n          return null;\r\n        }\r\n        return (\r\n          <Option value={item} label={item} key={item}>\r\n            {item}\r\n          </Option>\r\n        );\r\n      })}\r\n    </Select>\r\n  );\r\n\r\n  return (\r\n    <div className=\"location\">\r\n      <div className=\"city\">\r\n        <span className=\"name\">Город:</span>\r\n        {showSelect('город', cities)}\r\n      </div>\r\n      <div className=\"point\">\r\n        <span className=\"name\">Пункт выдачи:</span>\r\n        {showSelect('пункт', points)}\r\n      </div>\r\n      <div className=\"map\">\r\n        <span className=\"name\">Выбрать на карте:</span>\r\n        <Map points={points} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","export const statuses: string[] = [\r\n  'Местоположение',\r\n  'Модель',\r\n  'Дополнительно',\r\n  'Итого',\r\n];\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Layout, Button } from 'antd';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Location } from './Location';\r\nimport { SideBar } from '../../components/common/SideBar';\r\nimport { Head } from '../common/Head';\r\nimport { statuses } from '../../constants/orderPage';\r\nimport { changePage } from '../../redux/actions';\r\nimport { RootReducer, OrderType } from '../../interfaces/redux';\r\nimport './style.scss';\r\n\r\nconst { Content } = Layout;\r\n\r\nexport const OrderPage: React.FunctionComponent = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const [currentStatus, setCurrentStatus] = useState<string>('Местоположение');\r\n  const [numberStatus, setNumberStatus] = useState(0);\r\n\r\n  useEffect(() => {\r\n    dispatch(changePage('order'));\r\n  }, []);\r\n\r\n  const userCity = useSelector(\r\n    (state: RootReducer) => state.information.userCity\r\n  );\r\n  const orderList = useSelector((state: RootReducer) => state.order.orderList);\r\n\r\n  const checkCurrentStatus: (text: string) => string | null = (\r\n    text: string\r\n  ) => {\r\n    if (currentStatus === text) {\r\n      return 'status-active';\r\n    }\r\n    return '';\r\n  };\r\n\r\n  const checkPrevStatus: (num: number) => string | null = (num: number) => {\r\n    const numberStatus = statuses.findIndex((item) => item === currentStatus);\r\n    return num < numberStatus ? 'status-prev' : '';\r\n  };\r\n\r\n  return (\r\n    <Layout\r\n      className=\"order-page\"\r\n      style={{ overflow: 'hidden', background: '#fff' }}\r\n    >\r\n      <SideBar />\r\n      <Content className=\"wrapper\">\r\n        <Layout>\r\n          <Head />\r\n          <Content className=\"content\">\r\n            <div className=\"statuses\">\r\n              {statuses.map((status: string, index: number) => (\r\n                <span\r\n                  key={status}\r\n                  className={`status ${checkCurrentStatus(\r\n                    status\r\n                  )} ${checkPrevStatus(index)}`}\r\n                >\r\n                  {status}\r\n                </span>\r\n              ))}\r\n            </div>\r\n            <div className=\"forms\">\r\n              <Location />\r\n            </div>\r\n            <div className=\"result\">\r\n              <h2>Ваш заказ</h2>\r\n              {orderList.map(({ name, value, orderNumber }: OrderType) => {\r\n                if (orderNumber <= numberStatus) {\r\n                  return (\r\n                    <div className=\"list\" key={name}>\r\n                      <div className=\"dots link\">\r\n                        <span className=\"field\">{name}</span>\r\n                      </div>\r\n                      <span className=\"address\">{`${userCity}, ${value}`}</span>\r\n                    </div>\r\n                  );\r\n                }\r\n              })}\r\n              <div className=\"price\">\r\n                <span>Цена:</span> от 8 000 до 12 000 ₽\r\n              </div>\r\n              <Button disabled={true} className=\"btn\">\r\n                Выбрать модель\r\n              </Button>\r\n            </div>\r\n          </Content>\r\n        </Layout>\r\n      </Content>\r\n    </Layout>\r\n  );\r\n};\r\n","import React, { useRef } from 'react';\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\r\nimport { MainPage } from './components/mainPage';\r\nimport { OrderPage } from './components/orderPage';\r\nimport 'antd/dist/antd.css';\r\nimport './App.scss';\r\n\r\nconst App: React.FunctionComponent = () => {\r\n  const sliderRef = useRef(null);\r\n\r\n  return (\r\n    <div>\r\n      <Router>\r\n        <Switch>\r\n          <Route exact path=\"/carsharing/\">\r\n            <MainPage sliderRef={sliderRef} />\r\n          </Route>\r\n          <Route exact path=\"/carsharing/order\">\r\n            <OrderPage />\r\n          </Route>\r\n        </Switch>\r\n      </Router>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals: () => void = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import { CHANGE_USER_CITY } from '../type';\r\nimport { UserCityType } from '../../interfaces/redux';\r\n\r\nconst currentState = {\r\n  userCity: '',\r\n};\r\n\r\nexport const userInfoReducer: (\r\n  state: {\r\n    userCity: string;\r\n  },\r\n  action: UserCityType\r\n) => { userCity: string } = (state = currentState, action: UserCityType) => {\r\n  const { type, payload } = action;\r\n  switch (type) {\r\n    case CHANGE_USER_CITY:\r\n      return { ...state, userCity: payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { initState } from '../../constants/redux';\r\nimport { CommonType } from '../../interfaces/redux';\r\nimport { CHANGE_POINT } from '../../redux/type';\r\nimport { OrderType } from '../../interfaces/redux';\r\n\r\nconst currentState = {\r\n  orderList: initState,\r\n};\r\n\r\nexport const userOrderReducer: (\r\n  state: { orderList: OrderType[] },\r\n  action: CommonType\r\n) => { orderList: OrderType[] } = (\r\n  state = currentState,\r\n  action: CommonType\r\n) => {\r\n  const { type, payload } = action;\r\n  switch (type) {\r\n    case CHANGE_POINT:\r\n      return {\r\n        orderList: state.orderList.map((item, index) => {\r\n          return index === 0 ? { ...item, value: payload } : item;\r\n        }),\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { OrderType } from '../../interfaces/redux';\r\n\r\nexport const initState: OrderType[] = [\r\n  {\r\n    name: 'Пункт выдачи',\r\n    value: '',\r\n    orderNumber: 0,\r\n  },\r\n  {\r\n    name: 'Модель',\r\n    value: '',\r\n    orderNumber: 1,\r\n  },\r\n  {\r\n    name: 'Цвет',\r\n    value: '',\r\n    orderNumber: 2,\r\n  },\r\n  {\r\n    name: 'Длительность аренды',\r\n    value: '',\r\n    orderNumber: 2,\r\n  },\r\n  {\r\n    name: 'Тариф',\r\n    value: '',\r\n    orderNumber: 2,\r\n  },\r\n  {\r\n    name: 'Полный бак',\r\n    value: '',\r\n    orderNumber: 2,\r\n  },\r\n];\r\n","import { CHANGE_PAGE } from '../type';\r\nimport { UserCityType } from '../../interfaces/redux';\r\n\r\nconst currentState = 'main';\r\n\r\nexport const currentPageReducer: (\r\n  state: string,\r\n  action: UserCityType\r\n) => string = (state = currentState, action: UserCityType) => {\r\n  const { type, payload } = action;\r\n  switch (type) {\r\n    case CHANGE_PAGE:\r\n      return payload;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from 'redux';\r\nimport { userInfoReducer } from '../reducers/userInfoReducer';\r\nimport { userOrderReducer } from '../reducers/userOrderReducer';\r\nimport { currentPageReducer } from '../reducers/currentPageReducer';\r\n\r\nexport const rootReducer = combineReducers({\r\n  information: userInfoReducer,\r\n  order: userOrderReducer,\r\n  page: currentPageReducer,\r\n});\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { createStore } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport './index.scss';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { rootReducer } from './redux/rootReducer';\r\n\r\nconst store = createStore(rootReducer, composeWithDevTools());\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}