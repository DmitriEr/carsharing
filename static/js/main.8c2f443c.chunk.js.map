{"version":3,"sources":["redux/type/index.ts","redux/actions/index.ts","redux/rootReducer/index.ts","server/userLocation/index.ts","assets/common/location.svg","constants/common/index.ts","redux/selectors/index.ts","components/common/Head/index.tsx","components/mainPage/Order/index.tsx","assets/mainPage/slider/Slide_1.jpg","assets/mainPage/slider/Slide_2.png","assets/mainPage/slider/Slide_3.png","assets/mainPage/slider/Slide_4.png","assets/mainPage/sideBar/Facebook_white.svg","assets/mainPage/sideBar/Instagram.svg","assets/mainPage/sideBar/Telegram_white.svg","constants/mainPage/index.ts","components/common/SideBar/index.tsx","assets/mainPage/slider/left.svg","assets/mainPage/slider/right.svg","components/mainPage/Slider/index.tsx","components/mainPage/index.tsx","server/geocodeLocation/index.ts","components/orderPage/Location/Map/index.tsx","server/data/index.ts","components/orderPage/Location/SelectAddress/index.tsx","components/orderPage/Location/index.tsx","components/common/Loader/index.tsx","constants/orderPage/index.ts","components/orderPage/Cars/index.tsx","components/orderPage/Result/index.tsx","components/orderPage/Tabs/index.tsx","components/orderPage/Option/Date/index.tsx","components/orderPage/Option/Lists/index.tsx","components/orderPage/Option/index.tsx","components/orderPage/index.tsx","redux/reducers/userInfoReducer.ts","redux/reducers/userOrderReducer.ts","constants/redux/index.ts","redux/reducers/userPrice.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["CHANGE_USER_CITY","CHANGE_POINT","CHANGE_MODEL","CHANGE_COLOR","CHANGE_TIME","CHANGE_PRICE","CHANGE_OPTION","CALCULATE_PRICE","changeUserCity","item","type","payload","changePoint","changeModel","changeTime","changeOption","history","getUserLocation","a","url","process","fetch","response","ok","Error","status","text","json","data","message","translateCityName","Samara","Ulyanovsk","Saransk","Kazan","Krasnodar","Ufa","Saratov","Volgograd","Voronezh","Sterlitamak","Tambov","Arkhangelsk","Krasnoyarsk","place","state","information","userCity","page","router","location","pathname","list","order","orderList","info","resultMoney","price","Header","Layout","Head","dispatch","useDispatch","userLocation","useSelector","useEffect","then","translate","city","className","src","alt","Content","Footer","Order","to","href","menuItems","socialNetworks","picture","facebook","name","link","instagram","telegram","sliderItems","title","content","background","background_1","background_2","background_3","background_4","Sider","Item","Menu","SideBar","currentPage","split","useState","widthPercent","setWidthPercent","sideOpen","setSideOpen","width","onClick","map","toUpperCase","network","target","preview","length","Slider","sliderRef","useRef","handlerLeft","current","prev","handlerRight","next","dots","ref","index","classNames","left","right","MainPage","style","overflow","getCoordinates","placeName","trim","Map","points","userData","userPoint","dataBase","setDataBase","latitude","longtitude","zoom","userCoordsData","setUserCoordsData","mapContainer","setMap","value","lat","lng","results","cityList","filter","components","_type","geometry","forEach","address","includes","mapboxgl","Marker","setLngLat","addTo","accessToken","container","center","bearing","initMap","flyTo","essential","urlCommon","headerCommon","getCars","headers","getCities","getPoints","Option","Select","SelectAddress","options","initValue","deletePoint","deleteOption","placeholder","showArrow","showSearch","bordered","onChange","label","Location","cities","setCities","setPointTest","cityData","checkPoint","result","point","set","Set","cityId","add","Array","from","Loader","statuses","radioBtnsText","Cars","setColorsOpt","userCar","currentCar","cars","setCars","radioBtn","setRadioBtn","isLoading","setIsLoading","arrayCars","setArrayCars","thumbnail","path","startsWith","categoryId","Group","e","priceMin","priceMax","number","colors","size","classnames","min","max","pathImg","referrerPolicy","crossOrigin","Result","numberStatus","switchForm","car","color","date","petrol","seat","steer","checkOption","bool","count","visible","parseInt","checkStatus","active","orderNumber","showMoney","disabled","showTitle","Tabs","setNumberStatus","checkPrevStatus","ind","findIndex","_","hiddenMobile","formatter","Intl","DateTimeFormat","day","month","year","hour","minute","DateSelect","queue","setDiffTime","diffTime","disabledDate","option","moments","setMomentStart","setMomentEnd","carData","direction","showTime","format","onOk","timeToSeconds","_d","getTime","end","start","time","Date","allowClear","Lists","setOption","colorsOpt","dispacth","setColor","money","setMoney","now","finishDate","setFinishDate","momentStart","momentEnd","tarif","replace","minutes","dayCount","Math","floor","hourCount","minuteCount","selectedDate","valueOf","checkedValues","checkValue","find","undefined","OrderPage","showCurrentStatus","nextStatus","currentState","userInfoReducer","action","userOrderReducer","userPrice","createBrowserHistory","store","createStore","combineReducers","connectRouter","composeWithDevTools","App","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8c2f443c.chunk.js","sourcesContent":["export const CHANGE_USER_CITY = 'CHANGE_USER_CITY';\r\nexport const CHANGE_POINT = 'CHANGE_POINT';\r\nexport const CHANGE_MODEL = 'CHANGE_MODEL';\r\nexport const CHANGE_COLOR = 'CHANGE_COLOR';\r\nexport const CHANGE_TIME = 'CHANGE_TIME';\r\nexport const CHANGE_PRICE = 'CHANGE_PRICE';\r\nexport const CHANGE_OPTION = 'CHANGE_OPTION';\r\nexport const CALCULATE_PRICE = 'CALCULATE_PRICE';\r\n","import {\r\n  CHANGE_USER_CITY,\r\n  CHANGE_POINT,\r\n  CHANGE_MODEL,\r\n  CHANGE_COLOR,\r\n  CHANGE_TIME,\r\n  CHANGE_PRICE,\r\n  CHANGE_OPTION,\r\n  CALCULATE_PRICE,\r\n} from '../type';\r\nimport {\r\n  GenericActionOrder,\r\n  GenericActionString,\r\n  OrderType,\r\n} from '../../interfaces';\r\n\r\nexport function changeUserCity(item: string): GenericActionString {\r\n  return {\r\n    type: CHANGE_USER_CITY,\r\n    payload: item,\r\n  };\r\n}\r\n\r\nexport function changePoint(item: string): GenericActionString {\r\n  return {\r\n    type: CHANGE_POINT,\r\n    payload: item,\r\n  };\r\n}\r\n\r\nexport function changeModel(item: OrderType): GenericActionOrder {\r\n  return {\r\n    type: CHANGE_MODEL,\r\n    payload: item,\r\n  };\r\n}\r\n\r\nexport function changeColor(item: string): GenericActionString {\r\n  return {\r\n    type: CHANGE_COLOR,\r\n    payload: item,\r\n  };\r\n}\r\n\r\ntype CommonType = { value: string; count: number };\r\n\r\nexport function changeTime(\r\n  item: CommonType\r\n): { type: string; payload: CommonType } {\r\n  return {\r\n    type: CHANGE_TIME,\r\n    payload: item,\r\n  };\r\n}\r\n\r\nexport function changePrice(\r\n  item: CommonType\r\n): { type: string; payload: CommonType } {\r\n  return {\r\n    type: CHANGE_PRICE,\r\n    payload: item,\r\n  };\r\n}\r\n\r\ntype SelectType = { value: string; visible: boolean };\r\n\r\nexport function changeOption(\r\n  item: SelectType\r\n): { type: string; payload: SelectType } {\r\n  return {\r\n    type: CHANGE_OPTION,\r\n    payload: item,\r\n  };\r\n}\r\n\r\nexport function calculatPrice(item: number): { type: string; payload: number } {\r\n  return {\r\n    type: CALCULATE_PRICE,\r\n    payload: item,\r\n  };\r\n}\r\n","import { combineReducers } from 'redux';\r\nimport { History } from 'history';\r\nimport { connectRouter } from 'connected-react-router';\r\nimport { userInfoReducer } from '../reducers/userInfoReducer';\r\nimport { userOrderReducer } from '../reducers/userOrderReducer';\r\nimport { userPrice } from '../reducers/userPrice';\r\n\r\nexport const createRootReducer = (history: History) =>\r\n  combineReducers({\r\n    information: userInfoReducer,\r\n    order: userOrderReducer,\r\n    price: userPrice,\r\n    router: connectRouter(history),\r\n  });\r\n","import { TypeUserLocation } from './interface';\r\n\r\nconst link = 'https://ipinfo.io';\r\n\r\nexport const getUserLocation: () => Promise<TypeUserLocation> = async () => {\r\n  try {\r\n    const url = `${link}?token=${process.env.REACT_APP_LOCATION}`;\r\n    const response = await fetch(url);\r\n\r\n    if (!response.ok) {\r\n      throw new Error(`HTTPS ${response.status}: ${await response.text()}`);\r\n    }\r\n\r\n    const data = await response.json();\r\n    return data;\r\n  } catch (error) {\r\n    throw new Error(`Error in ipinfo - ${error.message}`);\r\n  }\r\n};\r\n","export default __webpack_public_path__ + \"static/media/location.480be180.svg\";","export const translateCityName: { [x: string]: string } = {\r\n  Samara: 'Самара',\r\n  Ulyanovsk: 'Ульяновск',\r\n  Saransk: 'Саранск',\r\n  Kazan: 'Казань',\r\n  Krasnodar: 'Краснодар',\r\n  Ufa: 'Уфа',\r\n  Saratov: 'Саратов',\r\n  Volgograd: 'Волгоград',\r\n  Voronezh: 'Воронеж',\r\n  Sterlitamak: 'Стерлитамак',\r\n  Tambov: 'Тамбов',\r\n  Arkhangelsk: 'Архангельск',\r\n  Krasnoyarsk: 'Красноярск',\r\n  'Naberezhnye Chelny': 'Набережные челны',\r\n};\r\n","import { RootReducer } from '../../interfaces';\r\n\r\nexport const place = (state: RootReducer) => state.information.userCity;\r\nexport const page = (state: RootReducer) => state.router.location.pathname;\r\nexport const list = (state: RootReducer) => state.order.orderList;\r\nexport const info = (state: RootReducer) => state.information;\r\nexport const resultMoney = (state: RootReducer) => state.price;\r\n","import React, { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { changeUserCity } from '../../../redux/actions';\r\nimport { Layout } from 'antd';\r\nimport { getUserLocation } from '../../../server/userLocation';\r\nimport { TypeUserLocation } from '../../../server/userLocation/interface';\r\nimport location from '../../../assets/common/location.svg';\r\nimport { translateCityName } from '../../../constants/common';\r\nimport { place } from '../../../redux/selectors';\r\nimport './style.scss';\r\n\r\nconst { Header } = Layout;\r\n\r\nexport const Head: React.FunctionComponent = () => {\r\n  const dispatch = useDispatch();\r\n  const userLocation: string = useSelector(place);\r\n\r\n  useEffect(() => {\r\n    getUserLocation().then((userCity: TypeUserLocation) => {\r\n      const translate = translateCityName[userCity.city];\r\n      dispatch(changeUserCity(translate));\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <Header className=\"order__header\">\r\n      <span className=\"header__logo\">Need for drive</span>\r\n      <div className=\"header__location\">\r\n        <img src={location} alt=\"location\" />\r\n        <span className=\"header__city\">{userLocation}</span>\r\n      </div>\r\n    </Header>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { Layout, Button } from 'antd';\r\nimport { Link } from 'react-router-dom';\r\nimport { Head } from '../../common/Head';\r\nimport './style.scss';\r\n\r\nconst { Content, Footer } = Layout;\r\n\r\nexport const Order: React.FunctionComponent = () => (\r\n  <Layout className=\"main-page__order\">\r\n    <Head />\r\n    <Content className=\"content\">\r\n      <div className=\"wrapper\">\r\n        <div className=\"name common\">Каршеринг</div>\r\n        <div className=\"title common\">Need for drive</div>\r\n        <div className=\"description common\">\r\n          Поминутная аренда авто твоего города\r\n        </div>\r\n        <Link to=\"/carsharing/order\">\r\n          <Button className=\"btn\" type=\"primary\">\r\n            Забронировать\r\n          </Button>\r\n        </Link>\r\n      </div>\r\n    </Content>\r\n    <Footer className=\"footer\">\r\n      <span>© 2016-2019 «Need for drive»</span>\r\n      <a href=\"tel:8-495-234-22-44\">8 (495) 234-22-44</a>\r\n    </Footer>\r\n  </Layout>\r\n);\r\n","export default __webpack_public_path__ + \"static/media/Slide_1.4cff0d29.jpg\";","export default __webpack_public_path__ + \"static/media/Slide_2.79c70027.png\";","export default __webpack_public_path__ + \"static/media/Slide_3.a2384b88.png\";","export default __webpack_public_path__ + \"static/media/Slide_4.77d3edc0.png\";","export default __webpack_public_path__ + \"static/media/Facebook_white.01c0ca6a.svg\";","export default __webpack_public_path__ + \"static/media/Instagram.5e14e95a.svg\";","export default __webpack_public_path__ + \"static/media/Telegram_white.09f73cfe.svg\";","import background_1 from '../../assets/mainPage/slider/Slide_1.jpg';\r\nimport background_2 from '../../assets/mainPage/slider/Slide_2.png';\r\nimport background_3 from '../../assets/mainPage/slider/Slide_3.png';\r\nimport background_4 from '../../assets/mainPage/slider/Slide_4.png';\r\nimport facebook from '../../assets/mainPage/sideBar/Facebook_white.svg';\r\nimport instagram from '../../assets/mainPage/sideBar/Instagram.svg';\r\nimport telegram from '../../assets/mainPage/sideBar/Telegram_white.svg';\r\n\r\nexport const menuItems: string[] = [\r\n  'парковка',\r\n  'страховка',\r\n  'бензин',\r\n  'обслуживание',\r\n];\r\n\r\nexport const socialNetworks: {\r\n  picture: string;\r\n  name: string;\r\n  link: string;\r\n}[] = [\r\n  {\r\n    picture: facebook,\r\n    name: 'facebook',\r\n    link: 'https://www.facebook.com/dmitri.erkin',\r\n  },\r\n  {\r\n    picture: instagram,\r\n    name: 'instagram',\r\n    link: 'https://www.instagram.com/idmitriier/?hl=ru',\r\n  },\r\n  {\r\n    picture: telegram,\r\n    name: 'telegram',\r\n    link: 'https://web.telegram.org/',\r\n  },\r\n];\r\n\r\nexport const sliderItems: { [x: string]: string }[] = [\r\n  {\r\n    title: 'Бесплатный парковка',\r\n    content:\r\n      'Оставляйте машину на платных городских парковках и разрешенных местах, не нарушая ПДД, а также в аэропортах.',\r\n    background: background_1,\r\n  },\r\n  {\r\n    title: 'Страховка',\r\n    content: 'Полная страховка страховка автомобиля',\r\n    background: background_2,\r\n  },\r\n  {\r\n    title: 'Бензин',\r\n    content: 'Полный бак на любой заправке города за наш счёт',\r\n    background: background_3,\r\n  },\r\n  {\r\n    title: 'Обслуживание',\r\n    content: 'Автомобиль проходит еженедельное ТО',\r\n    background: background_4,\r\n  },\r\n];\r\n","import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\nimport { Layout, Menu, Image } from 'antd';\r\nimport { menuItems, socialNetworks } from '../.././../constants/mainPage';\r\nimport { page } from '../../../redux/selectors';\r\nimport './style.scss';\r\n\r\nconst { Sider } = Layout;\r\nconst { Item } = Menu;\r\n\r\nexport const SideBar: React.FunctionComponent = () => {\r\n  const currentPage = useSelector(page).split('/');\r\n\r\n  const [widthPercent, setWidthPercent] = useState<string | number>(80);\r\n  const [sideOpen, setSideOpen] = useState<boolean>(false);\r\n\r\n  const showMenu = () => {\r\n    if (sideOpen) {\r\n      setWidthPercent(80);\r\n      setSideOpen(false);\r\n    } else {\r\n      setWidthPercent('100%');\r\n      setSideOpen(true);\r\n    }\r\n  };\r\n\r\n  const switchSlide = () => {\r\n    setSideOpen(false);\r\n    setWidthPercent(80);\r\n  };\r\n\r\n  const showContent = () => {\r\n    if (sideOpen) {\r\n      return (\r\n        <div className=\"menu\">\r\n          <div className=\"menu-open\">\r\n            <div className=\"inner-wrapper\">\r\n              <Menu className=\"items\">\r\n                {menuItems.map((item: string) => (\r\n                  <Item onClick={() => switchSlide()} key={item}>\r\n                    <Link to=\"/carsharing\" className=\"item\">\r\n                      {item.toUpperCase()}\r\n                    </Link>\r\n                  </Item>\r\n                ))}\r\n              </Menu>\r\n              <ul className=\"links\">\r\n                {socialNetworks.map(\r\n                  (network: {\r\n                    picture: string;\r\n                    name: string;\r\n                    link: string;\r\n                  }) => {\r\n                    const { picture, name, link } = network;\r\n                    return (\r\n                      <a href={link} target=\"blank\" key={name} className=\"link\">\r\n                        <Image\r\n                          src={picture}\r\n                          alt=\"social\"\r\n                          preview={false}\r\n                          className=\"img\"\r\n                        />\r\n                      </a>\r\n                    );\r\n                  }\r\n                )}\r\n              </ul>\r\n            </div>\r\n          </div>\r\n          <div\r\n            className={\r\n              currentPage[currentPage.length - 1] === 'order'\r\n                ? 'menu-full dark'\r\n                : 'menu-full light'\r\n            }\r\n          ></div>\r\n        </div>\r\n      );\r\n    }\r\n    return null;\r\n  };\r\n\r\n  return (\r\n    <Sider className=\"sidebar\" width={widthPercent}>\r\n      <div\r\n        onClick={showMenu}\r\n        className={sideOpen ? 'btn-off btn' : 'btn-on btn'}\r\n      />\r\n      {showContent()}\r\n    </Sider>\r\n  );\r\n};\r\n","export default __webpack_public_path__ + \"static/media/left.1752ae91.svg\";","export default __webpack_public_path__ + \"static/media/right.7591c327.svg\";","import React, { useRef } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Carousel, Image, Layout, Button } from 'antd';\r\nimport classNames from 'classnames';\r\nimport { sliderItems } from '../../../constants/mainPage';\r\nimport left from '../../../assets/mainPage/slider/left.svg';\r\nimport right from '../../../assets/mainPage/slider/right.svg';\r\nimport './style.scss';\r\n\r\nconst { Content } = Layout;\r\n\r\nexport const Slider: React.FunctionComponent = () => {\r\n  const sliderRef = useRef(null);\r\n\r\n  const handlerLeft = () => sliderRef.current.prev();\r\n  const handlerRight = () => sliderRef.current.next();\r\n\r\n  return (\r\n    <Carousel\r\n      className=\"main-page__slider\"\r\n      dots={{ className: 'btn-down' }}\r\n      ref={sliderRef}\r\n    >\r\n      {sliderItems.map(({ title, content, background }, index) => {\r\n        return (\r\n          <Layout key={title} className=\"wrapper\">\r\n            <Content className=\"slide\">\r\n              <Image\r\n                src={background}\r\n                alt={title}\r\n                className={classNames('background', `background-${index}`)}\r\n                preview={false}\r\n              />\r\n              <div className=\"filter\"></div>\r\n              <Button\r\n                type=\"ghost\"\r\n                className=\"control-left control\"\r\n                onClick={handlerLeft}\r\n              >\r\n                <Image src={left} alt=\"left\" preview={false} />\r\n              </Button>\r\n              <Button\r\n                type=\"ghost\"\r\n                className=\"control-right control\"\r\n                onClick={handlerRight}\r\n              >\r\n                <Image src={right} alt=\"right\" preview={false} />\r\n              </Button>\r\n              <div className=\"content\">\r\n                <span className=\"title\">{title}</span>\r\n                <div className=\"description\">{content}</div>\r\n                <Link to=\"/carsharing/order\">\r\n                  <Button\r\n                    className={classNames('btn', `btn-${index}`)}\r\n                    type=\"primary\"\r\n                  >\r\n                    Подробнее\r\n                  </Button>\r\n                </Link>\r\n              </div>\r\n            </Content>\r\n          </Layout>\r\n        );\r\n      })}\r\n    </Carousel>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { Layout } from 'antd';\r\nimport { Order } from './Order';\r\nimport { SideBar } from '../common/SideBar';\r\nimport { Slider } from './Slider';\r\nimport './style.scss';\r\n\r\nexport const MainPage: React.FunctionComponent = () => (\r\n  <Layout\r\n    className=\"main-page\"\r\n    style={{ overflow: 'hidden', background: '#fff' }}\r\n  >\r\n    <SideBar />\r\n    <Order />\r\n    <Slider />\r\n  </Layout>\r\n);\r\n","interface HTTPResponseCoords {\r\n  results: {\r\n    geometry: { lat: number; lng: number };\r\n    components: { _type: string };\r\n  }[];\r\n}\r\n\r\nexport const getCoordinates: (\r\n  placeName: string\r\n) => Promise<HTTPResponseCoords> = async (placeName: string) => {\r\n  try {\r\n    const url = `https://api.opencagedata.com/geocode/v1/json?q=${placeName.trim()}&key=${\r\n      process.env.REACT_APP_OPENCAGEDATA\r\n    }`;\r\n    const response = await fetch(url);\r\n\r\n    if (!response.ok) {\r\n      throw new Error(`HTTPS ${response.status}: ${await response.text()}`);\r\n    }\r\n\r\n    const data = await response.json();\r\n    return data;\r\n  } catch (error) {\r\n    throw new Error(`Error in geocode - ${error.message}`);\r\n  }\r\n};\r\n","import React, { useState, useEffect, useRef } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport mapboxgl from 'mapbox-gl';\r\nimport 'mapbox-gl/dist/mapbox-gl.css';\r\nimport 'react-map-gl-geocoder/dist/mapbox-gl-geocoder.css';\r\nimport { getCoordinates } from '../../../../server/geocodeLocation';\r\nimport { info, list } from '../../../../redux/selectors';\r\nimport './style.scss';\r\n\r\ntype MapType = { points: string[] };\r\n\r\nexport const Map: React.FunctionComponent<MapType> = ({ points }) => {\r\n  const userData = useSelector(info);\r\n  const userPoint = useSelector(list);\r\n\r\n  const [dataBase, setDataBase] = useState<string[]>([]);\r\n\r\n  const [userCoordsData, setUserCoordsData] = useState<{ [x: string]: number }>(\r\n    {\r\n      latitude: 0,\r\n      longtitude: 0,\r\n      zoom: 10,\r\n    }\r\n  );\r\n  const mapContainer = useRef<HTMLDivElement>(null);\r\n  const [map, setMap] = useState(null);\r\n\r\n  const { userCity } = userData;\r\n  const { value } = userPoint[0];\r\n\r\n  useEffect(() => {\r\n    if (userCity || value.length) {\r\n      getCoordinates(`${userCity} ${value}`).then(({ results }) => {\r\n        let lat;\r\n        let lng;\r\n        if (value.length === 0) {\r\n          const cityList = results.filter((item) => {\r\n            if (item.components._type === 'city') {\r\n              return true;\r\n            }\r\n          });\r\n          const [{ geometry }] = cityList;\r\n          lng = geometry.lng;\r\n          lat = geometry.lat;\r\n        } else {\r\n          const [{ geometry }] = results;\r\n          lng = geometry.lng;\r\n          lat = geometry.lat;\r\n        }\r\n        setUserCoordsData({\r\n          latitude: lat,\r\n          longtitude: lng,\r\n          zoom: value.length ? 15 : 10,\r\n        });\r\n      });\r\n    }\r\n  }, [userCity, value]);\r\n\r\n  useEffect(() => {\r\n    if (userCity && map && points) {\r\n      points.forEach((address) => {\r\n        if (!dataBase.includes(address)) {\r\n          setDataBase((prev) => [...prev, address]);\r\n          getCoordinates(`${userCity}, ${address}`).then(({ results }) => {\r\n            if (results.length) {\r\n              const { geometry } = results[0];\r\n              const { lat, lng } = geometry;\r\n              new mapboxgl.Marker().setLngLat([lng, lat]).addTo(map);\r\n            }\r\n          });\r\n        }\r\n      });\r\n    }\r\n  }, [userCity, map, points]);\r\n\r\n  useEffect(() => {\r\n    if (userCoordsData.latitude) {\r\n      mapboxgl.accessToken = process.env.REACT_APP_MAP;\r\n\r\n      const initMap = (\r\n        setMap: React.Dispatch<React.SetStateAction<mapboxgl.Map>>,\r\n        mapContainer: React.RefObject<HTMLDivElement>\r\n      ) => {\r\n        if (!mapContainer.current) {\r\n          return null;\r\n        }\r\n        const { latitude, longtitude, zoom } = userCoordsData;\r\n\r\n        const map = new mapboxgl.Map({\r\n          container: mapContainer.current,\r\n          style: 'mapbox://styles/mapbox/outdoors-v11',\r\n          center: [longtitude, latitude],\r\n          zoom,\r\n          bearing: 0,\r\n        });\r\n\r\n        setMap(map);\r\n      };\r\n      if (!map) {\r\n        initMap(setMap, mapContainer);\r\n      }\r\n    }\r\n  }, [map, userCoordsData]);\r\n\r\n  useEffect(() => {\r\n    if (map !== null) {\r\n      map.flyTo({\r\n        center: [userCoordsData.longtitude, userCoordsData.latitude],\r\n        essential: true,\r\n        zoom: userCoordsData.zoom,\r\n      });\r\n    }\r\n  }, [userCoordsData]);\r\n\r\n  return <div ref={mapContainer} className=\"mapContainer\" />;\r\n};\r\n","const urlCommon =\r\n  'https://cors-anywhere.herokuapp.com/http://api-factory.simbirsoft1.com/api/db/';\r\nconst headerCommon = {\r\n  'X-Api-Factory-Application-Id': '5e25c641099b810b946c5d5b',\r\n  'Content-Type': 'application/json',\r\n};\r\n\r\nexport const getCars: () => Promise<{\r\n  data: {\r\n    categoryId: { name: string };\r\n    name: string;\r\n    priceMin: number;\r\n    priceMax: number;\r\n    thumbnail: { path: string };\r\n    colors: string[];\r\n    number: string;\r\n  }[];\r\n}> = async () => {\r\n  try {\r\n    const url = `${urlCommon}car`;\r\n    const response = await fetch(url, {\r\n      headers: headerCommon,\r\n    });\r\n\r\n    if (!response.ok) {\r\n      throw new Error(`HTTP ${response.status}: ${await response.text()}`);\r\n    }\r\n\r\n    const data = await response.json();\r\n    return data;\r\n  } catch (error) {\r\n    throw new Error(`Error in database cars: ${error.message}`);\r\n  }\r\n};\r\n\r\nexport const getCities: () => Promise<{\r\n  data: { name: string }[];\r\n}> = async () => {\r\n  try {\r\n    const url = `${urlCommon}city`;\r\n    const response = await fetch(url, {\r\n      headers: headerCommon,\r\n    });\r\n\r\n    if (!response.ok) {\r\n      throw new Error(`HTTP ${response.status}: ${await response.text()}`);\r\n    }\r\n\r\n    const data = await response.json();\r\n    return data;\r\n  } catch (error) {\r\n    throw new Error(`Error in database cars: ${error.message}`);\r\n  }\r\n};\r\n\r\nexport const getPoints: () => Promise<{\r\n  data: { cityId: { name: string }; address: string }[];\r\n}> = async () => {\r\n  try {\r\n    const url = `${urlCommon}point`;\r\n    const response = await fetch(url, {\r\n      headers: headerCommon,\r\n    });\r\n\r\n    if (!response.ok) {\r\n      throw new Error(`HTTP ${response.status}: ${await response.text()}`);\r\n    }\r\n\r\n    const data = await response.json();\r\n    return data;\r\n  } catch (error) {\r\n    throw new Error(`Error in database cars: ${error.message}`);\r\n  }\r\n};\r\n","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { Select } from 'antd';\r\nimport { GenericActionString } from '../../../../interfaces';\r\n\r\nconst { Option } = Select;\r\n\r\ninterface AddressType {\r\n  options: string[];\r\n  name: string;\r\n  changeOption: (item: string) => GenericActionString;\r\n  initValue: string;\r\n  deletePoint?: (item: string) => GenericActionString;\r\n  deleteOption: boolean;\r\n}\r\n\r\nexport const SelectAddress: React.FunctionComponent<AddressType> = ({\r\n  options,\r\n  name,\r\n  changeOption,\r\n  initValue,\r\n  deletePoint,\r\n  deleteOption,\r\n}) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const addAddressToState = (item: string) => {\r\n    if (deleteOption) {\r\n      dispatch(deletePoint(''));\r\n    }\r\n    dispatch(changeOption(item));\r\n  };\r\n\r\n  return (\r\n    <Select\r\n      placeholder={`Начните вводить ${name}`}\r\n      className=\"select\"\r\n      showArrow={false}\r\n      showSearch={true}\r\n      bordered={false}\r\n      onChange={(value: string) => addAddressToState(value)}\r\n      value={initValue}\r\n    >\r\n      {options.map((item: string) => (\r\n        <Option value={item} label={item} key={item}>\r\n          {item}\r\n        </Option>\r\n      ))}\r\n    </Select>\r\n  );\r\n};\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { Map } from './Map';\r\nimport { getCities, getPoints } from '../../../server/data';\r\nimport { changePoint, changeUserCity } from '../../../redux/actions';\r\nimport { info, list } from '../../../redux/selectors';\r\nimport { SelectAddress } from './SelectAddress';\r\nimport './style.scss';\r\n\r\nexport const Location: React.FunctionComponent = () => {\r\n  const [cities, setCities] = useState<string[]>([]);\r\n  const [points, setPointTest] = useState<string[]>([]);\r\n\r\n  const cityData = useSelector(info);\r\n  const pointValue = useSelector(list);\r\n\r\n  const checkPoint = pointValue[0].value;\r\n\r\n  const { userCity } = cityData;\r\n\r\n  useEffect(() => {\r\n    getCities().then((city) => {\r\n      const result = city.data.map(({ name }) => name);\r\n      setCities(result);\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (userCity.length) {\r\n      getPoints().then((point) => {\r\n        const set: Set<string> = new Set();\r\n        point.data.forEach((item) => {\r\n          if (item.cityId.name === userCity) {\r\n            if (item.address === 'Нариманова 1, корп.2') {\r\n              item.address = 'Нариманова 1';\r\n            }\r\n            set.add(item.address);\r\n          }\r\n        });\r\n        setPointTest(Array.from(set));\r\n      });\r\n    }\r\n  }, [userCity]);\r\n\r\n  return (\r\n    <div className=\"location\">\r\n      <div className=\"city\">\r\n        <span className=\"name\">Город:</span>\r\n        <SelectAddress\r\n          options={cities}\r\n          name={'город'}\r\n          changeOption={changeUserCity}\r\n          deletePoint={changePoint}\r\n          initValue={userCity}\r\n          deleteOption={true}\r\n        />\r\n      </div>\r\n      <div className=\"point\">\r\n        <span className=\"name\">Пункт выдачи:</span>\r\n        <SelectAddress\r\n          options={points}\r\n          name={'пункт'}\r\n          changeOption={changePoint}\r\n          initValue={checkPoint}\r\n          deleteOption={false}\r\n        />\r\n      </div>\r\n      <div className=\"map\">\r\n        <span className=\"name\">Выбрать на карте:</span>\r\n        <Map points={points} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { Spin } from 'antd';\r\n\r\nexport const Loader: React.FunctionComponent = () => <Spin />;\r\n","type ArrayStatuses = ['Местоположение', 'Модель', 'Дополнительно', 'Итого'];\r\ntype ArrayBtn = ['Все модели', 'Эконом', 'Премиум'];\r\n\r\nexport const statuses: ArrayStatuses = [\r\n  'Местоположение',\r\n  'Модель',\r\n  'Дополнительно',\r\n  'Итого',\r\n];\r\n\r\nexport const radioBtnsText: ArrayBtn = ['Все модели', 'Эконом', 'Премиум'];\r\nexport const price: string[] = ['Поминутно, 7₽/мин', 'На сутки, 1999 ₽/сутки'];\r\nexport const options: string[] = [\r\n  'Полный бак, 500р',\r\n  'Детское кресло, 200р',\r\n  'Правый руль, 1600р',\r\n];\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport classnames from 'classnames';\r\nimport { Card, Radio } from 'antd';\r\nimport { Loader } from '../../common/Loader';\r\nimport { getCars } from '../../../server/data';\r\nimport { changeModel } from '../../../redux/actions';\r\nimport { list } from '../../../redux/selectors';\r\nimport { radioBtnsText } from '../../../constants/orderPage';\r\nimport './style.scss';\r\n\r\ninterface CarsData {\r\n  name: string;\r\n  priceMin: number;\r\n  priceMax: number;\r\n  thumbnail: { path: string };\r\n  categoryId: { name: string };\r\n  colors: string[];\r\n  number: string;\r\n}\r\n\r\ninterface CarsProps {\r\n  setColorsOpt: (color: string[]) => void;\r\n}\r\n\r\nexport const Cars: React.FunctionComponent<CarsProps> = ({ setColorsOpt }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const userCar = useSelector(list);\r\n  const currentCar = userCar[1].value;\r\n\r\n  const [cars, setCars] = useState<CarsData[]>([]);\r\n  const [radioBtn, setRadioBtn] = useState('Все модели');\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [arrayCars, setArrayCars] = useState<CarsData[]>([]);\r\n\r\n  useEffect(() => {\r\n    getCars().then(({ data }) => {\r\n      const result = data.filter(({ thumbnail }) => {\r\n        if (thumbnail.path.startsWith('/files/')) {\r\n          return true;\r\n        }\r\n      });\r\n      setCars(result);\r\n      setArrayCars(result);\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const result = arrayCars.filter(({ categoryId }) => {\r\n      switch (radioBtn) {\r\n        case categoryId.name:\r\n          return true;\r\n        case radioBtnsText[0]:\r\n          return true;\r\n        default:\r\n          return false;\r\n      }\r\n    });\r\n    setCars(result);\r\n  }, [radioBtn]);\r\n\r\n  useEffect(() => {\r\n    cars.length === 0 ? setIsLoading(true) : setIsLoading(false);\r\n  }, [cars]);\r\n\r\n  return (\r\n    <div className=\"cards\">\r\n      {isLoading ? <Loader /> : null}\r\n      <Radio.Group\r\n        onChange={(e) => setRadioBtn(e.target.value)}\r\n        value={radioBtn}\r\n        className=\"radio-btns\"\r\n      >\r\n        {radioBtnsText.map((text) => (\r\n          <Radio value={text} key={text}>\r\n            {text}\r\n          </Radio>\r\n        ))}\r\n      </Radio.Group>\r\n      {cars.map(\r\n        ({ name, priceMin, priceMax, thumbnail, number, colors }, index) => {\r\n          return (\r\n            <Card\r\n              size=\"small\"\r\n              title={\r\n                <>\r\n                  <div className=\"title\">{name}</div>\r\n                  <div className=\"price\">{`${priceMin} - ${priceMax} Р`}</div>\r\n                </>\r\n              }\r\n              key={index}\r\n              className={\r\n                currentCar === name ? classnames('active', 'card') : 'card'\r\n              }\r\n              onClick={() => {\r\n                dispatch(\r\n                  changeModel({\r\n                    ...userCar[1],\r\n                    value: name,\r\n                    min: priceMin,\r\n                    max: priceMax,\r\n                    number,\r\n                    pathImg: thumbnail.path,\r\n                  })\r\n                );\r\n                setColorsOpt(colors);\r\n              }}\r\n            >\r\n              <img\r\n                className=\"image\"\r\n                src={`https://cors-anywhere.herokuapp.com/http://api-factory.simbirsoft1.com${thumbnail.path}`}\r\n                alt={name}\r\n                referrerPolicy=\"origin\"\r\n                crossOrigin=\"anonymous\"\r\n              />\r\n            </Card>\r\n          );\r\n        }\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","import React, { useEffect } from 'react';\r\nimport { Button } from 'antd';\r\nimport classnames from 'classnames';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { list, resultMoney } from '../../../redux/selectors';\r\nimport { statuses } from '../../../constants/orderPage';\r\nimport { NumberForms } from '../../../interfaces';\r\nimport './style.scss';\r\nimport { calculatPrice } from '../../../redux/actions';\r\n\r\ninterface ResultInterface {\r\n  numberStatus: NumberForms;\r\n  switchForm: () => void;\r\n}\r\n\r\nexport const Result: React.FunctionComponent<ResultInterface> = ({\r\n  numberStatus,\r\n  switchForm,\r\n}) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const orderList = useSelector(list);\r\n  const results = useSelector(resultMoney);\r\n  const [, car, color, date, price, petrol, seat, steer] = orderList;\r\n\r\n  const checkOption = (bool, value) => (bool ? value : 0);\r\n\r\n  useEffect(() => {\r\n    let result;\r\n    if (price.count === 7) {\r\n      result =\r\n        date.count * price.count +\r\n        checkOption(petrol.visible, petrol.count) +\r\n        checkOption(seat.visible, seat.count) +\r\n        checkOption(steer.visible, steer.count);\r\n    } else {\r\n      result =\r\n        (date.count / 1440) * price.count +\r\n        checkOption(petrol.visible, petrol.count) +\r\n        checkOption(seat.visible, seat.count) +\r\n        checkOption(steer.visible, steer.count);\r\n    }\r\n\r\n    dispatch(calculatPrice(parseInt(result, 10)));\r\n  }, [price, date, petrol, seat, steer]);\r\n\r\n  const checkStatus = () => {\r\n    if (\r\n      numberStatus.active <= 1 &&\r\n      orderList[numberStatus.active].value.length\r\n    ) {\r\n      return true;\r\n    } else if (\r\n      color.value &&\r\n      date.value &&\r\n      price.value &&\r\n      results >= orderList[1].min &&\r\n      results <= orderList[1].max\r\n    ) {\r\n      return true;\r\n    }\r\n  };\r\n\r\n  const showMoney = () => {\r\n    switch (numberStatus.active) {\r\n      case 1:\r\n        return `${car.min}-${car.max}`;\r\n      case 2:\r\n        return results;\r\n      default:\r\n        return '';\r\n    }\r\n  };\r\n\r\n  const showTitle = () => {\r\n    if (numberStatus.active === 2) {\r\n      if (results < orderList[1].min) {\r\n        return `Минимальная сумма заказа ${orderList[1].min}`;\r\n      } else if (results > orderList[1].max) {\r\n        return `Максимальная сумма заказа ${orderList[1].max}`;\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"result\">\r\n      <h2>Ваш заказ</h2>\r\n      {orderList.map(({ name, value, orderNumber, visible }) => {\r\n        if (orderNumber <= numberStatus.current && visible) {\r\n          return (\r\n            <div className=\"list\" key={name}>\r\n              <div className=\"dots link\">\r\n                <span className=\"field\">{name}</span>\r\n              </div>\r\n              <span className=\"address\">{value}</span>\r\n            </div>\r\n          );\r\n        }\r\n      })}\r\n      <div className=\"price\">\r\n        <span>{'Цена: '}</span>\r\n        <span>{showMoney()}</span>\r\n      </div>\r\n      <Button\r\n        disabled={checkStatus() ? false : true}\r\n        onClick={() => switchForm()}\r\n        className={\r\n          checkStatus()\r\n            ? classnames('btn', 'btn-active')\r\n            : classnames('btn', 'btn-disable')\r\n        }\r\n        title={showTitle()}\r\n      >\r\n        {statuses[numberStatus.active + 1]}\r\n      </Button>\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport classnames from 'classnames';\r\nimport { NumberForms } from '../../../interfaces';\r\nimport { statuses } from '../../../constants/orderPage';\r\nimport './style.scss';\r\n\r\ninterface TabsInterface {\r\n  numberStatus: NumberForms;\r\n  setNumberStatus: (NumberForms) => void;\r\n}\r\n\r\nexport const Tabs: React.FunctionComponent<TabsInterface> = ({\r\n  numberStatus,\r\n  setNumberStatus,\r\n}) => {\r\n  const checkCurrentStatus = (ind: number) => {\r\n    return numberStatus.current === ind ? 'status-active' : '';\r\n  };\r\n\r\n  const checkPrevStatus = (ind: number) => {\r\n    const prevStatus = statuses.findIndex(\r\n      (_, index) => index === numberStatus.current\r\n    );\r\n    return ind < prevStatus ? 'status-prev' : '';\r\n  };\r\n\r\n  const hiddenMobile = (ind: number) => {\r\n    const current = numberStatus.active;\r\n    return ind >= current - 1 && ind <= current + 1 ? '' : 'status-mobile';\r\n  };\r\n\r\n  const switchActiveTabs = (ind: number) => {\r\n    if (ind <= numberStatus.current) {\r\n      setNumberStatus({ ...numberStatus, active: ind });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"statuses\">\r\n      {statuses.map((status: string, index: number) => (\r\n        <span\r\n          key={status}\r\n          onClick={() => switchActiveTabs(index)}\r\n          className={classnames(\r\n            'status',\r\n            checkCurrentStatus(index),\r\n            checkPrevStatus(index),\r\n            hiddenMobile(index)\r\n          )}\r\n        >\r\n          {status}\r\n        </span>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { Space, DatePicker } from 'antd';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Moment } from 'moment';\r\nimport { list } from '../../../../redux/selectors';\r\nimport { changeModel } from '../../../../redux/actions';\r\nimport { DiffTimeProps } from '../../../../interfaces';\r\nimport './style.scss';\r\n\r\ninterface DateProps {\r\n  queue: boolean;\r\n  setDiffTime: ({ start, end }: DiffTimeProps) => void;\r\n  diffTime: DiffTimeProps;\r\n  disabledDate: (current, option) => boolean;\r\n  option?: Date | number;\r\n  setMomentStart?: (value) => void;\r\n  setMomentEnd?: (value) => void;\r\n  moments: Moment;\r\n}\r\n\r\nconst formatter = new Intl.DateTimeFormat('ru', {\r\n  day: 'numeric',\r\n  month: 'numeric',\r\n  year: 'numeric',\r\n  hour: 'numeric',\r\n  minute: 'numeric',\r\n});\r\n\r\nexport const DateSelect: React.FunctionComponent<DateProps> = ({\r\n  queue,\r\n  setDiffTime,\r\n  diffTime,\r\n  disabledDate,\r\n  option,\r\n  moments,\r\n  setMomentStart,\r\n  setMomentEnd,\r\n}) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const carData = useSelector(list)[1];\r\n\r\n  const getDatahandler = (value) => {\r\n    const timeToSeconds = value._d.getTime();\r\n    if (queue) {\r\n      setDiffTime({ ...diffTime, end: timeToSeconds });\r\n      setMomentEnd(value);\r\n    } else {\r\n      setDiffTime({ ...diffTime, start: timeToSeconds });\r\n      setMomentStart(value);\r\n      dispatch(\r\n        changeModel({ ...carData, time: formatter.format(new Date(value._d)) })\r\n      );\r\n    }\r\n  };\r\n\r\n  const updateValue = (value) => {\r\n    if (value === null) {\r\n      if (queue) {\r\n        setMomentEnd(null);\r\n      } else {\r\n        setMomentStart(null);\r\n        setMomentEnd(null);\r\n        setDiffTime({ start: 0, end: 0 });\r\n        dispatch(changeModel({ ...carData, time: '' }));\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <span className=\"date-value\">{queue ? 'По' : 'C'}</span>\r\n      <Space direction=\"vertical\" size={300} className=\"date-picker\">\r\n        <DatePicker\r\n          showTime={{ format: 'HH:mm' }}\r\n          className=\"date\"\r\n          format=\"DD-MM-YYYY HH:mm\"\r\n          disabledDate={(current) => disabledDate(current, option)}\r\n          onOk={getDatahandler}\r\n          allowClear={true}\r\n          bordered={false}\r\n          placeholder={'Выберите дату и время'}\r\n          value={moments}\r\n          onChange={(e) => updateValue(e)}\r\n          disabled={queue && diffTime.start === 0 ? true : false}\r\n        />\r\n      </Space>\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { Radio } from 'antd';\r\nimport classnames from 'classnames';\r\nimport './style.scss';\r\n\r\ninterface ListsProps {\r\n  title: string;\r\n  setOption: (e: string) => void;\r\n  list: string[];\r\n  option: string;\r\n}\r\n\r\nexport const Lists: React.FunctionComponent<ListsProps> = ({\r\n  title,\r\n  setOption,\r\n  list,\r\n  option,\r\n}) => {\r\n  return (\r\n    <div className=\"select-wrapper\">\r\n      <div className=\"title\">{title}</div>\r\n      <Radio.Group\r\n        onChange={(e) => setOption(e.target.value)}\r\n        className=\"select-values\"\r\n      >\r\n        {list.map((item) => (\r\n          <Radio\r\n            value={item}\r\n            key={item}\r\n            className={\r\n              option === item ? classnames('active', 'value') : 'value'\r\n            }\r\n          >\r\n            {item}\r\n          </Radio>\r\n        ))}\r\n      </Radio.Group>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { Checkbox } from 'antd';\r\nimport { DateSelect } from './Date';\r\nimport { Lists } from './Lists';\r\nimport { price, options } from '../../../constants/orderPage';\r\nimport {\r\n  changeColor,\r\n  changeTime,\r\n  changePrice,\r\n  changeOption,\r\n} from '../../../redux/actions';\r\nimport { DiffTimeProps } from '../../../interfaces';\r\nimport './style.scss';\r\n\r\ninterface OptionProps {\r\n  colorsOpt: string[];\r\n}\r\n\r\nexport const Option: React.FunctionComponent<OptionProps> = ({ colorsOpt }) => {\r\n  const dispacth = useDispatch();\r\n\r\n  const [color, setColor] = useState<string>();\r\n  const [money, setMoney] = useState<string>();\r\n  const [diffTime, setDiffTime] = useState<DiffTimeProps>({ start: 0, end: 0 });\r\n  const [finishDate, setFinishDate] = useState(Date.now());\r\n  const [momentStart, setMomentStart] = useState();\r\n  const [momentEnd, setMomentEnd] = useState();\r\n\r\n  useEffect(() => {\r\n    dispacth(changeColor(color));\r\n  }, [color]);\r\n\r\n  useEffect(() => {\r\n    if (money) {\r\n      const [name, number] = money.split(',');\r\n      const tarif = parseInt(number.replace(/\\D/g, ''), 10);\r\n      dispacth(changePrice({ value: name, count: tarif }));\r\n    }\r\n  }, [money]);\r\n\r\n  useEffect(() => {\r\n    const { start, end } = diffTime;\r\n    const minutes = (end - start) / (60 * 1000);\r\n\r\n    const dayCount = Math.floor(minutes / 1440);\r\n    const hourCount = Math.floor((minutes % 1440) / 60);\r\n    const minuteCount = Math.floor(minutes % 60);\r\n\r\n    const day = dayCount > 0 ? `${dayCount}д` : '';\r\n    const hour = hourCount > 0 ? `${hourCount}ч` : '';\r\n    const minute = minuteCount > 0 ? `${minuteCount}м` : '';\r\n\r\n    if (minutes < 60) {\r\n      dispacth(changeTime({ value: `${minute}`, count: minutes }));\r\n    } else if (minutes >= 60 && minutes < 1440) {\r\n      dispacth(changeTime({ value: `${hour} ${minute}`, count: minutes }));\r\n    } else if (minutes >= 1440 && minutes < 365 * 1440) {\r\n      dispacth(\r\n        changeTime({ value: `${day} ${hour} ${minute}`, count: minutes })\r\n      );\r\n    }\r\n  }, [diffTime]);\r\n\r\n  useEffect(() => {\r\n    setFinishDate(diffTime.start);\r\n  }, [diffTime]);\r\n\r\n  const disabledDate = (value, option) => {\r\n    const selectedDate = value._d;\r\n    return new Date(option).valueOf() >= new Date(selectedDate).valueOf();\r\n  };\r\n\r\n  const selectOption = (checkedValues) => {\r\n    options.forEach((item) => {\r\n      const [value] = item.split(',');\r\n      const checkValue = checkedValues.find((value) => value === item);\r\n      if (checkValue === undefined) {\r\n        dispacth(changeOption({ value, visible: false }));\r\n      } else {\r\n        dispacth(changeOption({ value, visible: true }));\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"options-wrapper\">\r\n      <Lists\r\n        list={colorsOpt}\r\n        title={'Цвет'}\r\n        setOption={setColor}\r\n        option={color}\r\n      />\r\n      <div className=\"date-wrapper\">\r\n        <div className=\"title\">Дата аренды</div>\r\n        <DateSelect\r\n          queue={false}\r\n          setDiffTime={setDiffTime}\r\n          diffTime={diffTime}\r\n          disabledDate={disabledDate}\r\n          option={Date.now()}\r\n          setMomentEnd={setMomentEnd}\r\n          setMomentStart={setMomentStart}\r\n          moments={momentStart}\r\n        />\r\n        <DateSelect\r\n          queue={true}\r\n          setDiffTime={setDiffTime}\r\n          diffTime={diffTime}\r\n          disabledDate={disabledDate}\r\n          option={finishDate}\r\n          setMomentStart={setMomentStart}\r\n          setMomentEnd={setMomentEnd}\r\n          moments={momentEnd}\r\n        />\r\n      </div>\r\n      <Lists list={price} title={'Тариф'} setOption={setMoney} option={money} />\r\n      <div className=\"checkbox-wrapper\">\r\n        <div className=\"title\">Доп услуги</div>\r\n        <Checkbox.Group\r\n          options={options}\r\n          onChange={selectOption}\r\n          className=\"checkbox\"\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState } from 'react';\r\nimport { Layout } from 'antd';\r\nimport { Location } from './Location';\r\nimport { Cars } from './Cars';\r\nimport { SideBar } from '../../components/common/SideBar';\r\nimport { Head } from '../common/Head';\r\nimport { Result } from './Result';\r\nimport { Tabs } from './Tabs';\r\nimport { Option } from './Option';\r\nimport './style.scss';\r\n\r\nconst { Content } = Layout;\r\n\r\ntype StatusType = { active: number; current: number };\r\n\r\nexport const OrderPage: React.FunctionComponent = () => {\r\n  const [numberStatus, setNumberStatus] = useState<StatusType>({\r\n    active: 0,\r\n    current: 0,\r\n  });\r\n  const [colorsOpt, setColorsOpt] = useState<string[]>([]);\r\n\r\n  const switchForm = () => {\r\n    const nextStatus = numberStatus.active + 1;\r\n    if (nextStatus > numberStatus.current) {\r\n      setNumberStatus({\r\n        current: nextStatus,\r\n        active: nextStatus,\r\n      });\r\n    } else {\r\n      setNumberStatus({ ...numberStatus, active: nextStatus });\r\n    }\r\n  };\r\n\r\n  const showCurrentStatus = () => {\r\n    switch (numberStatus.active) {\r\n      case 0:\r\n        return <Location />;\r\n      case 1:\r\n        return <Cars setColorsOpt={setColorsOpt} />;\r\n      case 2:\r\n        return <Option colorsOpt={colorsOpt} />;\r\n      default:\r\n        return <div />;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Layout\r\n      className=\"order-page\"\r\n      style={{ overflow: 'hidden', background: '#fff' }}\r\n    >\r\n      <SideBar />\r\n      <Content className=\"wrapper\">\r\n        <Layout>\r\n          <Head />\r\n          <Content className=\"tabs\">\r\n            <Tabs\r\n              numberStatus={numberStatus}\r\n              setNumberStatus={setNumberStatus}\r\n            />\r\n          </Content>\r\n          <Content className=\"content\">\r\n            <div className=\"forms\">{showCurrentStatus()}</div>\r\n            <Result numberStatus={numberStatus} switchForm={switchForm} />\r\n          </Content>\r\n        </Layout>\r\n      </Content>\r\n    </Layout>\r\n  );\r\n};\r\n","import { CHANGE_USER_CITY } from '../type';\r\nimport { GenericActionOrder } from '../../interfaces';\r\n\r\ntype InfoState = { userCity: string };\r\n\r\nconst currentState: InfoState = {\r\n  userCity: '',\r\n};\r\n\r\nexport const userInfoReducer = (\r\n  state: InfoState = currentState,\r\n  action: GenericActionOrder\r\n) => {\r\n  const { type, payload } = action;\r\n  switch (type) {\r\n    case CHANGE_USER_CITY:\r\n      return { ...state, userCity: payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { initState } from '../../constants/redux';\r\nimport {\r\n  CHANGE_POINT,\r\n  CHANGE_MODEL,\r\n  CHANGE_COLOR,\r\n  CHANGE_TIME,\r\n  CHANGE_PRICE,\r\n  CHANGE_OPTION,\r\n} from '../../redux/type';\r\nimport { OrderType } from '../../interfaces';\r\nimport { GenericActionOrder } from '../../interfaces';\r\n\r\nconst currentState = {\r\n  orderList: initState,\r\n};\r\n\r\nexport const userOrderReducer = (\r\n  state: { orderList: OrderType[] } = currentState,\r\n  action: GenericActionOrder\r\n) => {\r\n  const { type, payload } = action;\r\n  switch (type) {\r\n    case CHANGE_POINT:\r\n      return {\r\n        orderList: state.orderList.map((item, index) => {\r\n          return index === 0 ? { ...item, value: payload } : item;\r\n        }),\r\n      };\r\n    case CHANGE_MODEL:\r\n      return {\r\n        orderList: state.orderList.map((item, index) => {\r\n          const { value, min, max, number, pathImg, time } = payload;\r\n          return index === 1\r\n            ? { ...item, value, min, max, number, pathImg, time }\r\n            : item;\r\n        }),\r\n      };\r\n    case CHANGE_COLOR:\r\n      return {\r\n        orderList: state.orderList.map((item, index) => {\r\n          return index === 2 ? { ...item, value: payload } : item;\r\n        }),\r\n      };\r\n    case CHANGE_TIME:\r\n      return {\r\n        orderList: state.orderList.map((item, index) => {\r\n          return index === 3\r\n            ? { ...item, value: payload.value, count: payload.count }\r\n            : item;\r\n        }),\r\n      };\r\n    case CHANGE_PRICE:\r\n      return {\r\n        orderList: state.orderList.map((item, index) => {\r\n          return index === 4\r\n            ? { ...item, value: payload.value, count: payload.count }\r\n            : item;\r\n        }),\r\n      };\r\n    case CHANGE_OPTION:\r\n      return {\r\n        orderList: state.orderList.map((item, index) => {\r\n          return index >= 5 && item.name === payload.value\r\n            ? { ...item, visible: payload.visible }\r\n            : item;\r\n        }),\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { OrderType } from '../../interfaces';\r\n\r\nexport const initState: OrderType[] = [\r\n  {\r\n    name: 'Пункт выдачи',\r\n    value: '',\r\n    orderNumber: 0,\r\n    visible: true,\r\n  },\r\n  {\r\n    name: 'Модель',\r\n    value: '',\r\n    orderNumber: 1,\r\n    visible: true,\r\n    min: 0,\r\n    max: 0,\r\n    number: '',\r\n    pathImg: '',\r\n    time: '',\r\n  },\r\n  {\r\n    name: 'Цвет',\r\n    value: '',\r\n    orderNumber: 2,\r\n    visible: true,\r\n  },\r\n  {\r\n    name: 'Длительность аренды',\r\n    value: '',\r\n    orderNumber: 2,\r\n    count: 0,\r\n    visible: true,\r\n  },\r\n  {\r\n    name: 'Тариф',\r\n    value: '',\r\n    orderNumber: 2,\r\n    count: 0,\r\n    visible: true,\r\n  },\r\n  {\r\n    name: 'Полный бак',\r\n    value: 'Да',\r\n    orderNumber: 2,\r\n    count: 500,\r\n    visible: false,\r\n  },\r\n  {\r\n    name: 'Детское кресло',\r\n    value: 'Да',\r\n    orderNumber: 2,\r\n    count: 200,\r\n    visible: false,\r\n  },\r\n  {\r\n    name: 'Правый руль',\r\n    value: 'Да',\r\n    orderNumber: 2,\r\n    count: 1600,\r\n    visible: false,\r\n  },\r\n];\r\n","import { CALCULATE_PRICE } from '../type';\r\n\r\nconst currentState = 0;\r\n\r\nexport const userPrice = (\r\n  state: number = currentState,\r\n  action: { type: string; payload: number }\r\n) => {\r\n  const { type, payload } = action;\r\n  switch (type) {\r\n    case CALCULATE_PRICE:\r\n      return payload;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React from 'react';\r\nimport { Switch, Route } from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { createStore } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport { ConnectedRouter } from 'connected-react-router';\r\nimport { MainPage } from './components/mainPage';\r\nimport { OrderPage } from './components/orderPage';\r\nimport 'antd/dist/antd.css';\r\nimport './App.scss';\r\nimport { createRootReducer } from './redux/rootReducer';\r\n\r\nimport { createBrowserHistory } from 'history';\r\n\r\nconst history = createBrowserHistory();\r\n\r\nconst store = createStore(createRootReducer(history), composeWithDevTools());\r\n\r\nconst App: React.FunctionComponent = () => (\r\n  <Provider store={store}>\r\n    <ConnectedRouter history={history}>\r\n      <Switch>\r\n        <Route exact path=\"/carsharing/\">\r\n          <MainPage />\r\n        </Route>\r\n        <Route exact path=\"/carsharing/order\">\r\n          <OrderPage />\r\n        </Route>\r\n      </Switch>\r\n    </ConnectedRouter>\r\n  </Provider>\r\n);\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals: () => void = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.scss';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}