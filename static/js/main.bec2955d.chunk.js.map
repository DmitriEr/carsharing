{"version":3,"sources":["redux/type/index.ts","redux/actions/index.ts","redux/rootReducer/index.ts","server/userLocation/index.ts","assets/common/location.svg","constants/common/index.ts","redux/selectors/index.ts","components/common/Head/index.tsx","components/mainPage/Order/index.tsx","assets/mainPage/slider/Slide_1.jpg","assets/mainPage/slider/Slide_2.png","assets/mainPage/slider/Slide_3.png","assets/mainPage/slider/Slide_4.png","assets/mainPage/sideBar/Facebook_white.svg","assets/mainPage/sideBar/Instagram.svg","assets/mainPage/sideBar/Telegram_white.svg","constants/mainPage/index.ts","components/common/SideBar/index.tsx","assets/mainPage/slider/left.svg","assets/mainPage/slider/right.svg","components/mainPage/Slider/index.tsx","components/mainPage/index.tsx","server/geocodeLocation/index.ts","components/orderPage/Location/Map/index.tsx","server/data/index.ts","components/orderPage/Location/SelectAddress/index.tsx","components/orderPage/Location/index.tsx","components/common/Loader/index.tsx","constants/orderPage/index.ts","components/orderPage/Cars/index.tsx","components/orderPage/Result/index.tsx","components/orderPage/Tabs/index.tsx","components/orderPage/index.tsx","redux/reducers/userInfoReducer.ts","redux/reducers/userOrderReducer.ts","constants/redux/index.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["CHANGE_USER_CITY","CHANGE_POINT","CHANGE_MODEL","changeUserCity","item","type","payload","changePoint","history","getUserLocation","a","url","process","fetch","response","ok","Error","status","text","json","data","message","translateCityName","Samara","Ulyanovsk","Saransk","Kazan","Krasnodar","Ufa","Saratov","Volgograd","Voronezh","Sterlitamak","Tambov","Arkhangelsk","Krasnoyarsk","place","state","information","userCity","page","router","location","pathname","list","order","orderList","info","Header","Layout","Head","dispatch","useDispatch","userLocation","useSelector","useEffect","then","translate","city","className","src","alt","Content","Footer","Order","to","href","menuItems","socialNetworks","picture","facebook","name","link","instagram","telegram","sliderItems","title","content","background","background_1","background_2","background_3","background_4","Sider","Item","Menu","SideBar","currentPage","split","useState","widthPercent","setWidthPercent","sideOpen","setSideOpen","width","onClick","map","toUpperCase","network","target","preview","length","Slider","sliderRef","useRef","handlerLeft","current","prev","handlerRight","next","dots","ref","index","classNames","left","right","MainPage","style","overflow","getCoordinates","placeName","trim","Map","points","userData","userPoint","dataBase","setDataBase","latitude","longtitude","zoom","userCoordsData","setUserCoordsData","mapContainer","setMap","value","lat","lng","results","cityList","filter","components","_type","geometry","forEach","address","includes","mapboxgl","Marker","setLngLat","addTo","accessToken","container","center","bearing","initMap","flyTo","essential","urlCommon","headerCommon","getCars","headers","getCities","getPoints","Option","Select","SelectAddress","options","changeOption","initValue","deletePoint","deleteOption","placeholder","showArrow","showSearch","bordered","onChange","label","Location","cities","setCities","setPointTest","cityData","checkPoint","result","point","set","Set","cityId","add","Array","from","Loader","condition","statuses","radioBtnsText","Cars","currentCar","cars","setCars","radioBtn","setRadioBtn","setCondition","arrayCars","setArrayCars","thumbnail","path","startsWith","priceMin","priceMax","categoryId","cat","Group","e","size","classnames","Result","numberStatus","switchForm","orderNumber","disabled","active","Tabs","setNumberStatus","checkPrevStatus","ind","findIndex","_","hiddenMobile","OrderPage","showCurrentStatus","nextStatus","currentState","userInfoReducer","action","userOrderReducer","createBrowserHistory","store","createStore","combineReducers","connectRouter","composeWithDevTools","App","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"khBAAaA,EAAmB,mBACnBC,EAAe,eACfC,EAAe,eCArB,SAASC,EACdC,GAEA,MAAO,CACLC,KAAML,EACNM,QAASF,GAIN,SAASG,EAAYH,GAC1B,MAAO,CACLC,KAAMJ,EACNK,QAASF,G,ICRqBI,E,yBCFrBC,EAAgD,uCAAG,gCAAAC,EAAA,sEAEtDC,EAFsD,UAFnD,oBAEmD,kBAE/BC,kBAF+B,SAGrCC,MAAMF,GAH+B,WAGtDG,EAHsD,QAK9CC,GAL8C,6BAMhDC,MANgD,qBAMjCF,EAASG,OANwB,gBAMPH,EAASI,OANF,mGASzCJ,EAASK,OATgC,eAStDC,EATsD,yBAUrDA,GAVqD,wCAYtD,IAAIJ,MAAJ,4BAA+B,KAAMK,UAZiB,0DAAH,qDCJ9C,MAA0B,qCCA5BC,EAA6C,CACxDC,OAAQ,uCACRC,UAAW,yDACXC,QAAS,6CACTC,MAAO,uCACPC,UAAW,yDACXC,IAAK,qBACLC,QAAS,6CACTC,UAAW,yDACXC,SAAU,6CACVC,YAAa,qEACbC,OAAQ,uCACRC,YAAa,qEACbC,YAAa,+DACb,qBAAsB,+FCZXC,EAAQ,SAACC,GAAD,OAAwBA,EAAMC,YAAYC,UAClDC,EAAO,SAACH,GAAD,OAAwBA,EAAMI,OAAOC,SAASC,UACrDC,EAAO,SAACP,GAAD,OAAwBA,EAAMQ,MAAMC,WAC3CC,EAAO,SAACV,GAAD,OAAwBA,EAAMC,aCM1CU,G,OAAWC,IAAXD,QAEKE,EAAgC,WAC3C,IAAMC,EAAWC,cACXC,EAAuBC,YAAYlB,GASzC,OAPAmB,qBAAU,WACR9C,IAAkB+C,MAAK,SAACjB,GACtB,IAAMkB,EAAYnC,EAAkBiB,EAASmB,MAC7CP,EAAShD,EAAesD,SAEzB,IAGD,eAACT,EAAD,CAAQW,UAAU,gBAAlB,UACE,sBAAMA,UAAU,eAAhB,4BACA,sBAAKA,UAAU,mBAAf,UACE,qBAAKC,IAAKlB,EAAUmB,IAAI,aACxB,sBAAMF,UAAU,eAAhB,SAAgCN,WCvBhCS,G,OAAoBb,IAApBa,SAASC,EAAWd,IAAXc,OAEJC,EAAiC,kBAC5C,eAAC,IAAD,CAAQL,UAAU,mBAAlB,UACE,cAAC,EAAD,IACA,cAACG,EAAD,CAASH,UAAU,UAAnB,SACE,sBAAKA,UAAU,UAAf,UACE,qBAAKA,UAAU,cAAf,oEACA,qBAAKA,UAAU,eAAf,4BACA,qBAAKA,UAAU,qBAAf,kNAGA,cAAC,IAAD,CAAMM,GAAG,oBAAT,SACE,cAAC,IAAD,CAAQN,UAAU,MAAMtD,KAAK,UAA7B,mGAMN,eAAC0D,EAAD,CAAQJ,UAAU,SAAlB,UACE,yEACA,mBAAGO,KAAK,sBAAR,sC,yBC3BS,MAA0B,oCCA1B,MAA0B,oCCA1B,MAA0B,oCCA1B,MAA0B,oCCA1B,MAA0B,2CCA1B,MAA0B,sCCA1B,MAA0B,2CCQ5BC,EAAsB,CACjC,mDACA,yDACA,uCACA,4EAGWC,EAIP,CACJ,CACEC,QAASC,EACTC,KAAM,WACNC,KAAM,yCAER,CACEH,QAASI,EACTF,KAAM,YACNC,KAAM,+CAER,CACEH,QAASK,EACTH,KAAM,WACNC,KAAM,8BAIGG,EAAyC,CACpD,CACEC,MAAO,gHACPC,QACE,ijBACFC,WAAYC,GAEd,CACEH,MAAO,yDACPC,QAAS,kNACTC,WAAYE,GAEd,CACEJ,MAAO,uCACPC,QAAS,qPACTC,WAAYG,GAEd,CACEL,MAAO,2EACPC,QAAS,sMACTC,WAAYI,ICjDRC,G,OAAUlC,IAAVkC,OACAC,EAASC,IAATD,KAEKE,EAAmC,WAC9C,IAAMC,EAAcjC,YAAYd,GAAMgD,MAAM,KADQ,EAGZC,mBAA0B,IAHd,mBAG7CC,EAH6C,KAG/BC,EAH+B,OAIpBF,oBAAkB,GAJE,mBAI7CG,EAJ6C,KAInCC,EAJmC,KAwEpD,OACE,eAACV,EAAD,CAAOxB,UAAU,UAAUmC,MAAOJ,EAAlC,UACE,qBACEK,QArEW,WACXH,GACFD,EAAgB,IAChBE,GAAY,KAEZF,EAAgB,QAChBE,GAAY,KAgEVlC,UAAWiC,EAAW,cAAgB,eAtDtCA,EAEA,sBAAKjC,UAAU,OAAf,UACE,qBAAKA,UAAU,YAAf,SACE,sBAAKA,UAAU,gBAAf,UACE,cAAC,IAAD,CAAMA,UAAU,QAAhB,SACGQ,EAAU6B,KAAI,SAAC5F,GAAD,OACb,cAACgF,EAAD,CAAMW,QAAS,kBAZ7BF,GAAY,QACZF,EAAgB,KAWF,SACE,cAAC,IAAD,CAAM1B,GAAG,cAAcN,UAAU,OAAjC,SACGvD,EAAK6F,iBAF+B7F,QAO7C,oBAAIuD,UAAU,QAAd,SACGS,EAAe4B,KACd,SAACE,GAIM,IACG7B,EAAwB6B,EAAxB7B,QAASE,EAAe2B,EAAf3B,KAAMC,EAAS0B,EAAT1B,KACvB,OACE,mBAAGN,KAAMM,EAAM2B,OAAO,QAAmBxC,UAAU,OAAnD,SACE,cAAC,IAAD,CACEC,IAAKS,EACLR,IAAI,SACJuC,SAAS,EACTzC,UAAU,SALqBY,aAc/C,qBACEZ,UAC0C,UAAxC4B,EAAYA,EAAYc,OAAS,GAC7B,iBACA,uBAMP,S,0BChFI,OAA0B,iCCA1B,OAA0B,kCCSjCvC,I,OAAYb,IAAZa,SAEKwC,GAAkC,WAC7C,IAAMC,EAAYC,iBAAO,MAEnBC,EAAc,kBAAMF,EAAUG,QAAQC,QACtCC,EAAe,kBAAML,EAAUG,QAAQG,QAE7C,OACE,cAAC,IAAD,CACElD,UAAU,oBACVmD,KAAM,CAAEnD,UAAW,YACnBoD,IAAKR,EAHP,SAKG5B,EAAYqB,KAAI,WAAiCgB,GAAW,IAAzCpC,EAAwC,EAAxCA,MAAOC,EAAiC,EAAjCA,QAASC,EAAwB,EAAxBA,WAClC,OACE,cAAC,IAAD,CAAoBnB,UAAU,UAA9B,SACE,eAAC,GAAD,CAASA,UAAU,QAAnB,UACE,cAAC,IAAD,CACEC,IAAKkB,EACLjB,IAAKe,EACLjB,UAAWsD,KAAW,aAAD,qBAA6BD,IAClDZ,SAAS,IAEX,qBAAKzC,UAAU,WACf,cAAC,IAAD,CACEtD,KAAK,QACLsD,UAAU,uBACVoC,QAASU,EAHX,SAKE,cAAC,IAAD,CAAO7C,IAAKsD,GAAMrD,IAAI,OAAOuC,SAAS,MAExC,cAAC,IAAD,CACE/F,KAAK,QACLsD,UAAU,wBACVoC,QAASa,EAHX,SAKE,cAAC,IAAD,CAAOhD,IAAKuD,GAAOtD,IAAI,QAAQuC,SAAS,MAE1C,sBAAKzC,UAAU,UAAf,UACE,sBAAMA,UAAU,QAAhB,SAAyBiB,IACzB,qBAAKjB,UAAU,cAAf,SAA8BkB,IAC9B,cAAC,IAAD,CAAMZ,GAAG,oBAAT,SACE,cAAC,IAAD,CACEN,UAAWsD,KAAW,MAAD,cAAeD,IACpC3G,KAAK,UAFP,6EA3BKuE,SClBVwC,I,OAAoC,kBAC/C,eAAC,IAAD,CACEzD,UAAU,YACV0D,MAAO,CAAEC,SAAU,SAAUxC,WAAY,QAF3C,UAIE,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,GAAD,S,qCCPSyC,I,cAEmB,uCAAG,WAAOC,GAAP,mBAAA9G,EAAA,sEAEzBC,EAFyB,yDAE+B6G,EAAUC,OAFzC,gBAG7B7G,oCAH6B,SAKRC,MAAMF,GALE,WAKzBG,EALyB,QAOjBC,GAPiB,6BAQnBC,MARmB,qBAQJF,EAASG,OARL,gBAQsBH,EAASI,OAR/B,mGAWZJ,EAASK,OAXG,eAWzBC,EAXyB,yBAYxBA,GAZwB,wCAczB,IAAIJ,MAAJ,6BAAgC,KAAMK,UAdb,0DAAH,uDCAnBqG,I,OAAqD,SAAC,GAE5D,IADLC,EACI,EADJA,OAEMC,EAAWtE,YAAYP,GACvB8E,EAAYvE,YAAYV,GAF1B,EAI4B6C,mBAAmB,IAJ/C,mBAIGqC,EAJH,KAIaC,EAJb,OAMwCtC,mBAC1C,CACEuC,SAAU,EACVC,WAAY,EACZC,KAAM,KAVN,mBAMGC,EANH,KAMmBC,EANnB,KAaEC,EAAe7B,iBAAuB,MAbxC,EAckBf,mBAAS,MAd3B,mBAcGO,EAdH,KAcQsC,EAdR,KAgBI/F,EAAaqF,EAAbrF,SACAgG,EAAUV,EAAU,GAApBU,MAsFR,OApFAhF,qBAAU,YACJhB,GAAYgG,EAAMlC,SACpBkB,GAAe,GAAD,OAAIhF,EAAJ,YAAgBgG,IAAS/E,MAAK,YAAkB,IACxDgF,EACAC,EAFyCC,EAAc,EAAdA,QAG7C,GAAqB,IAAjBH,EAAMlC,OAAc,CACtB,IAAMsC,EAAWD,EAAQE,QAAO,SAACxI,GAC/B,GAA8B,SAA1BA,EAAKyI,WAAWC,MAClB,OAAO,KAGFC,EANa,YAMCJ,EAND,MAMbI,SACTN,EAAMM,EAASN,IACfD,EAAMO,EAASP,QACV,CAAC,IACGO,EADJ,YACkBL,EADlB,MACIK,SACTN,EAAMM,EAASN,IACfD,EAAMO,EAASP,IAEjBJ,EAAkB,CAChBJ,SAAUQ,EACVP,WAAYQ,EACZP,KAAMK,EAAMlC,OAAS,GAAK,UAI/B,CAAC9D,EAAUgG,IAEdhF,qBAAU,WACJhB,GAAYyD,GAAO2B,GACrBA,EAAOqB,SAAQ,SAACC,GACTnB,EAASoB,SAASD,KACrBlB,GAAY,SAACpB,GAAD,6BAAcA,GAAd,CAAoBsC,OAChC1B,GAAe,GAAD,OAAIhF,EAAJ,aAAiB0G,IAAWzF,MAAK,YAAkB,IAAfkF,EAAc,EAAdA,QAChD,GAAIA,EAAQrC,OAAQ,CAAC,IACX0C,EAAaL,EAAQ,GAArBK,SACAP,EAAaO,EAAbP,IAAKC,EAAQM,EAARN,KACb,IAAIU,KAASC,QAASC,UAAU,CAACZ,EAAKD,IAAMc,MAAMtD,aAM3D,CAACzD,EAAUyD,EAAK2B,IAEnBpE,qBAAU,WACR,GAAI4E,EAAeH,SAAU,CAC3BmB,KAASI,YAAc3I,6FAqBlBoF,GAnBW,SACdsC,EACAD,GAEA,IAAKA,EAAa3B,QAChB,OAAO,KAFN,IAIKsB,EAA+BG,EAA/BH,SAAUC,EAAqBE,EAArBF,WAAYC,EAASC,EAATD,KAU9BI,EARY,IAAIa,KAASzB,IAAI,CAC3B8B,UAAWnB,EAAa3B,QACxBW,MAAO,sCACPoC,OAAQ,CAACxB,EAAYD,GACrBE,OACAwB,QAAS,KAMXC,CAAQrB,EAAQD,MAGnB,CAACrC,EAAKmC,IAET5E,qBAAU,WACI,OAARyC,GACFA,EAAI4D,MAAM,CACRH,OAAQ,CAACtB,EAAeF,WAAYE,EAAeH,UACnD6B,WAAW,EACX3B,KAAMC,EAAeD,SAGxB,CAACC,IAEG,qBAAKpB,IAAKsB,EAAc1E,UAAU,mBClHrCmG,GACJ,iFACIC,GAAe,CACnB,+BAAgC,4BAGrBC,GAQX,uCAAG,gCAAAtJ,EAAA,sEAEKC,EAFL,UAEcmJ,GAFd,gBAGsBjJ,MAAMF,EAAK,CAChCsJ,QAASF,KAJV,WAGKjJ,EAHL,QAOaC,GAPb,6BAQWC,MARX,oBAQyBF,EAASG,OARlC,gBAQmDH,EAASI,OAR5D,mGAWkBJ,EAASK,OAX3B,eAWKC,EAXL,yBAYMA,GAZN,wCAcK,IAAIJ,MAAJ,kCAAqC,KAAMK,UAdhD,0DAAH,qDAkBW6I,GAEX,uCAAG,gCAAAxJ,EAAA,sEAEKC,EAFL,UAEcmJ,GAFd,iBAGsBjJ,MAAMF,EAAK,CAChCsJ,QAASF,KAJV,WAGKjJ,EAHL,QAOaC,GAPb,6BAQWC,MARX,oBAQyBF,EAASG,OARlC,gBAQmDH,EAASI,OAR5D,mGAWkBJ,EAASK,OAX3B,eAWKC,EAXL,yBAYMA,GAZN,wCAcK,IAAIJ,MAAJ,kCAAqC,KAAMK,UAdhD,0DAAH,qDAkBW8I,GAEX,uCAAG,gCAAAzJ,EAAA,sEAEKC,EAFL,UAEcmJ,GAFd,kBAGsBjJ,MAAMF,EAAK,CAChCsJ,QAASF,KAJV,WAGKjJ,EAHL,QAOaC,GAPb,6BAQWC,MARX,oBAQyBF,EAASG,OARlC,gBAQmDH,EAASI,OAR5D,mGAWkBJ,EAASK,OAX3B,eAWKC,EAXL,yBAYMA,GAZN,wCAcK,IAAIJ,MAAJ,kCAAqC,KAAMK,UAdhD,0DAAH,qD,UClDM+I,GAAWC,KAAXD,OAWKE,GAAsD,SAAC,GAO7D,IANLC,EAMI,EANJA,QACAhG,EAKI,EALJA,KACAiG,EAII,EAJJA,aACAC,EAGI,EAHJA,UACAC,EAEI,EAFJA,YACAC,EACI,EADJA,aAEMxH,EAAWC,cASjB,OACE,cAAC,KAAD,CACEwH,YAAW,gGAAqBrG,GAChCZ,UAAU,SACVkH,WAAW,EACXC,YAAY,EACZC,UAAU,EACVC,SAAU,SAACzC,GAAD,OAdanI,EAcwBmI,EAb7CoC,GACFxH,EAASuH,EAAY,UAEvBvH,EAASqH,EAAapK,IAJE,IAACA,GAevBmI,MAAOkC,EAPT,SASGF,EAAQvE,KAAI,SAAC5F,GAAD,OACX,cAACgK,GAAD,CAAQ7B,MAAOnI,EAAM6K,MAAO7K,EAA5B,SACGA,GADoCA,SClClC8K,I,OAAoC,WAAO,IAAD,EACzBzF,mBAAmB,IADM,mBAC9C0F,EAD8C,KACtCC,EADsC,OAEtB3F,mBAAmB,IAFG,mBAE9CkC,EAF8C,KAEtC0D,EAFsC,KAI/CC,EAAWhI,YAAYP,GAGvBwI,EAFajI,YAAYV,GAED,GAAG2F,MAEzBhG,EAAa+I,EAAb/I,SA0BR,OAxBAgB,qBAAU,WACR2G,KAAY1G,MAAK,SAACE,GAChB,IAAM8H,EAAS9H,EAAKtC,KAAK4E,KAAI,qBAAGzB,QAChC6G,EAAUI,QAEX,IAEHjI,qBAAU,WACJhB,EAAS8D,QACX8D,KAAY3G,MAAK,SAACiI,GAChB,IAAMC,EAAmB,IAAIC,IAC7BF,EAAMrK,KAAK4H,SAAQ,SAAC5I,GACdA,EAAKwL,OAAOrH,OAAShC,IACF,+FAAjBnC,EAAK6I,UACP7I,EAAK6I,QAAU,kEAEjByC,EAAIG,IAAIzL,EAAK6I,aAGjBoC,EAAaS,MAAMC,KAAKL,SAG3B,CAACnJ,IAGF,sBAAKoB,UAAU,WAAf,UACE,sBAAKA,UAAU,OAAf,UACE,sBAAMA,UAAU,OAAhB,6CACA,cAAC,GAAD,CACE4G,QAASY,EACT5G,KAAM,iCACNiG,aAAcrK,EACduK,YAAanK,EACbkK,UAAWlI,EACXoI,cAAc,OAGlB,sBAAKhH,UAAU,QAAf,UACE,sBAAMA,UAAU,OAAhB,kFACA,cAAC,GAAD,CACE4G,QAAS5C,EACTpD,KAAM,iCACNiG,aAAcjK,EACdkK,UAAWc,EACXZ,cAAc,OAGlB,sBAAKhH,UAAU,MAAf,UACE,sBAAMA,UAAU,OAAhB,qGACA,cAAC,GAAD,CAAKgE,OAAQA,Y,8BC9DRqE,GAAiD,SAAC,GAG7D,OADI,EADJC,UAGS,cAAC,KAAD,IAEF,MCVIC,GAA0B,CACrC,uFACA,uCACA,iFACA,kCAGWC,GAA0B,CAAC,0DAAc,uCAAU,8CCSnDC,I,OAAgC,WAC3C,IAAMjJ,EAAWC,cAGXiJ,EADU/I,YAAYV,GACD,GAAG2F,MAJmB,EAMzB9C,mBAAqB,IANI,mBAM1C6G,EAN0C,KAMpCC,EANoC,OAOjB9G,mBAAS,2DAPQ,mBAO1C+G,EAP0C,KAOhCC,EAPgC,OAQfhH,oBAAS,GARM,mBAQ1CwG,EAR0C,KAQ/BS,EAR+B,OASfjH,mBAAqB,IATN,mBAS1CkH,EAT0C,KAS/BC,EAT+B,KAoDjD,OAzCArJ,qBAAU,WACRyG,KAAUxG,MAAK,YAAe,IAMtBgI,EANqB,EAAXpK,KACEwH,QAAO,YACvB,GAD0C,EAAhBiE,UACZC,KAAKC,WAAW,WAC5B,OAAO,KAGS/G,KAClB,YAA0D,IAAvDgH,EAAsD,EAAtDA,SAAUC,EAA4C,EAA5CA,SAAU1I,EAAkC,EAAlCA,KAAMsI,EAA4B,EAA5BA,UAAWK,EAAiB,EAAjBA,WACtC,MAAO,CACLF,WACAC,WACA1I,OACAF,QAASwI,EAAUC,KACnBK,IAAKD,EAAW3I,SAItBgI,EAAQf,GACRoB,EAAapB,QAEd,IAEHjI,qBAAU,WACR,IAAMiI,EAASmB,EAAU/D,QAAO,YAAc,IAAXuE,EAAU,EAAVA,IACjC,OAAQX,GACN,KAAKW,EAEL,KAAKhB,GAAc,GACjB,OAAO,EACT,QACE,OAAO,MAGbI,EAAQf,KACP,CAACgB,IAEJjJ,qBAAU,WACQ,IAAhB+I,EAAKjG,OAAeqG,GAAa,GAAQA,GAAa,KACrD,CAACJ,IAGF,sBAAK3I,UAAU,QAAf,UACE,cAAC,GAAD,CAAQsI,UAAWA,IACnB,cAAC,KAAMmB,MAAP,CACEpC,SAAU,SAACqC,GAAD,OAAOZ,EAAYY,EAAElH,OAAOoC,QACtCA,MAAOiE,EACP7I,UAAU,aAHZ,SAKGwI,GAAcnG,KAAI,SAAC9E,GAAD,OACjB,cAAC,KAAD,CAAOqH,MAAOrH,EAAd,SACGA,GADsBA,QAK5BoL,EAAKtG,KAAI,WAAwCgB,GAAW,IAAhDzC,EAA+C,EAA/CA,KAAMyI,EAAyC,EAAzCA,SAAUC,EAA+B,EAA/BA,SAAU5I,EAAqB,EAArBA,QACrC,OACE,cAAC,KAAD,CACEiJ,KAAK,QACL1I,MACE,qCACE,qBAAKjB,UAAU,QAAf,SAAwBY,IACxB,qBAAKZ,UAAU,QAAf,mBAA2BqJ,EAA3B,cAAyCC,EAAzC,gBAIJtJ,UACE0I,IAAe9H,EAAOgJ,KAAW,SAAU,QAAU,OAEvDxH,QAAS,kBAAM5C,E5BhFlB,CACL9C,KAAMH,EACNI,Q4B8E4CiE,KAZtC,SAcE,qBACEZ,UAAU,QACVC,IAAG,4CAAuCS,GAC1CR,IAAKU,KATFyC,WCjFJwG,I,OAAmD,SAAC,GAG1D,IAFLC,EAEI,EAFJA,aACAC,EACI,EADJA,WAEM5K,EAAYQ,YAAYV,GAE9B,OACE,sBAAKe,UAAU,SAAf,UACE,mFACCb,EAAUkD,KAAI,YAAmC,IAAhCzB,EAA+B,EAA/BA,KAAMgE,EAAyB,EAAzBA,MACtB,GAD+C,EAAlBoF,aACVF,EAAa/G,QAC9B,OACE,sBAAK/C,UAAU,OAAf,UACE,qBAAKA,UAAU,YAAf,SACE,sBAAMA,UAAU,QAAhB,SAAyBY,MAE3B,sBAAMZ,UAAU,UAAhB,SAA2B4E,MAJFhE,MASjC,sBAAKZ,UAAU,QAAf,UACE,6DADF,oDAGA,cAAC,IAAD,CACEiK,UAAU9K,EAAU2K,EAAaI,QAAQtF,MAAMlC,OAC/CN,QAAS,kBAAM2H,KACf/J,UACEb,EAAU2K,EAAaI,QAAQtF,MAAMlC,OACjCkH,KAAW,MAAO,cAClBA,KAAW,MAAO,eAN1B,SASGrB,GAASuB,EAAaI,OAAS,UCpC3BC,I,cAA+C,SAAC,GAGtD,IAFLL,EAEI,EAFJA,aACAM,EACI,EADJA,gBAMMC,EAAkB,SAACC,GAIvB,OAAOA,EAHY/B,GAASgC,WAC1B,SAACC,EAAGnH,GAAJ,OAAcA,IAAUyG,EAAa/G,WAEb,cAAgB,IAGtC0H,EAAe,SAACH,GACpB,IAAMvH,EAAU+G,EAAaI,OAC7B,OAAOI,GAAOvH,EAAU,GAAKuH,GAAOvH,EAAU,EAAI,GAAK,iBAGzD,OACE,qBAAK/C,UAAU,WAAf,SACGuI,GAASlG,KAAI,SAAC/E,EAAgB+F,GAAjB,OACZ,sBAEEjB,QAAS,kBACPiB,GAASyG,EAAa/G,QAClBqH,EAAgB,6BAAKN,GAAN,IAAoBI,OAAQ7G,KAC3C,MAENrD,UAAW4J,KACT,UA3BkBU,EA4BCjH,EA3BpByG,EAAa/G,UAAYuH,EAAM,gBAAkB,IA4BhDD,EAAgBhH,GAChBoH,EAAapH,IAXjB,SAcG/F,GAbIA,GApBc,IAACgN,SCLtBnK,I,OAAYb,IAAZa,SAEKuK,GAAqC,WAAO,IAAD,EACd5I,mBAGrC,CAAEoI,OAAQ,EAAGnH,QAAS,IAJ6B,mBAC/C+G,EAD+C,KACjCM,EADiC,KA+BtD,OACE,eAAC,IAAD,CACEpK,UAAU,aACV0D,MAAO,CAAEC,SAAU,SAAUxC,WAAY,QAF3C,UAIE,cAAC,EAAD,IACA,cAAC,GAAD,CAASnB,UAAU,UAAnB,SACE,eAAC,IAAD,WACE,cAAC,EAAD,IACA,cAAC,GAAD,CAASA,UAAU,OAAnB,SACE,cAAC,GAAD,CACE8J,aAAcA,EACdM,gBAAiBA,MAGrB,eAAC,GAAD,CAASpK,UAAU,UAAnB,UACE,qBAAKA,UAAU,QAAf,SA7BgB,WACxB,OAAQ8J,EAAaI,QACnB,KAAK,EACH,OAAO,cAAC,GAAD,IACT,KAAK,EACH,OAAO,cAAC,GAAD,IACT,KAAK,EAEL,QACE,OAAO,yBAoBqBS,KACxB,cAAC,GAAD,CAAQb,aAAcA,EAAcC,WA1C3B,WACjB,IAAMa,EAAad,EAAaI,OAAS,EACrCU,EAAad,EAAa/G,QAC5BqH,EAAgB,CACdrH,QAAS6H,EACTV,OAAQU,IAGVR,EAAgB,6BAAKN,GAAN,IAAoBI,OAAQU,oBCrB3CC,I,cAA0B,CAC9BjM,SAAU,KAGCkM,GAAkB,WAGzB,IAFJpM,EAEG,uDAFgBmM,GACnBE,EACG,uCACKrO,EAAkBqO,EAAlBrO,KAAMC,EAAYoO,EAAZpO,QACd,OAAQD,GACN,KAAKL,EACH,OAAO,6BAAKqC,GAAZ,IAAmBE,SAAUjC,IAC/B,QACE,OAAO+B,ICbPmM,GAAe,CACnB1L,UCJoC,CACpC,CACEyB,KAAM,sEACNgE,MAAO,GACPoF,YAAa,GAEf,CACEpJ,KAAM,uCACNgE,MAAO,GACPoF,YAAa,GAEf,CACEpJ,KAAM,2BACNgE,MAAO,GACPoF,YAAa,GAEf,CACEpJ,KAAM,gHACNgE,MAAO,GACPoF,YAAa,GAEf,CACEpJ,KAAM,iCACNgE,MAAO,GACPoF,YAAa,GAEf,CACEpJ,KAAM,0DACNgE,MAAO,GACPoF,YAAa,KDtBJgB,GAAmB,WAG1B,IAFJtM,EAEG,uDAFiCmM,GACpCE,EACG,uCACKrO,EAAkBqO,EAAlBrO,KAAMC,EAAYoO,EAAZpO,QACd,OAAQD,GACN,KAAKJ,EACH,MAAO,CACL6C,UAAWT,EAAMS,UAAUkD,KAAI,SAAC5F,EAAM4G,GACpC,OAAiB,IAAVA,EAAA,6BAAmB5G,GAAnB,IAAyBmI,MAAOjI,IAAYF,MAGzD,KAAKF,EACH,MAAO,CACL4C,UAAWT,EAAMS,UAAUkD,KAAI,SAAC5F,EAAM4G,GACpC,OAAiB,IAAVA,EAAA,6BAAmB5G,GAAnB,IAAyBmI,MAAOjI,IAAYF,MAGzD,QACE,OAAOiC,I,UEdP7B,GAAUoO,eAEVC,GAAQC,uBlCVoBtO,EkCUUA,GlCT1CuO,0BAAgB,CACdzM,YAAamM,GACb5L,MAAO8L,GACPlM,OAAQuM,YAAcxO,MkCM4ByO,iCAiBvCC,GAfsB,kBACnC,cAAC,IAAD,CAAUL,MAAOA,GAAjB,SACE,cAAC,IAAD,CAAiBrO,QAASA,GAA1B,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAO2O,OAAK,EAACrC,KAAK,eAAlB,SACE,cAAC,GAAD,MAEF,cAAC,IAAD,CAAOqC,OAAK,EAACrC,KAAK,oBAAlB,SACE,cAAC,GAAD,cCZKsC,GAZqB,SAACC,GAC/BA,GAAeA,aAAuBC,UACxC,8BAAqB9L,MAAK,YAAkD,IAA/C+L,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCHdO,IAASC,OAAO,cAAC,GAAD,IAASC,SAASC,eAAe,SAKjDX,O","file":"static/js/main.bec2955d.chunk.js","sourcesContent":["export const CHANGE_USER_CITY = 'CHANGE_USER_CITY';\r\nexport const CHANGE_POINT = 'CHANGE_POINT';\r\nexport const CHANGE_MODEL = 'CHANGE_MODEL';\r\n","import { CHANGE_USER_CITY, CHANGE_POINT, CHANGE_MODEL } from '../type';\r\n\r\nexport function changeUserCity(\r\n  item: string\r\n): { type: string; payload: string } {\r\n  return {\r\n    type: CHANGE_USER_CITY,\r\n    payload: item,\r\n  };\r\n}\r\n\r\nexport function changePoint(item: string): { type: string; payload: string } {\r\n  return {\r\n    type: CHANGE_POINT,\r\n    payload: item,\r\n  };\r\n}\r\n\r\nexport function changeModel(item: string): { type: string; payload: string } {\r\n  return {\r\n    type: CHANGE_MODEL,\r\n    payload: item,\r\n  };\r\n}\r\n","import { combineReducers } from 'redux';\r\nimport { History } from 'history';\r\nimport { connectRouter } from 'connected-react-router';\r\nimport { userInfoReducer } from '../reducers/userInfoReducer';\r\nimport { userOrderReducer } from '../reducers/userOrderReducer';\r\n\r\nexport const createRootReducer = (history: History) =>\r\n  combineReducers({\r\n    information: userInfoReducer,\r\n    order: userOrderReducer,\r\n    router: connectRouter(history),\r\n  });\r\n","import { TypeUserLocation } from './interface';\r\n\r\nconst link = 'https://ipinfo.io';\r\n\r\nexport const getUserLocation: () => Promise<TypeUserLocation> = async () => {\r\n  try {\r\n    const url = `${link}?token=${process.env.REACT_APP_LOCATION}`;\r\n    const response = await fetch(url);\r\n\r\n    if (!response.ok) {\r\n      throw new Error(`HTTPS ${response.status}: ${await response.text()}`);\r\n    }\r\n\r\n    const data = await response.json();\r\n    return data;\r\n  } catch (error) {\r\n    throw new Error(`Error in ipinfo - ${error.message}`);\r\n  }\r\n};\r\n","export default __webpack_public_path__ + \"static/media/location.480be180.svg\";","export const translateCityName: { [x: string]: string } = {\r\n  Samara: 'Самара',\r\n  Ulyanovsk: 'Ульяновск',\r\n  Saransk: 'Саранск',\r\n  Kazan: 'Казань',\r\n  Krasnodar: 'Краснодар',\r\n  Ufa: 'Уфа',\r\n  Saratov: 'Саратов',\r\n  Volgograd: 'Волгоград',\r\n  Voronezh: 'Воронеж',\r\n  Sterlitamak: 'Стерлитамак',\r\n  Tambov: 'Тамбов',\r\n  Arkhangelsk: 'Архангельск',\r\n  Krasnoyarsk: 'Красноярск',\r\n  'Naberezhnye Chelny': 'Набережные челны',\r\n};\r\n","import { RootReducer } from '../../interfaces';\r\n\r\nexport const place = (state: RootReducer) => state.information.userCity;\r\nexport const page = (state: RootReducer) => state.router.location.pathname;\r\nexport const list = (state: RootReducer) => state.order.orderList;\r\nexport const info = (state: RootReducer) => state.information;\r\n","import React, { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { changeUserCity } from '../../../redux/actions';\r\nimport { Layout } from 'antd';\r\nimport { getUserLocation } from '../../../server/userLocation';\r\nimport { TypeUserLocation } from '../../../server/userLocation/interface';\r\nimport location from '../../../assets/common/location.svg';\r\nimport { translateCityName } from '../../../constants/common';\r\nimport { place } from '../../../redux/selectors';\r\nimport './style.scss';\r\n\r\nconst { Header } = Layout;\r\n\r\nexport const Head: React.FunctionComponent = () => {\r\n  const dispatch = useDispatch();\r\n  const userLocation: string = useSelector(place);\r\n\r\n  useEffect(() => {\r\n    getUserLocation().then((userCity: TypeUserLocation) => {\r\n      const translate = translateCityName[userCity.city];\r\n      dispatch(changeUserCity(translate));\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <Header className=\"order__header\">\r\n      <span className=\"header__logo\">Need for drive</span>\r\n      <div className=\"header__location\">\r\n        <img src={location} alt=\"location\" />\r\n        <span className=\"header__city\">{userLocation}</span>\r\n      </div>\r\n    </Header>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { Layout, Button } from 'antd';\r\nimport { Link } from 'react-router-dom';\r\nimport { Head } from '../../common/Head';\r\nimport './style.scss';\r\n\r\nconst { Content, Footer } = Layout;\r\n\r\nexport const Order: React.FunctionComponent = () => (\r\n  <Layout className=\"main-page__order\">\r\n    <Head />\r\n    <Content className=\"content\">\r\n      <div className=\"wrapper\">\r\n        <div className=\"name common\">Каршеринг</div>\r\n        <div className=\"title common\">Need for drive</div>\r\n        <div className=\"description common\">\r\n          Поминутная аренда авто твоего города\r\n        </div>\r\n        <Link to=\"/carsharing/order\">\r\n          <Button className=\"btn\" type=\"primary\">\r\n            Забронировать\r\n          </Button>\r\n        </Link>\r\n      </div>\r\n    </Content>\r\n    <Footer className=\"footer\">\r\n      <span>© 2016-2019 «Need for drive»</span>\r\n      <a href=\"tel:8-495-234-22-44\">8 (495) 234-22-44</a>\r\n    </Footer>\r\n  </Layout>\r\n);\r\n","export default __webpack_public_path__ + \"static/media/Slide_1.4cff0d29.jpg\";","export default __webpack_public_path__ + \"static/media/Slide_2.79c70027.png\";","export default __webpack_public_path__ + \"static/media/Slide_3.a2384b88.png\";","export default __webpack_public_path__ + \"static/media/Slide_4.77d3edc0.png\";","export default __webpack_public_path__ + \"static/media/Facebook_white.01c0ca6a.svg\";","export default __webpack_public_path__ + \"static/media/Instagram.5e14e95a.svg\";","export default __webpack_public_path__ + \"static/media/Telegram_white.09f73cfe.svg\";","import background_1 from '../../assets/mainPage/slider/Slide_1.jpg';\r\nimport background_2 from '../../assets/mainPage/slider/Slide_2.png';\r\nimport background_3 from '../../assets/mainPage/slider/Slide_3.png';\r\nimport background_4 from '../../assets/mainPage/slider/Slide_4.png';\r\nimport facebook from '../../assets/mainPage/sideBar/Facebook_white.svg';\r\nimport instagram from '../../assets/mainPage/sideBar/Instagram.svg';\r\nimport telegram from '../../assets/mainPage/sideBar/Telegram_white.svg';\r\n\r\nexport const menuItems: string[] = [\r\n  'парковка',\r\n  'страховка',\r\n  'бензин',\r\n  'обслуживание',\r\n];\r\n\r\nexport const socialNetworks: {\r\n  picture: string;\r\n  name: string;\r\n  link: string;\r\n}[] = [\r\n  {\r\n    picture: facebook,\r\n    name: 'facebook',\r\n    link: 'https://www.facebook.com/dmitri.erkin',\r\n  },\r\n  {\r\n    picture: instagram,\r\n    name: 'instagram',\r\n    link: 'https://www.instagram.com/idmitriier/?hl=ru',\r\n  },\r\n  {\r\n    picture: telegram,\r\n    name: 'telegram',\r\n    link: 'https://web.telegram.org/',\r\n  },\r\n];\r\n\r\nexport const sliderItems: { [x: string]: string }[] = [\r\n  {\r\n    title: 'Бесплатный парковка',\r\n    content:\r\n      'Оставляйте машину на платных городских парковках и разрешенных местах, не нарушая ПДД, а также в аэропортах.',\r\n    background: background_1,\r\n  },\r\n  {\r\n    title: 'Страховка',\r\n    content: 'Полная страховка страховка автомобиля',\r\n    background: background_2,\r\n  },\r\n  {\r\n    title: 'Бензин',\r\n    content: 'Полный бак на любой заправке города за наш счёт',\r\n    background: background_3,\r\n  },\r\n  {\r\n    title: 'Обслуживание',\r\n    content: 'Автомобиль проходит еженедельное ТО',\r\n    background: background_4,\r\n  },\r\n];\r\n","import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\nimport { Layout, Menu, Image } from 'antd';\r\nimport { menuItems, socialNetworks } from '../.././../constants/mainPage';\r\nimport { page } from '../../../redux/selectors';\r\nimport './style.scss';\r\n\r\nconst { Sider } = Layout;\r\nconst { Item } = Menu;\r\n\r\nexport const SideBar: React.FunctionComponent = () => {\r\n  const currentPage = useSelector(page).split('/');\r\n\r\n  const [widthPercent, setWidthPercent] = useState<string | number>(80);\r\n  const [sideOpen, setSideOpen] = useState<boolean>(false);\r\n\r\n  const showMenu = () => {\r\n    if (sideOpen) {\r\n      setWidthPercent(80);\r\n      setSideOpen(false);\r\n    } else {\r\n      setWidthPercent('100%');\r\n      setSideOpen(true);\r\n    }\r\n  };\r\n\r\n  const switchSlide = () => {\r\n    setSideOpen(false);\r\n    setWidthPercent(80);\r\n  };\r\n\r\n  const showContent = () => {\r\n    if (sideOpen) {\r\n      return (\r\n        <div className=\"menu\">\r\n          <div className=\"menu-open\">\r\n            <div className=\"inner-wrapper\">\r\n              <Menu className=\"items\">\r\n                {menuItems.map((item: string) => (\r\n                  <Item onClick={() => switchSlide()} key={item}>\r\n                    <Link to=\"/carsharing\" className=\"item\">\r\n                      {item.toUpperCase()}\r\n                    </Link>\r\n                  </Item>\r\n                ))}\r\n              </Menu>\r\n              <ul className=\"links\">\r\n                {socialNetworks.map(\r\n                  (network: {\r\n                    picture: string;\r\n                    name: string;\r\n                    link: string;\r\n                  }) => {\r\n                    const { picture, name, link } = network;\r\n                    return (\r\n                      <a href={link} target=\"blank\" key={name} className=\"link\">\r\n                        <Image\r\n                          src={picture}\r\n                          alt=\"social\"\r\n                          preview={false}\r\n                          className=\"img\"\r\n                        />\r\n                      </a>\r\n                    );\r\n                  }\r\n                )}\r\n              </ul>\r\n            </div>\r\n          </div>\r\n          <div\r\n            className={\r\n              currentPage[currentPage.length - 1] === 'order'\r\n                ? 'menu-full dark'\r\n                : 'menu-full light'\r\n            }\r\n          ></div>\r\n        </div>\r\n      );\r\n    }\r\n    return null;\r\n  };\r\n\r\n  return (\r\n    <Sider className=\"sidebar\" width={widthPercent}>\r\n      <div\r\n        onClick={showMenu}\r\n        className={sideOpen ? 'btn-off btn' : 'btn-on btn'}\r\n      />\r\n      {showContent()}\r\n    </Sider>\r\n  );\r\n};\r\n","export default __webpack_public_path__ + \"static/media/left.1752ae91.svg\";","export default __webpack_public_path__ + \"static/media/right.7591c327.svg\";","import React, { useRef } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Carousel, Image, Layout, Button } from 'antd';\r\nimport classNames from 'classnames';\r\nimport { sliderItems } from '../../../constants/mainPage';\r\nimport left from '../../../assets/mainPage/slider/left.svg';\r\nimport right from '../../../assets/mainPage/slider/right.svg';\r\nimport './style.scss';\r\n\r\nconst { Content } = Layout;\r\n\r\nexport const Slider: React.FunctionComponent = () => {\r\n  const sliderRef = useRef(null);\r\n\r\n  const handlerLeft = () => sliderRef.current.prev();\r\n  const handlerRight = () => sliderRef.current.next();\r\n\r\n  return (\r\n    <Carousel\r\n      className=\"main-page__slider\"\r\n      dots={{ className: 'btn-down' }}\r\n      ref={sliderRef}\r\n    >\r\n      {sliderItems.map(({ title, content, background }, index) => {\r\n        return (\r\n          <Layout key={title} className=\"wrapper\">\r\n            <Content className=\"slide\">\r\n              <Image\r\n                src={background}\r\n                alt={title}\r\n                className={classNames('background', `background-${index}`)}\r\n                preview={false}\r\n              />\r\n              <div className=\"filter\"></div>\r\n              <Button\r\n                type=\"ghost\"\r\n                className=\"control-left control\"\r\n                onClick={handlerLeft}\r\n              >\r\n                <Image src={left} alt=\"left\" preview={false} />\r\n              </Button>\r\n              <Button\r\n                type=\"ghost\"\r\n                className=\"control-right control\"\r\n                onClick={handlerRight}\r\n              >\r\n                <Image src={right} alt=\"right\" preview={false} />\r\n              </Button>\r\n              <div className=\"content\">\r\n                <span className=\"title\">{title}</span>\r\n                <div className=\"description\">{content}</div>\r\n                <Link to=\"/carsharing/order\">\r\n                  <Button\r\n                    className={classNames('btn', `btn-${index}`)}\r\n                    type=\"primary\"\r\n                  >\r\n                    Подробнее\r\n                  </Button>\r\n                </Link>\r\n              </div>\r\n            </Content>\r\n          </Layout>\r\n        );\r\n      })}\r\n    </Carousel>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { Layout } from 'antd';\r\nimport { Order } from './Order';\r\nimport { SideBar } from '../common/SideBar';\r\nimport { Slider } from './Slider';\r\nimport './style.scss';\r\n\r\nexport const MainPage: React.FunctionComponent = () => (\r\n  <Layout\r\n    className=\"main-page\"\r\n    style={{ overflow: 'hidden', background: '#fff' }}\r\n  >\r\n    <SideBar />\r\n    <Order />\r\n    <Slider />\r\n  </Layout>\r\n);\r\n","interface HTTPResponseCoords {\r\n  results: {\r\n    geometry: { lat: number; lng: number };\r\n    components: { _type: string };\r\n  }[];\r\n}\r\n\r\nexport const getCoordinates: (\r\n  placeName: string\r\n) => Promise<HTTPResponseCoords> = async (placeName: string) => {\r\n  try {\r\n    const url = `https://api.opencagedata.com/geocode/v1/json?q=${placeName.trim()}&key=${\r\n      process.env.REACT_APP_OPENCAGEDATA\r\n    }`;\r\n    const response = await fetch(url);\r\n\r\n    if (!response.ok) {\r\n      throw new Error(`HTTPS ${response.status}: ${await response.text()}`);\r\n    }\r\n\r\n    const data = await response.json();\r\n    return data;\r\n  } catch (error) {\r\n    throw new Error(`Error in geocode - ${error.message}`);\r\n  }\r\n};\r\n","import React, { useState, useEffect, useRef } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport mapboxgl from 'mapbox-gl';\r\nimport 'mapbox-gl/dist/mapbox-gl.css';\r\nimport 'react-map-gl-geocoder/dist/mapbox-gl-geocoder.css';\r\nimport { getCoordinates } from '../../../../server/geocodeLocation';\r\nimport { info, list } from '../../../../redux/selectors';\r\nimport './style.scss';\r\n\r\nexport const Map: React.FunctionComponent<{ points: string[] }> = ({\r\n  points,\r\n}) => {\r\n  const userData = useSelector(info);\r\n  const userPoint = useSelector(list);\r\n\r\n  const [dataBase, setDataBase] = useState<string[]>([]);\r\n\r\n  const [userCoordsData, setUserCoordsData] = useState<{ [x: string]: number }>(\r\n    {\r\n      latitude: 0,\r\n      longtitude: 0,\r\n      zoom: 10,\r\n    }\r\n  );\r\n  const mapContainer = useRef<HTMLDivElement>(null);\r\n  const [map, setMap] = useState(null);\r\n\r\n  const { userCity } = userData;\r\n  const { value } = userPoint[0];\r\n\r\n  useEffect(() => {\r\n    if (userCity || value.length) {\r\n      getCoordinates(`${userCity} ${value}`).then(({ results }) => {\r\n        let lat;\r\n        let lng;\r\n        if (value.length === 0) {\r\n          const cityList = results.filter((item) => {\r\n            if (item.components._type === 'city') {\r\n              return true;\r\n            }\r\n          });\r\n          const [{ geometry }] = cityList;\r\n          lng = geometry.lng;\r\n          lat = geometry.lat;\r\n        } else {\r\n          const [{ geometry }] = results;\r\n          lng = geometry.lng;\r\n          lat = geometry.lat;\r\n        }\r\n        setUserCoordsData({\r\n          latitude: lat,\r\n          longtitude: lng,\r\n          zoom: value.length ? 15 : 10,\r\n        });\r\n      });\r\n    }\r\n  }, [userCity, value]);\r\n\r\n  useEffect(() => {\r\n    if (userCity && map && points) {\r\n      points.forEach((address) => {\r\n        if (!dataBase.includes(address)) {\r\n          setDataBase((prev) => [...prev, address]);\r\n          getCoordinates(`${userCity}, ${address}`).then(({ results }) => {\r\n            if (results.length) {\r\n              const { geometry } = results[0];\r\n              const { lat, lng } = geometry;\r\n              new mapboxgl.Marker().setLngLat([lng, lat]).addTo(map);\r\n            }\r\n          });\r\n        }\r\n      });\r\n    }\r\n  }, [userCity, map, points]);\r\n\r\n  useEffect(() => {\r\n    if (userCoordsData.latitude) {\r\n      mapboxgl.accessToken = process.env.REACT_APP_MAP;\r\n\r\n      const initMap = (\r\n        setMap: React.Dispatch<React.SetStateAction<mapboxgl.Map>>,\r\n        mapContainer: React.RefObject<HTMLDivElement>\r\n      ) => {\r\n        if (!mapContainer.current) {\r\n          return null;\r\n        }\r\n        const { latitude, longtitude, zoom } = userCoordsData;\r\n\r\n        const map = new mapboxgl.Map({\r\n          container: mapContainer.current,\r\n          style: 'mapbox://styles/mapbox/outdoors-v11',\r\n          center: [longtitude, latitude],\r\n          zoom,\r\n          bearing: 0,\r\n        });\r\n\r\n        setMap(map);\r\n      };\r\n      if (!map) {\r\n        initMap(setMap, mapContainer);\r\n      }\r\n    }\r\n  }, [map, userCoordsData]);\r\n\r\n  useEffect(() => {\r\n    if (map !== null) {\r\n      map.flyTo({\r\n        center: [userCoordsData.longtitude, userCoordsData.latitude],\r\n        essential: true,\r\n        zoom: userCoordsData.zoom,\r\n      });\r\n    }\r\n  }, [userCoordsData]);\r\n\r\n  return <div ref={mapContainer} className=\"mapContainer\" />;\r\n};\r\n","const urlCommon =\r\n  'https://cors-anywhere.herokuapp.com/http://api-factory.simbirsoft1.com/api/db/';\r\nconst headerCommon = {\r\n  'X-Api-Factory-Application-Id': '5e25c641099b810b946c5d5b',\r\n};\r\n\r\nexport const getCars: () => Promise<{\r\n  data: {\r\n    categoryId: { name: string };\r\n    name: string;\r\n    priceMin: number;\r\n    priceMax: number;\r\n    thumbnail: { path: string };\r\n  }[];\r\n}> = async () => {\r\n  try {\r\n    const url = `${urlCommon}car`;\r\n    const response = await fetch(url, {\r\n      headers: headerCommon,\r\n    });\r\n\r\n    if (!response.ok) {\r\n      throw new Error(`HTTP ${response.status}: ${await response.text()}`);\r\n    }\r\n\r\n    const data = await response.json();\r\n    return data;\r\n  } catch (error) {\r\n    throw new Error(`Error in database cars: ${error.message}`);\r\n  }\r\n};\r\n\r\nexport const getCities: () => Promise<{\r\n  data: { name: string }[];\r\n}> = async () => {\r\n  try {\r\n    const url = `${urlCommon}city`;\r\n    const response = await fetch(url, {\r\n      headers: headerCommon,\r\n    });\r\n\r\n    if (!response.ok) {\r\n      throw new Error(`HTTP ${response.status}: ${await response.text()}`);\r\n    }\r\n\r\n    const data = await response.json();\r\n    return data;\r\n  } catch (error) {\r\n    throw new Error(`Error in database cars: ${error.message}`);\r\n  }\r\n};\r\n\r\nexport const getPoints: () => Promise<{\r\n  data: { cityId: { name: string }; address: string }[];\r\n}> = async () => {\r\n  try {\r\n    const url = `${urlCommon}point`;\r\n    const response = await fetch(url, {\r\n      headers: headerCommon,\r\n    });\r\n\r\n    if (!response.ok) {\r\n      throw new Error(`HTTP ${response.status}: ${await response.text()}`);\r\n    }\r\n\r\n    const data = await response.json();\r\n    return data;\r\n  } catch (error) {\r\n    throw new Error(`Error in database cars: ${error.message}`);\r\n  }\r\n};\r\n","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { Select } from 'antd';\r\n\r\nconst { Option } = Select;\r\n\r\ninterface AddressType {\r\n  options: string[];\r\n  name: string;\r\n  changeOption: (item: string) => { type: string; payload: string };\r\n  initValue: string;\r\n  deletePoint?: (item: string) => { type: string; payload: string };\r\n  deleteOption: boolean;\r\n}\r\n\r\nexport const SelectAddress: React.FunctionComponent<AddressType> = ({\r\n  options,\r\n  name,\r\n  changeOption,\r\n  initValue,\r\n  deletePoint,\r\n  deleteOption,\r\n}) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const addAddressToState = (item: string) => {\r\n    if (deleteOption) {\r\n      dispatch(deletePoint(''));\r\n    }\r\n    dispatch(changeOption(item));\r\n  };\r\n\r\n  return (\r\n    <Select\r\n      placeholder={`Начните вводить ${name}`}\r\n      className=\"select\"\r\n      showArrow={false}\r\n      showSearch={true}\r\n      bordered={false}\r\n      onChange={(value: string) => addAddressToState(value)}\r\n      value={initValue}\r\n    >\r\n      {options.map((item: string) => (\r\n        <Option value={item} label={item} key={item}>\r\n          {item}\r\n        </Option>\r\n      ))}\r\n    </Select>\r\n  );\r\n};\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { Map } from './Map';\r\nimport { getCities, getPoints } from '../../../server/data';\r\nimport { changePoint, changeUserCity } from '../../../redux/actions';\r\nimport { info, list } from '../../../redux/selectors';\r\nimport { SelectAddress } from './SelectAddress';\r\nimport './style.scss';\r\n\r\nexport const Location: React.FunctionComponent = () => {\r\n  const [cities, setCities] = useState<string[]>([]);\r\n  const [points, setPointTest] = useState<string[]>([]);\r\n\r\n  const cityData = useSelector(info);\r\n  const pointValue = useSelector(list);\r\n\r\n  const checkPoint = pointValue[0].value;\r\n\r\n  const { userCity } = cityData;\r\n\r\n  useEffect(() => {\r\n    getCities().then((city) => {\r\n      const result = city.data.map(({ name }) => name);\r\n      setCities(result);\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (userCity.length) {\r\n      getPoints().then((point) => {\r\n        const set: Set<string> = new Set();\r\n        point.data.forEach((item) => {\r\n          if (item.cityId.name === userCity) {\r\n            if (item.address === 'Нариманова 1, корп.2') {\r\n              item.address = 'Нариманова 1';\r\n            }\r\n            set.add(item.address);\r\n          }\r\n        });\r\n        setPointTest(Array.from(set));\r\n      });\r\n    }\r\n  }, [userCity]);\r\n\r\n  return (\r\n    <div className=\"location\">\r\n      <div className=\"city\">\r\n        <span className=\"name\">Город:</span>\r\n        <SelectAddress\r\n          options={cities}\r\n          name={'город'}\r\n          changeOption={changeUserCity}\r\n          deletePoint={changePoint}\r\n          initValue={userCity}\r\n          deleteOption={true}\r\n        />\r\n      </div>\r\n      <div className=\"point\">\r\n        <span className=\"name\">Пункт выдачи:</span>\r\n        <SelectAddress\r\n          options={points}\r\n          name={'пункт'}\r\n          changeOption={changePoint}\r\n          initValue={checkPoint}\r\n          deleteOption={false}\r\n        />\r\n      </div>\r\n      <div className=\"map\">\r\n        <span className=\"name\">Выбрать на карте:</span>\r\n        <Map points={points} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { Spin } from 'antd';\r\n\r\ninterface SpinInterface {\r\n  condition: boolean;\r\n}\r\n\r\nexport const Loader: React.FunctionComponent<SpinInterface> = ({\r\n  condition,\r\n}) => {\r\n  if (condition) {\r\n    return <Spin />;\r\n  }\r\n  return null;\r\n};\r\n","type ArrayStatuses = [string, string, string, string];\r\ntype ArrayBtn = [string, string, string];\r\n\r\nexport const statuses: ArrayStatuses = [\r\n  'Местоположение',\r\n  'Модель',\r\n  'Дополнительно',\r\n  'Итого',\r\n];\r\n\r\nexport const radioBtnsText: ArrayBtn = ['Все модели', 'Эконом', 'Премиум'];\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport classnames from 'classnames';\r\nimport { Card, Radio } from 'antd';\r\nimport { Loader } from '../../common/Loader';\r\nimport { getCars } from '../../../server/data';\r\nimport { changeModel } from '../../../redux/actions';\r\nimport { list } from '../../../redux/selectors';\r\nimport { radioBtnsText } from '../../../constants/orderPage';\r\nimport './style.scss';\r\n\r\ninterface CarsData {\r\n  name: string;\r\n  priceMin: number;\r\n  priceMax: number;\r\n  picture: string;\r\n  cat: string;\r\n}\r\n\r\nexport const Cars: React.FunctionComponent = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const userCar = useSelector(list);\r\n  const currentCar = userCar[1].value;\r\n\r\n  const [cars, setCars] = useState<CarsData[]>([]);\r\n  const [radioBtn, setRadioBtn] = useState('Все модели');\r\n  const [condition, setCondition] = useState(true);\r\n  const [arrayCars, setArrayCars] = useState<CarsData[]>([]);\r\n\r\n  useEffect(() => {\r\n    getCars().then(({ data }) => {\r\n      const path = data.filter(({ thumbnail }) => {\r\n        if (thumbnail.path.startsWith('/files/')) {\r\n          return true;\r\n        }\r\n      });\r\n      const result = path.map(\r\n        ({ priceMin, priceMax, name, thumbnail, categoryId }) => {\r\n          return {\r\n            priceMin,\r\n            priceMax,\r\n            name,\r\n            picture: thumbnail.path,\r\n            cat: categoryId.name,\r\n          };\r\n        }\r\n      );\r\n      setCars(result);\r\n      setArrayCars(result);\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const result = arrayCars.filter(({ cat }) => {\r\n      switch (radioBtn) {\r\n        case cat:\r\n          return true;\r\n        case radioBtnsText[0]:\r\n          return true;\r\n        default:\r\n          return false;\r\n      }\r\n    });\r\n    setCars(result);\r\n  }, [radioBtn]);\r\n\r\n  useEffect(() => {\r\n    cars.length === 0 ? setCondition(true) : setCondition(false);\r\n  }, [cars]);\r\n\r\n  return (\r\n    <div className=\"cards\">\r\n      <Loader condition={condition} />\r\n      <Radio.Group\r\n        onChange={(e) => setRadioBtn(e.target.value)}\r\n        value={radioBtn}\r\n        className=\"radio-btns\"\r\n      >\r\n        {radioBtnsText.map((text) => (\r\n          <Radio value={text} key={text}>\r\n            {text}\r\n          </Radio>\r\n        ))}\r\n      </Radio.Group>\r\n      {cars.map(({ name, priceMin, priceMax, picture }, index) => {\r\n        return (\r\n          <Card\r\n            size=\"small\"\r\n            title={\r\n              <>\r\n                <div className=\"title\">{name}</div>\r\n                <div className=\"price\">{`${priceMin} - ${priceMax} Р`}</div>\r\n              </>\r\n            }\r\n            key={index}\r\n            className={\r\n              currentCar === name ? classnames('active', 'card') : 'card'\r\n            }\r\n            onClick={() => dispatch(changeModel(name))}\r\n          >\r\n            <img\r\n              className=\"image\"\r\n              src={`http://api-factory.simbirsoft1.com${picture}`}\r\n              alt={name}\r\n            />\r\n          </Card>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { Button } from 'antd';\r\nimport classnames from 'classnames';\r\nimport { useSelector } from 'react-redux';\r\nimport { list } from '../../../redux/selectors';\r\nimport { statuses } from '../../../constants/orderPage';\r\nimport { NumberForms } from '../../../interfaces';\r\nimport './style.scss';\r\n\r\ninterface ResultInterface {\r\n  numberStatus: NumberForms;\r\n  switchForm: () => void;\r\n}\r\n\r\nexport const Result: React.FunctionComponent<ResultInterface> = ({\r\n  numberStatus,\r\n  switchForm,\r\n}) => {\r\n  const orderList = useSelector(list);\r\n\r\n  return (\r\n    <div className=\"result\">\r\n      <h2>Ваш заказ</h2>\r\n      {orderList.map(({ name, value, orderNumber }) => {\r\n        if (orderNumber <= numberStatus.current) {\r\n          return (\r\n            <div className=\"list\" key={name}>\r\n              <div className=\"dots link\">\r\n                <span className=\"field\">{name}</span>\r\n              </div>\r\n              <span className=\"address\">{value}</span>\r\n            </div>\r\n          );\r\n        }\r\n      })}\r\n      <div className=\"price\">\r\n        <span>Цена:</span> от 8 000 до 12 000 ₽\r\n      </div>\r\n      <Button\r\n        disabled={orderList[numberStatus.active].value.length ? false : true}\r\n        onClick={() => switchForm()}\r\n        className={\r\n          orderList[numberStatus.active].value.length\r\n            ? classnames('btn', 'btn-active')\r\n            : classnames('btn', 'btn-disable')\r\n        }\r\n      >\r\n        {statuses[numberStatus.active + 1]}\r\n      </Button>\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport classnames from 'classnames';\r\nimport { NumberForms } from '../../../interfaces';\r\nimport { statuses } from '../../../constants/orderPage';\r\nimport './style.scss';\r\n\r\ninterface TabsInterface {\r\n  numberStatus: NumberForms;\r\n  setNumberStatus: (NumberForms) => void;\r\n}\r\n\r\nexport const Tabs: React.FunctionComponent<TabsInterface> = ({\r\n  numberStatus,\r\n  setNumberStatus,\r\n}) => {\r\n  const checkCurrentStatus = (ind: number) => {\r\n    return numberStatus.current === ind ? 'status-active' : '';\r\n  };\r\n\r\n  const checkPrevStatus = (ind: number) => {\r\n    const prevStatus = statuses.findIndex(\r\n      (_, index) => index === numberStatus.current\r\n    );\r\n    return ind < prevStatus ? 'status-prev' : '';\r\n  };\r\n\r\n  const hiddenMobile = (ind: number) => {\r\n    const current = numberStatus.active;\r\n    return ind >= current - 1 && ind <= current + 1 ? '' : 'status-mobile';\r\n  };\r\n\r\n  return (\r\n    <div className=\"statuses\">\r\n      {statuses.map((status: string, index: number) => (\r\n        <span\r\n          key={status}\r\n          onClick={() =>\r\n            index <= numberStatus.current\r\n              ? setNumberStatus({ ...numberStatus, active: index })\r\n              : null\r\n          }\r\n          className={classnames(\r\n            'status',\r\n            checkCurrentStatus(index),\r\n            checkPrevStatus(index),\r\n            hiddenMobile(index)\r\n          )}\r\n        >\r\n          {status}\r\n        </span>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState } from 'react';\r\nimport { Layout } from 'antd';\r\nimport { Location } from './Location';\r\nimport { Cars } from './Cars';\r\nimport { SideBar } from '../../components/common/SideBar';\r\nimport { Head } from '../common/Head';\r\nimport { Result } from './Result';\r\nimport { Tabs } from './Tabs';\r\nimport './style.scss';\r\n\r\nconst { Content } = Layout;\r\n\r\nexport const OrderPage: React.FunctionComponent = () => {\r\n  const [numberStatus, setNumberStatus] = useState<{\r\n    active: number;\r\n    current: number;\r\n  }>({ active: 0, current: 0 });\r\n\r\n  const switchForm = () => {\r\n    const nextStatus = numberStatus.active + 1;\r\n    if (nextStatus > numberStatus.current) {\r\n      setNumberStatus({\r\n        current: nextStatus,\r\n        active: nextStatus,\r\n      });\r\n    } else {\r\n      setNumberStatus({ ...numberStatus, active: nextStatus });\r\n    }\r\n  };\r\n\r\n  const showCurrentStatus = () => {\r\n    switch (numberStatus.active) {\r\n      case 0:\r\n        return <Location />;\r\n      case 1:\r\n        return <Cars />;\r\n      case 2:\r\n        return <div />;\r\n      default:\r\n        return <div />;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Layout\r\n      className=\"order-page\"\r\n      style={{ overflow: 'hidden', background: '#fff' }}\r\n    >\r\n      <SideBar />\r\n      <Content className=\"wrapper\">\r\n        <Layout>\r\n          <Head />\r\n          <Content className=\"tabs\">\r\n            <Tabs\r\n              numberStatus={numberStatus}\r\n              setNumberStatus={setNumberStatus}\r\n            />\r\n          </Content>\r\n          <Content className=\"content\">\r\n            <div className=\"forms\">{showCurrentStatus()}</div>\r\n            <Result numberStatus={numberStatus} switchForm={switchForm} />\r\n          </Content>\r\n        </Layout>\r\n      </Content>\r\n    </Layout>\r\n  );\r\n};\r\n","import { CHANGE_USER_CITY } from '../type';\r\nimport { GenericAction } from '../../interfaces';\r\n\r\ntype InfoState = { userCity: string };\r\n\r\nconst currentState: InfoState = {\r\n  userCity: '',\r\n};\r\n\r\nexport const userInfoReducer = (\r\n  state: InfoState = currentState,\r\n  action: GenericAction\r\n) => {\r\n  const { type, payload } = action;\r\n  switch (type) {\r\n    case CHANGE_USER_CITY:\r\n      return { ...state, userCity: payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { initState } from '../../constants/redux';\r\nimport { CHANGE_POINT, CHANGE_MODEL } from '../../redux/type';\r\nimport { OrderType } from '../../interfaces';\r\nimport { GenericAction } from '../../interfaces';\r\n\r\nconst currentState = {\r\n  orderList: initState,\r\n};\r\n\r\nexport const userOrderReducer = (\r\n  state: { orderList: OrderType[] } = currentState,\r\n  action: GenericAction\r\n) => {\r\n  const { type, payload } = action;\r\n  switch (type) {\r\n    case CHANGE_POINT:\r\n      return {\r\n        orderList: state.orderList.map((item, index) => {\r\n          return index === 0 ? { ...item, value: payload } : item;\r\n        }),\r\n      };\r\n    case CHANGE_MODEL:\r\n      return {\r\n        orderList: state.orderList.map((item, index) => {\r\n          return index === 1 ? { ...item, value: payload } : item;\r\n        }),\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { OrderType } from '../../interfaces';\r\n\r\nexport const initState: OrderType[] = [\r\n  {\r\n    name: 'Пункт выдачи',\r\n    value: '',\r\n    orderNumber: 0,\r\n  },\r\n  {\r\n    name: 'Модель',\r\n    value: '',\r\n    orderNumber: 1,\r\n  },\r\n  {\r\n    name: 'Цвет',\r\n    value: '',\r\n    orderNumber: 2,\r\n  },\r\n  {\r\n    name: 'Длительность аренды',\r\n    value: '',\r\n    orderNumber: 2,\r\n  },\r\n  {\r\n    name: 'Тариф',\r\n    value: '',\r\n    orderNumber: 2,\r\n  },\r\n  {\r\n    name: 'Полный бак',\r\n    value: '',\r\n    orderNumber: 2,\r\n  },\r\n];\r\n","import React from 'react';\r\nimport { BrowserRouter as Switch, Route } from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { createStore } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport { ConnectedRouter } from 'connected-react-router';\r\nimport { MainPage } from './components/mainPage';\r\nimport { OrderPage } from './components/orderPage';\r\nimport 'antd/dist/antd.css';\r\nimport './App.scss';\r\nimport { createRootReducer } from './redux/rootReducer';\r\n\r\nimport { createBrowserHistory } from 'history';\r\n\r\nconst history = createBrowserHistory();\r\n\r\nconst store = createStore(createRootReducer(history), composeWithDevTools());\r\n\r\nconst App: React.FunctionComponent = () => (\r\n  <Provider store={store}>\r\n    <ConnectedRouter history={history}>\r\n      <Switch>\r\n        <Route exact path=\"/carsharing/\">\r\n          <MainPage />\r\n        </Route>\r\n        <Route exact path=\"/carsharing/order\">\r\n          <OrderPage />\r\n        </Route>\r\n      </Switch>\r\n    </ConnectedRouter>\r\n  </Provider>\r\n);\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals: () => void = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.scss';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}